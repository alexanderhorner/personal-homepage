{"mappings":"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C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACtG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACxG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACxG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACtG,GAAG,CAAC,EAAE,MAAM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,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;AACvH,CAAC;SAUe,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACtB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACtB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACtB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACtB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACtB,GAAG,CAAC,EAAE,IAAI,CA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CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-10dc6288c8b09c7b.js","node_modules/@gltf-transform/core/dist/core.modern.js","node_modules/@gltf-transform/core/src/constants.ts","node_modules/@gltf-transform/core/src/utils/bounds.ts","node_modules/@gltf-transform/core/src/utils/buffer-utils.ts","node_modules/@gltf-transform/core/src/utils/color-utils.ts","node_modules/@gltf-transform/core/src/utils/file-utils.ts","node_modules/@gltf-transform/core/src/utils/image-utils.ts","node_modules/@gltf-transform/core/src/utils/is-plain-object.ts","node_modules/@gltf-transform/core/src/utils/logger.ts","node_modules/@gltf-transform/core/src/utils/math-utils.ts","node_modules/@gltf-transform/core/src/utils/property-utils.ts","node_modules/@gltf-transform/core/src/utils/uuid.ts","node_modules/@gltf-transform/core/src/utils/http-utils.ts","node_modules/@gltf-transform/core/src/properties/property.ts","node_modules/@gltf-transform/core/src/properties/extensible-property.ts","node_modules/@gltf-transform/core/src/properties/accessor.ts","node_modules/@gltf-transform/core/src/properties/animation.ts","node_modules/@gltf-transform/core/src/properties/animation-channel.ts","node_modules/@gltf-transform/core/src/properties/animation-sampler.ts","node_modules/@gltf-transform/core/src/properties/buffer.ts","node_modules/@gltf-transform/core/src/properties/camera.ts","node_modules/@gltf-transform/core/src/properties/extension-property.ts","node_modules/@gltf-transform/core/src/properties/texture-info.ts","node_modules/@gltf-transform/core/src/properties/material.ts","node_modules/@gltf-transform/core/src/properties/mesh.ts","node_modules/@gltf-transform/core/src/properties/node.ts","node_modules/@gltf-transform/core/src/properties/primitive.ts","node_modules/@gltf-transform/core/src/properties/primitive-target.ts","node_modules/@gltf-transform/core/src/properties/scene.ts","node_modules/@gltf-transform/core/src/properties/skin.ts","node_modules/@gltf-transform/core/src/properties/texture.ts","node_modules/@gltf-transform/core/src/properties/root.ts","node_modules/@gltf-transform/core/src/document.ts","node_modules/@gltf-transform/core/src/extension.ts","node_modules/@gltf-transform/core/src/io/reader-context.ts","node_modules/@gltf-transform/core/src/io/reader.ts","node_modules/@gltf-transform/core/src/io/writer-context.ts","node_modules/@gltf-transform/core/src/io/writer.ts","node_modules/@gltf-transform/core/src/io/platform-io.ts","node_modules/@gltf-transform/core/src/io/node-io.ts","node_modules/@gltf-transform/core/src/io/deno-io.ts","node_modules/@gltf-transform/core/src/io/web-io.ts","node_modules/property-graph/dist/property-graph.modern.js","node_modules/property-graph/src/event-dispatcher.ts","node_modules/property-graph/src/graph-edge.ts","node_modules/property-graph/src/graph.ts","node_modules/property-graph/src/utils.ts","node_modules/property-graph/src/graph-node.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/gl-matrix/esm/vec3.js","node_modules/gl-matrix/esm/common.js","node_modules/gl-matrix/esm/mat4.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@parcel/node-resolver-core/lib/_empty.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7f4db08047e868ec\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,"// Injected at compile time, from $npm_package_version.\ndeclare const PACKAGE_VERSION: string;\n\n/**\n * Current version of the package.\n * @hidden\n */\nexport const VERSION = `v${PACKAGE_VERSION}`;\n\n/** @internal */\nexport const NAME = '@gltf-transform/core';\n\n/**\n * Interface allowing Accessor setter/getter methods to be used interchangeably with gl-matrix\n * arrays or with three.js math objects' fromArray/toArray methods. For example, THREE.Vector2,\n * THREE.Vector3, THREE.Vector4, THREE.Quaternion, THREE.Matrix3, THREE.Matrix4, and THREE.Color.\n *\n * @internal\n */\nexport interface ArrayProxy {\n\t/** Sets the value of the object from an array of values. */\n\tfromArray(array: number[]): ArrayProxy;\n\t/** Writes the value of the object into the given array. */\n\ttoArray(array: number[]): number[];\n}\n\n/**\n * TypeScript utility for nullable types.\n * @hidden\n */\nexport type Nullable<T> = { [P in keyof T]: T[P] | null };\n\n/**\n * 2-dimensional vector.\n * @hidden\n */\nexport type vec2 = [number, number];\n\n/**\n * 3-dimensional vector.\n * @hidden\n */\nexport type vec3 = [number, number, number];\n\n/**\n * 4-dimensional vector, e.g. RGBA or a quaternion.\n * @hidden\n */\nexport type vec4 = [number, number, number, number];\n\n// prettier-ignore\n/**\n * 3x3 matrix, e.g. an affine transform of a 2D vector.\n * @hidden\n */\nexport type mat3 = [\n\tnumber, number, number,\n\tnumber, number, number,\n\tnumber, number, number,\n];\n\n// prettier-ignore\n/**\n * 4x4 matrix, e.g. an affine transform of a 3D vector.\n * @hidden\n */\nexport type mat4 = [\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n];\n\n/** @hidden */\nexport type bbox = { min: vec3; max: vec3 };\n\n/** @hidden */\nexport const GLB_BUFFER = '@glb.bin';\n\n/**\n * Abstraction representing any one of the typed array classes supported by glTF and JavaScript.\n * @hidden\n */\nexport type TypedArray = Float32Array | Uint32Array | Uint16Array | Uint8Array | Int16Array | Int8Array;\n\n/**\n * Abstraction representing the typed array constructors supported by glTF and JavaScript.\n * @hidden\n */\nexport type TypedArrayConstructor =\n\t| Float32ArrayConstructor\n\t| Uint32ArrayConstructor\n\t| Uint16ArrayConstructor\n\t| Uint8ArrayConstructor\n\t| Int16ArrayConstructor\n\t| Int8ArrayConstructor;\n\n/** String IDs for core {@link Property} types. */\nexport enum PropertyType {\n\tACCESSOR = 'Accessor',\n\tANIMATION = 'Animation',\n\tANIMATION_CHANNEL = 'AnimationChannel',\n\tANIMATION_SAMPLER = 'AnimationSampler',\n\tBUFFER = 'Buffer',\n\tCAMERA = 'Camera',\n\tMATERIAL = 'Material',\n\tMESH = 'Mesh',\n\tPRIMITIVE = 'Primitive',\n\tPRIMITIVE_TARGET = 'PrimitiveTarget',\n\tNODE = 'Node',\n\tROOT = 'Root',\n\tSCENE = 'Scene',\n\tSKIN = 'Skin',\n\tTEXTURE = 'Texture',\n\tTEXTURE_INFO = 'TextureInfo',\n}\n\n/** Vertex layout method. */\nexport enum VertexLayout {\n\t/**\n\t * Stores vertex attributes in a single buffer view per mesh primitive. Interleaving vertex\n\t * data may improve performance by reducing page-thrashing in GPU memory.\n\t */\n\tINTERLEAVED = 'interleaved',\n\n\t/**\n\t * Stores each vertex attribute in a separate buffer view. May decrease performance by causing\n\t * page-thrashing in GPU memory. Some 3D engines may prefer this layout, e.g. for simplicity.\n\t */\n\tSEPARATE = 'separate',\n}\n\n/** Accessor usage. */\nexport enum BufferViewUsage {\n\tARRAY_BUFFER = 'ARRAY_BUFFER',\n\tELEMENT_ARRAY_BUFFER = 'ELEMENT_ARRAY_BUFFER',\n\tINVERSE_BIND_MATRICES = 'INVERSE_BIND_MATRICES',\n\tOTHER = 'OTHER',\n}\n\n/** Texture channels. */\nexport enum TextureChannel {\n\tR = 0x1000,\n\tG = 0x0100,\n\tB = 0x0010,\n\tA = 0x0001,\n}\n\nexport enum Format {\n\tGLTF = 'GLTF',\n\tGLB = 'GLB',\n}\n","import { transformMat4 } from 'gl-matrix/vec3';\nimport { PropertyType, bbox, mat4, vec3 } from '../constants';\nimport type { Mesh, Node, Scene } from '../properties';\n\n/**\n * Computes bounding box (AABB) in world space for the given {@link Node} or {@link Scene}.\n *\n * Example:\n *\n * ```ts\n * const {min, max} = bounds(scene);\n * ```\n */\nexport function bounds(node: Node | Scene): bbox {\n\tconst resultBounds = createBounds();\n\tconst parents = node.propertyType === PropertyType.NODE ? [node] : node.listChildren();\n\n\tfor (const parent of parents) {\n\t\tparent.traverse((node) => {\n\t\t\tconst mesh = node.getMesh();\n\t\t\tif (!mesh) return;\n\n\t\t\t// Compute mesh bounds and update result.\n\t\t\tconst meshBounds = getMeshBounds(mesh, node.getWorldMatrix());\n\t\t\texpandBounds(meshBounds.min, resultBounds);\n\t\t\texpandBounds(meshBounds.max, resultBounds);\n\t\t});\n\t}\n\n\treturn resultBounds;\n}\n\n/** Computes mesh bounds in local space. */\nfunction getMeshBounds(mesh: Mesh, worldMatrix: mat4): bbox {\n\tconst meshBounds = createBounds();\n\n\t// We can't transform a local AABB into world space and still have a tight AABB in world space,\n\t// so we need to compute the world AABB vertex by vertex here.\n\tfor (const prim of mesh.listPrimitives()) {\n\t\tconst position = prim.getAttribute('POSITION');\n\t\tif (!position) continue;\n\n\t\tlet localPos: vec3 = [0, 0, 0];\n\t\tlet worldPos: vec3 = [0, 0, 0];\n\t\tfor (let i = 0; i < position.getCount(); i++) {\n\t\t\tlocalPos = position.getElement(i, localPos) as vec3;\n\t\t\tworldPos = transformMat4(worldPos, localPos, worldMatrix) as vec3;\n\t\t\texpandBounds(worldPos, meshBounds);\n\t\t}\n\t}\n\n\treturn meshBounds;\n}\n\n/** Expands bounds of target by given source. */\nfunction expandBounds(point: vec3, target: bbox): void {\n\tfor (let i = 0; i < 3; i++) {\n\t\ttarget.min[i] = Math.min(point[i], target.min[i]);\n\t\ttarget.max[i] = Math.max(point[i], target.max[i]);\n\t}\n}\n\n/** Creates new bounds with min=Infinity, max=-Infinity. */\nfunction createBounds(): bbox {\n\treturn {\n\t\tmin: [Infinity, Infinity, Infinity] as vec3,\n\t\tmax: [-Infinity, -Infinity, -Infinity] as vec3,\n\t};\n}\n","import { TypedArray } from '../constants';\n\n/**\n * # BufferUtils\n *\n * *Common utilities for working with Uint8Array and Buffer objects.*\n *\n * @category Utilities\n */\nexport class BufferUtils {\n\t/** Creates a byte array from a Data URI. */\n\tstatic createBufferFromDataURI(dataURI: string): Uint8Array {\n\t\tif (typeof Buffer === 'undefined') {\n\t\t\t// Browser.\n\t\t\tconst byteString = atob(dataURI.split(',')[1]);\n\t\t\tconst ia = new Uint8Array(byteString.length);\n\t\t\tfor (let i = 0; i < byteString.length; i++) {\n\t\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ia;\n\t\t} else {\n\t\t\t// Node.js.\n\t\t\tconst data = dataURI.split(',')[1];\n\t\t\tconst isBase64 = dataURI.indexOf('base64') >= 0;\n\t\t\treturn Buffer.from(data, isBase64 ? 'base64' : 'utf8');\n\t\t}\n\t}\n\n\t/** Encodes text to a byte array. */\n\tstatic encodeText(text: string): Uint8Array {\n\t\tif (typeof TextEncoder !== 'undefined') {\n\t\t\treturn new TextEncoder().encode(text);\n\t\t}\n\t\treturn Buffer.from(text);\n\t}\n\n\t/** Decodes a byte array to text. */\n\tstatic decodeText(array: Uint8Array): string {\n\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\treturn new TextDecoder().decode(array);\n\t\t}\n\t\treturn Buffer.from(array).toString('utf8');\n\t}\n\n\t/**\n\t * Concatenates N byte arrays.\n\t */\n\tstatic concat(arrays: Uint8Array[]): Uint8Array {\n\t\tlet totalByteLength = 0;\n\t\tfor (const array of arrays) {\n\t\t\ttotalByteLength += array.byteLength;\n\t\t}\n\n\t\tconst result = new Uint8Array(totalByteLength);\n\t\tlet byteOffset = 0;\n\n\t\tfor (const array of arrays) {\n\t\t\tresult.set(array, byteOffset);\n\t\t\tbyteOffset += array.byteLength;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Pads a Uint8Array to the next 4-byte boundary.\n\t *\n\t * Reference: [glTF → Data Alignment](https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment)\n\t */\n\tstatic pad(srcArray: Uint8Array, paddingByte = 0): Uint8Array {\n\t\tconst paddedLength = this.padNumber(srcArray.byteLength);\n\t\tif (paddedLength === srcArray.byteLength) return srcArray;\n\n\t\tconst dstArray = new Uint8Array(paddedLength);\n\t\tdstArray.set(srcArray);\n\n\t\tif (paddingByte !== 0) {\n\t\t\tfor (let i = srcArray.byteLength; i < paddedLength; i++) {\n\t\t\t\tdstArray[i] = paddingByte;\n\t\t\t}\n\t\t}\n\n\t\treturn dstArray;\n\t}\n\n\t/** Pads a number to 4-byte boundaries. */\n\tstatic padNumber(v: number): number {\n\t\treturn Math.ceil(v / 4) * 4;\n\t}\n\n\t/** Returns true if given byte array instances are equal. */\n\tstatic equals(a: Uint8Array, b: Uint8Array): boolean {\n\t\tif (a === b) return true;\n\n\t\tif (a.byteLength !== b.byteLength) return false;\n\n\t\tlet i = a.byteLength;\n\t\twhile (i--) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a Uint8Array view of a typed array, with the same underlying ArrayBuffer.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```js\n\t * const buffer = new Uint8Array(\n\t * \tarray.buffer,\n\t * \tarray.byteOffset + byteOffset,\n\t * \tMath.min(array.byteLength, byteLength)\n\t * );\n\t * ```\n\t *\n\t */\n\tstatic toView(a: TypedArray, byteOffset = 0, byteLength = Infinity): Uint8Array {\n\t\treturn new Uint8Array(a.buffer, a.byteOffset + byteOffset, Math.min(a.byteLength, byteLength));\n\t}\n\n\t/** @internal */\n\tstatic assertView(view: null): null;\n\tstatic assertView(view: Uint8Array): Uint8Array;\n\tstatic assertView(view: Uint8Array | null): Uint8Array | null;\n\tstatic assertView(view: Uint8Array | null): Uint8Array | null {\n\t\tif (view && !ArrayBuffer.isView(view)) {\n\t\t\tthrow new Error(`Method requires Uint8Array parameter; received \"${typeof view}\".`);\n\t\t}\n\t\treturn view as Uint8Array;\n\t}\n}\n","import { vec3, vec4 } from '../constants';\n\n/**\n * # ColorUtils\n *\n * *Common utilities for working with colors in vec3, vec4, or hexadecimal form.*\n *\n * Provides methods to convert linear components (vec3, vec4) to sRGB hex values. All colors in\n * the glTF specification, excluding color textures, are linear. Hexadecimal values, in sRGB\n * colorspace, are accessible through helper functions in the API as a convenience.\n *\n * ```typescript\n * // Hex (sRGB) to factor (linear).\n * const factor = ColorUtils.hexToFactor(0xFFCCCC, []);\n *\n * // Factor (linear) to hex (sRGB).\n * const hex = ColorUtils.factorToHex([1, .25, .25])\n * ```\n *\n * @category Utilities\n */\nexport class ColorUtils {\n\t/**\n\t * Converts sRGB hexadecimal to linear components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic hexToFactor<T = vec3 | vec4>(hex: number, target: T): T {\n\t\thex = Math.floor(hex);\n\t\tconst _target = target as unknown as vec3;\n\t\t_target[0] = ((hex >> 16) & 255) / 255;\n\t\t_target[1] = ((hex >> 8) & 255) / 255;\n\t\t_target[2] = (hex & 255) / 255;\n\t\treturn this.convertSRGBToLinear<T>(target, target);\n\t}\n\n\t/**\n\t * Converts linear components to sRGB hexadecimal.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic factorToHex<T = vec3 | vec4>(factor: T): number {\n\t\tconst target = [...(factor as unknown as number[])] as unknown as T;\n\t\tconst [r, g, b] = this.convertLinearToSRGB(factor, target) as unknown as number[];\n\t\treturn ((r * 255) << 16) ^ ((g * 255) << 8) ^ ((b * 255) << 0);\n\t}\n\n\t/**\n\t * Converts sRGB components to linear components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic convertSRGBToLinear<T = vec3 | vec4>(source: T, target: T): T {\n\t\tconst _source = source as unknown as vec3;\n\t\tconst _target = target as unknown as vec3;\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t_target[i] =\n\t\t\t\t_source[i] < 0.04045\n\t\t\t\t\t? _source[i] * 0.0773993808\n\t\t\t\t\t: Math.pow(_source[i] * 0.9478672986 + 0.0521327014, 2.4);\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts linear components to sRGB components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic convertLinearToSRGB<T = vec3 | vec4>(source: T, target: T): T {\n\t\tconst _source = source as unknown as vec3;\n\t\tconst _target = target as unknown as vec3;\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t_target[i] = _source[i] < 0.0031308 ? _source[i] * 12.92 : 1.055 * Math.pow(_source[i], 0.41666) - 0.055;\n\t\t}\n\t\treturn target;\n\t}\n}\n","// Need a placeholder domain to construct a URL from a relative path. We only\n// access `url.pathname`, so the domain doesn't matter.\nconst NULL_DOMAIN = 'https://null.example';\n\n/**\n * # FileUtils\n *\n * *Utility class for working with file systems and URI paths.*\n *\n * @category Utilities\n */\nexport class FileUtils {\n\t/** Extracts the basename from a path, e.g. \"folder/model.glb\" -> \"model\". */\n\tstatic basename(path: string): string {\n\t\tpath = new URL(path, NULL_DOMAIN).pathname;\n\t\tconst fileName = path.split(/[\\\\/]/).pop()!;\n\t\treturn fileName.substring(0, fileName.lastIndexOf('.'));\n\t}\n\n\t/** Extracts the extension from a path, e.g. \"folder/model.glb\" -> \"glb\". */\n\tstatic extension(path: string): string {\n\t\tif (path.indexOf('data:') !== 0) {\n\t\t\tpath = new URL(path, NULL_DOMAIN).pathname;\n\t\t\treturn path.split(/[\\\\/]/).pop()!.split(/[.]/).pop()!;\n\t\t} else if (path.indexOf('data:image/png') === 0) {\n\t\t\treturn 'png';\n\t\t} else if (path.indexOf('data:image/jpeg') === 0) {\n\t\t\treturn 'jpeg';\n\t\t} else {\n\t\t\treturn 'bin';\n\t\t}\n\t}\n}\n","import { vec2 } from '../constants';\nimport { BufferUtils } from './buffer-utils';\n\n/** Implements support for an image format in the {@link ImageUtils} class. */\nexport interface ImageUtilsFormat {\n\tmatch(buffer: Uint8Array): boolean;\n\tgetSize(buffer: Uint8Array): vec2 | null;\n\tgetChannels(buffer: Uint8Array): number | null;\n\tgetGPUByteLength?(buffer: Uint8Array): number | null;\n}\n\n/** JPEG image support. */\nclass JPEGImageUtils implements ImageUtilsFormat {\n\tmatch(array: Uint8Array): boolean {\n\t\treturn array.length >= 3 && array[0] === 255 && array[1] === 216 && array[2] === 255;\n\t}\n\tgetSize(array: Uint8Array): vec2 {\n\t\t// Skip 4 chars, they are for signature\n\t\tlet view = new DataView(array.buffer, array.byteOffset + 4);\n\n\t\tlet i: number, next: number;\n\t\twhile (view.byteLength) {\n\t\t\t// read length of the next block\n\t\t\ti = view.getUint16(0, false);\n\t\t\t// i = buffer.readUInt16BE(0);\n\n\t\t\t// ensure correct format\n\t\t\tvalidateJPEGBuffer(view, i);\n\n\t\t\t// 0xFFC0 is baseline standard(SOF)\n\t\t\t// 0xFFC1 is baseline optimized(SOF)\n\t\t\t// 0xFFC2 is progressive(SOF2)\n\t\t\tnext = view.getUint8(i + 1);\n\t\t\tif (next === 0xc0 || next === 0xc1 || next === 0xc2) {\n\t\t\t\treturn [view.getUint16(i + 7, false), view.getUint16(i + 5, false)];\n\t\t\t}\n\n\t\t\t// move to the next block\n\t\t\tview = new DataView(array.buffer, view.byteOffset + i + 2);\n\t\t}\n\n\t\tthrow new TypeError('Invalid JPG, no size found');\n\t}\n\n\tgetChannels(_buffer: Uint8Array): number {\n\t\treturn 3;\n\t}\n}\n\n/**\n * PNG image support.\n *\n * PNG signature: 'PNG\\r\\n\\x1a\\n'\n * PNG image header chunk name: 'IHDR'\n */\nclass PNGImageUtils implements ImageUtilsFormat {\n\t// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\n\tstatic PNG_FRIED_CHUNK_NAME = 'CgBI';\n\tmatch(array: Uint8Array): boolean {\n\t\treturn (\n\t\t\tarray.length >= 8 &&\n\t\t\tarray[0] === 0x89 &&\n\t\t\tarray[1] === 0x50 &&\n\t\t\tarray[2] === 0x4e &&\n\t\t\tarray[3] === 0x47 &&\n\t\t\tarray[4] === 0x0d &&\n\t\t\tarray[5] === 0x0a &&\n\t\t\tarray[6] === 0x1a &&\n\t\t\tarray[7] === 0x0a\n\t\t);\n\t}\n\tgetSize(array: Uint8Array): vec2 {\n\t\tconst view = new DataView(array.buffer, array.byteOffset);\n\t\tconst magic = BufferUtils.decodeText(array.slice(12, 16));\n\t\tif (magic === PNGImageUtils.PNG_FRIED_CHUNK_NAME) {\n\t\t\treturn [view.getUint32(32, false), view.getUint32(36, false)];\n\t\t}\n\t\treturn [view.getUint32(16, false), view.getUint32(20, false)];\n\t}\n\tgetChannels(_buffer: Uint8Array): number {\n\t\treturn 4;\n\t}\n}\n\n/**\n * # ImageUtils\n *\n * *Common utilities for working with image data.*\n *\n * @category Utilities\n */\nexport class ImageUtils {\n\tstatic impls: Record<string, ImageUtilsFormat> = {\n\t\t'image/jpeg': new JPEGImageUtils(),\n\t\t'image/png': new PNGImageUtils(),\n\t};\n\n\t/** Registers support for a new image format; useful for certain extensions. */\n\tpublic static registerFormat(mimeType: string, impl: ImageUtilsFormat): void {\n\t\tthis.impls[mimeType] = impl;\n\t}\n\n\t/**\n\t * Returns detected MIME type of the given image buffer. Note that for image\n\t * formats with support provided by extensions, the extension must be\n\t * registered with an I/O class before it can be detected by ImageUtils.\n\t */\n\tpublic static getMimeType(buffer: Uint8Array): string | null {\n\t\tfor (const mimeType in this.impls) {\n\t\t\tif (this.impls[mimeType].match(buffer)) {\n\t\t\t\treturn mimeType;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Returns the dimensions of the image. */\n\tpublic static getSize(buffer: Uint8Array, mimeType: string): vec2 | null {\n\t\tif (!this.impls[mimeType]) return null;\n\t\treturn this.impls[mimeType].getSize(buffer);\n\t}\n\n\t/**\n\t * Returns a conservative estimate of the number of channels in the image. For some image\n\t * formats, the method may return 4 indicating the possibility of an alpha channel, without\n\t * the ability to guarantee that an alpha channel is present.\n\t */\n\tpublic static getChannels(buffer: Uint8Array, mimeType: string): number | null {\n\t\tif (!this.impls[mimeType]) return null;\n\t\treturn this.impls[mimeType].getChannels(buffer);\n\t}\n\n\t/** Returns a conservative estimate of the GPU memory required by this image. */\n\tpublic static getMemSize(buffer: Uint8Array, mimeType: string): number | null {\n\t\tif (!this.impls[mimeType]) return null;\n\n\t\tif (this.impls[mimeType].getGPUByteLength) {\n\t\t\treturn this.impls[mimeType].getGPUByteLength!(buffer);\n\t\t}\n\n\t\tlet uncompressedBytes = 0;\n\t\tconst channels = 4; // See https://github.com/donmccurdy/glTF-Transform/issues/151.\n\t\tconst resolution = this.getSize(buffer, mimeType);\n\t\tif (!resolution) return null;\n\n\t\twhile (resolution[0] > 1 || resolution[1] > 1) {\n\t\t\tuncompressedBytes += resolution[0] * resolution[1] * channels;\n\t\t\tresolution[0] = Math.max(Math.floor(resolution[0] / 2), 1);\n\t\t\tresolution[1] = Math.max(Math.floor(resolution[1] / 2), 1);\n\t\t}\n\t\tuncompressedBytes += 1 * 1 * channels;\n\t\treturn uncompressedBytes;\n\t}\n\n\t/** Returns the preferred file extension for the given MIME type. */\n\tpublic static mimeTypeToExtension(mimeType: string): string {\n\t\tif (mimeType === 'image/jpeg') return 'jpg';\n\t\treturn mimeType.split('/').pop()!;\n\t}\n\n\t/** Returns the MIME type for the given file extension. */\n\tpublic static extensionToMimeType(extension: string): string {\n\t\tif (extension === 'jpg') return 'image/jpeg';\n\t\treturn `image/${extension}`;\n\t}\n}\n\nfunction validateJPEGBuffer(view: DataView, i: number): DataView {\n\t// index should be within buffer limits\n\tif (i > view.byteLength) {\n\t\tthrow new TypeError('Corrupt JPG, exceeded buffer limits');\n\t}\n\t// Every JPEG block must begin with a 0xFF\n\tif (view.getUint8(i) !== 0xff) {\n\t\tthrow new TypeError('Invalid JPG, marker table corrupted');\n\t}\n\n\treturn view;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// Reference: https://github.com/jonschlinkert/is-plain-object\n\nfunction isObject(o: any) {\n\treturn Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isPlainObject(o: any) {\n\tif (isObject(o) === false) return false;\n\n\t// If has modified constructor\n\tconst ctor = o.constructor;\n\tif (ctor === undefined) return true;\n\n\t// If has modified prototype\n\tconst prot = ctor.prototype;\n\tif (isObject(prot) === false) return false;\n\n\t// If constructor does not have an Object-specific method\n\tif (Object.prototype.hasOwnProperty.call(prot, 'isPrototypeOf') === false) {\n\t\treturn false;\n\t}\n\n\t// Most likely a plain Object\n\treturn true;\n}\n","/**\n * # Logger\n *\n * *Logger utility class.*\n *\n * @category Utilities\n */\nclass Logger {\n\t/**\n\t * Log verbosity thresholds.\n\t */\n\tstatic Verbosity = {\n\t\t/** No events are logged. */\n\t\tSILENT: 4,\n\n\t\t/** Only error events are logged. */\n\t\tERROR: 3,\n\n\t\t/** Only error and warn events are logged. */\n\t\tWARN: 2,\n\n\t\t/** Only error, warn, and info events are logged. (DEFAULT) */\n\t\tINFO: 1,\n\n\t\t/** All events are logged. */\n\t\tDEBUG: 0,\n\t};\n\n\t/** Default logger instance. */\n\tpublic static DEFAULT_INSTANCE = new Logger(Logger.Verbosity.INFO);\n\n\t/** Constructs a new Logger instance. */\n\tconstructor(private readonly verbosity: number) {}\n\n\t/** Logs an event at level {@link Logger.Verbosity.DEBUG}. */\n\tdebug(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.DEBUG) {\n\t\t\tconsole.debug(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.INFO}. */\n\tinfo(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.INFO) {\n\t\t\tconsole.info(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.WARN}. */\n\twarn(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.WARN) {\n\t\t\tconsole.warn(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.ERROR}. */\n\terror(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.ERROR) {\n\t\t\tconsole.error(text);\n\t\t}\n\t}\n}\n\nexport { Logger };\n","import { determinant, getRotation } from 'gl-matrix/mat4';\nimport { length } from 'gl-matrix/vec3';\nimport { mat4, vec3, vec4 } from '../constants';\nimport { GLTF } from '../types/gltf';\n\n/** @hidden */\nexport class MathUtils {\n\tpublic static identity(v: number): number {\n\t\treturn v;\n\t}\n\n\tpublic static eq(a: number[], b: number[]): boolean {\n\t\tif (a.length !== b.length) return false;\n\n\t\tconst eps = 10e-6;\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (Math.abs(a[i] - b[i]) > eps) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static denormalize(c: number, componentType: GLTF.AccessorComponentType): number {\n\t\t// Hardcode enums from accessor.ts to avoid a circular dependency.\n\t\tswitch (componentType) {\n\t\t\tcase 5126:\n\t\t\t\treturn c;\n\t\t\tcase 5123:\n\t\t\t\treturn c / 65535.0;\n\t\t\tcase 5121:\n\t\t\t\treturn c / 255.0;\n\t\t\tcase 5122:\n\t\t\t\treturn Math.max(c / 32767.0, -1.0);\n\t\t\tcase 5120:\n\t\t\t\treturn Math.max(c / 127.0, -1.0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid component type.');\n\t\t}\n\t}\n\n\tpublic static normalize(f: number, componentType: GLTF.AccessorComponentType): number {\n\t\t// Hardcode enums from accessor.ts to avoid a circular dependency.\n\t\tswitch (componentType) {\n\t\t\tcase 5126:\n\t\t\t\treturn f;\n\t\t\tcase 5123:\n\t\t\t\treturn Math.round(f * 65535.0);\n\t\t\tcase 5121:\n\t\t\t\treturn Math.round(f * 255.0);\n\t\t\tcase 5122:\n\t\t\t\treturn Math.round(f * 32767.0);\n\t\t\tcase 5120:\n\t\t\t\treturn Math.round(f * 127.0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid component type.');\n\t\t}\n\t}\n\n\t/**\n\t * Decompose a mat4 to TRS properties.\n\t *\n\t * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n\t * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n\t *\n\t * @param srcMat Matrix element, to be decomposed to TRS properties.\n\t * @param dstTranslation Translation element, to be overwritten.\n\t * @param dstRotation Rotation element, to be overwritten.\n\t * @param dstScale Scale element, to be overwritten.\n\t */\n\tpublic static decompose(srcMat: mat4, dstTranslation: vec3, dstRotation: vec4, dstScale: vec3): void {\n\t\tlet sx = length([srcMat[0], srcMat[1], srcMat[2]]);\n\t\tconst sy = length([srcMat[4], srcMat[5], srcMat[6]]);\n\t\tconst sz = length([srcMat[8], srcMat[9], srcMat[10]]);\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = determinant(srcMat);\n\t\tif (det < 0) sx = -sx;\n\n\t\tdstTranslation[0] = srcMat[12];\n\t\tdstTranslation[1] = srcMat[13];\n\t\tdstTranslation[2] = srcMat[14];\n\n\t\t// scale the rotation part\n\t\tconst _m1 = srcMat.slice();\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1[0] *= invSX;\n\t\t_m1[1] *= invSX;\n\t\t_m1[2] *= invSX;\n\n\t\t_m1[4] *= invSY;\n\t\t_m1[5] *= invSY;\n\t\t_m1[6] *= invSY;\n\n\t\t_m1[8] *= invSZ;\n\t\t_m1[9] *= invSZ;\n\t\t_m1[10] *= invSZ;\n\n\t\tgetRotation(dstRotation, _m1 as mat4);\n\n\t\tdstScale[0] = sx;\n\t\tdstScale[1] = sy;\n\t\tdstScale[2] = sz;\n\t}\n\n\t/**\n\t * Compose TRS properties to a mat4.\n\t *\n\t * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n\t * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n\t *\n\t * @param srcTranslation Translation element of matrix.\n\t * @param srcRotation Rotation element of matrix.\n\t * @param srcScale Scale element of matrix.\n\t * @param dstMat Matrix element, to be modified and returned.\n\t * @returns dstMat, overwritten to mat4 equivalent of given TRS properties.\n\t */\n\tpublic static compose(srcTranslation: vec3, srcRotation: vec4, srcScale: vec3, dstMat: mat4): mat4 {\n\t\tconst te = dstMat;\n\n\t\tconst x = srcRotation[0],\n\t\t\ty = srcRotation[1],\n\t\t\tz = srcRotation[2],\n\t\t\tw = srcRotation[3];\n\t\tconst x2 = x + x,\n\t\t\ty2 = y + y,\n\t\t\tz2 = z + z;\n\t\tconst xx = x * x2,\n\t\t\txy = x * y2,\n\t\t\txz = x * z2;\n\t\tconst yy = y * y2,\n\t\t\tyz = y * z2,\n\t\t\tzz = z * z2;\n\t\tconst wx = w * x2,\n\t\t\twy = w * y2,\n\t\t\twz = w * z2;\n\n\t\tconst sx = srcScale[0],\n\t\t\tsy = srcScale[1],\n\t\t\tsz = srcScale[2];\n\n\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\tte[1] = (xy + wz) * sx;\n\t\tte[2] = (xz - wy) * sx;\n\t\tte[3] = 0;\n\n\t\tte[4] = (xy - wz) * sy;\n\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\tte[6] = (yz + wx) * sy;\n\t\tte[7] = 0;\n\n\t\tte[8] = (xz + wy) * sz;\n\t\tte[9] = (yz - wx) * sz;\n\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\tte[11] = 0;\n\n\t\tte[12] = srcTranslation[0];\n\t\tte[13] = srcTranslation[1];\n\t\tte[14] = srcTranslation[2];\n\t\tte[15] = 1;\n\n\t\treturn te;\n\t}\n}\n","import { GraphEdge } from 'property-graph';\nimport { isPlainObject } from './is-plain-object';\nimport { BufferViewUsage } from '../constants';\nimport type { Property } from '../properties';\n\nexport type Ref = GraphEdge<Property, Property>;\nexport type RefMap = { [key: string]: Ref };\nexport type UnknownRef = Ref | Ref[] | RefMap | unknown;\n\nexport function equalsRef(refA: Ref, refB: Ref): boolean {\n\tif (!!refA !== !!refB) return false;\n\n\tconst a = refA.getChild();\n\tconst b = refB.getChild();\n\n\treturn a === b || a.equals(b);\n}\n\nexport function equalsRefList(refListA: Ref[], refListB: Ref[]): boolean {\n\tif (!!refListA !== !!refListB) return false;\n\tif (refListA.length !== refListB.length) return false;\n\n\tfor (let i = 0; i < refListA.length; i++) {\n\t\tconst a = refListA[i];\n\t\tconst b = refListB[i];\n\n\t\tif (a.getChild() === b.getChild()) continue;\n\n\t\tif (!a.getChild().equals(b.getChild())) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsRefMap(refMapA: RefMap, refMapB: RefMap): boolean {\n\tif (!!refMapA !== !!refMapB) return false;\n\n\tconst keysA = Object.keys(refMapA);\n\tconst keysB = Object.keys(refMapB);\n\tif (keysA.length !== keysB.length) return false;\n\n\tfor (const key in refMapA) {\n\t\tconst refA = refMapA[key];\n\t\tconst refB = refMapB[key];\n\t\tif (!!refA !== !!refB) return false;\n\n\t\tconst a = refA.getChild();\n\t\tconst b = refB.getChild();\n\t\tif (a === b) continue;\n\n\t\tif (!a.equals(b)) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsArray(a: ArrayLike<unknown> | null, b: ArrayLike<unknown> | null): boolean {\n\tif (a === b) return true;\n\n\tif (!!a !== !!b || !a || !b) return false;\n\n\tif (a.length !== b.length) return false;\n\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsObject(_a: unknown, _b: unknown): boolean {\n\tif (_a === _b) return true;\n\tif (!!_a !== !!_b) return false;\n\tif (!isPlainObject(_a) || !isPlainObject(_b)) {\n\t\treturn _a === _b;\n\t}\n\n\tconst a = _a as Record<string, unknown>;\n\tconst b = _b as Record<string, unknown>;\n\n\tlet numKeysA = 0;\n\tlet numKeysB = 0;\n\n\tlet key: string;\n\n\tfor (key in a) numKeysA++;\n\tfor (key in b) numKeysB++;\n\tif (numKeysA !== numKeysB) return false;\n\n\tfor (key in a) {\n\t\tconst valueA = a[key];\n\t\tconst valueB = b[key];\n\t\tif (isArray(valueA) && isArray(valueB)) {\n\t\t\tif (!equalsArray(valueA as [], valueB as [])) return false;\n\t\t} else if (isPlainObject(valueA) && isPlainObject(valueB)) {\n\t\t\tif (!equalsObject(valueA, valueB)) return false;\n\t\t} else {\n\t\t\tif (valueA !== valueB) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport type RefAttributes = Record<string, unknown>;\n\nexport interface AccessorRefAttributes extends RefAttributes {\n\t/** Usage role of an accessor reference. */\n\tusage: BufferViewUsage | string;\n}\n\nexport interface TextureRefAttributes extends RefAttributes {\n\t/** Bitmask for {@link TextureChannel TextureChannels} used by a texture reference. */\n\tchannels: number;\n}\n\nexport function isArray(value: unknown): boolean {\n\treturn Array.isArray(value) || ArrayBuffer.isView(value);\n}\n","const ALPHABET = '23456789abdegjkmnpqrvwxyzABDEGJKMNPQRVWXYZ';\nconst UNIQUE_RETRIES = 999;\nconst ID_LENGTH = 6;\n\nconst previousIDs = new Set();\n\nconst generateOne = function (): string {\n\tlet rtn = '';\n\tfor (let i = 0; i < ID_LENGTH; i++) {\n\t\trtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n\t}\n\treturn rtn;\n};\n\n/**\n * Short ID generator.\n *\n * Generated IDs are short, easy to type, and unique for the duration of the program's execution.\n * Uniqueness across multiple program executions, or on other devices, is not guaranteed. Based on\n * [Short ID Generation in JavaScript](https://tomspencer.dev/blog/2014/11/16/short-id-generation-in-javascript/),\n * with alterations.\n *\n * @category Utilities\n * @hidden\n */\nexport const uuid = function (): string {\n\tfor (let retries = 0; retries < UNIQUE_RETRIES; retries++) {\n\t\tconst id = generateOne();\n\t\tif (!previousIDs.has(id)) {\n\t\t\tpreviousIDs.add(id);\n\t\t\treturn id;\n\t\t}\n\t}\n\treturn '';\n};\n","/** @internal */\nexport class HTTPUtils {\n\tstatic readonly DEFAULT_INIT: RequestInit = {};\n\tstatic readonly PROTOCOL_REGEXP = /^[a-zA-Z]+:\\/\\//;\n\n\tstatic dirname(path: string): string {\n\t\tconst index = path.lastIndexOf('/');\n\t\tif (index === -1) return './';\n\t\treturn path.substring(0, index + 1);\n\t}\n\n\tstatic resolve(base: string, path: string) {\n\t\tif (!this.isRelativePath(path)) return path;\n\n\t\tconst stack = base.split('/');\n\t\tconst parts = path.split('/');\n\t\tstack.pop();\n\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === '.') continue;\n\t\t\tif (parts[i] === '..') {\n\t\t\t\tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack.push(parts[i]);\n\t\t\t}\n\t\t}\n\t\treturn stack.join('/');\n\t}\n\n\t/**\n\t * Returns true for URLs containing a protocol, and false for both\n\t * absolute and relative paths.\n\t */\n\tstatic isAbsoluteURL(path: string) {\n\t\treturn this.PROTOCOL_REGEXP.test(path);\n\t}\n\n\t/**\n\t * Returns true for paths that are declared relative to some unknown base\n\t * path. For example, \"foo/bar/\" is relative both \"/foo/bar/\" is not.\n\t */\n\tstatic isRelativePath(path: string): boolean {\n\t\treturn !/^(?:[a-zA-Z]+:)?\\//.test(path);\n\t}\n}\n","import { Nullable } from '../constants';\nimport { $attributes, $immutableKeys, Graph, GraphNode, GraphEdge, isRef, isRefList, isRefMap } from 'property-graph';\nimport { equalsArray, equalsObject, equalsRef, equalsRefList, equalsRefMap, isArray, isPlainObject } from '../utils';\nimport type { Ref, RefMap, UnknownRef } from '../utils';\n\nexport type PropertyResolver<T extends Property> = (p: T) => T;\nexport const COPY_IDENTITY = <T extends Property>(t: T): T => t;\n\nexport interface IProperty {\n\tname: string;\n\textras: Record<string, unknown>;\n}\n\n/**\n * # Property\n *\n * *Properties represent distinct resources in a glTF asset, referenced by other properties.*\n *\n * For example, each material and texture is a property, with material properties holding\n * references to the textures. All properties are created with factory methods on the\n * {@link Document} in which they should be constructed. Properties are destroyed by calling\n * {@link dispose}().\n *\n * Usage:\n *\n * ```ts\n * const texture = doc.createTexture('myTexture');\n * doc.listTextures(); // → [texture x 1]\n *\n * // Attach a texture to a material.\n * material.setBaseColorTexture(texture);\n * material.getBaseColortexture(); // → texture\n *\n * // Detaching a texture removes any references to it, except from the doc.\n * texture.detach();\n * material.getBaseColorTexture(); // → null\n * doc.listTextures(); // → [texture x 1]\n *\n * // Disposing a texture removes all references to it, and its own references.\n * texture.dispose();\n * doc.listTextures(); // → []\n * ```\n *\n * Reference:\n * - [glTF → Concepts](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nexport abstract class Property<T extends IProperty = IProperty> extends GraphNode<T> {\n\t/** Property type. */\n\tpublic abstract readonly propertyType: string;\n\n\t/**\n\t * Internal graph used to search and maintain references.\n\t * @override\n\t * @hidden\n\t */\n\tprotected declare readonly graph: Graph<Property>;\n\n\t/** @hidden */\n\tconstructor(graph: Graph<Property>, name = '') {\n\t\tsuper(graph);\n\t\t(this as Property)[$attributes]['name'] = name;\n\t\tthis.init();\n\t\tthis.dispatchEvent({ type: 'create' });\n\t}\n\n\t/**\n\t * Initializes instance data for a subclass. Because subclass constructors run after the\n\t * constructor of the parent class, and 'create' events dispatched by the parent class\n\t * assume the instance is fully initialized, it's best to do any initialization here.\n\t * @hidden\n\t */\n\tprotected abstract init(): void;\n\n\t/**\n\t * Returns default attributes for the property. Empty lists and maps should be initialized\n\t * to empty arrays and objects. Always invoke `super.getDefaults()` and extend the result.\n\t */\n\tprotected getDefaults(): Nullable<T> {\n\t\treturn Object.assign(super.getDefaults(), { name: '', extras: {} });\n\t}\n\n\t/**********************************************************************************************\n\t * Name.\n\t */\n\n\t/**\n\t * Returns the name of this property. While names are not required to be unique, this is\n\t * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n\t * a property, prefer to use Extras.\n\t */\n\tpublic getName(): string {\n\t\treturn (this as Property).get('name');\n\t}\n\n\t/**\n\t * Sets the name of this property. While names are not required to be unique, this is\n\t * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n\t * a property, prefer to use Extras.\n\t */\n\tpublic setName(name: string): this {\n\t\treturn (this as Property).set('name', name) as this;\n\t}\n\n\t/**********************************************************************************************\n\t * Extras.\n\t */\n\n\t/**\n\t * Returns a reference to the Extras object, containing application-specific data for this\n\t * Property. Extras should be an Object, not a primitive value, for best portability.\n\t */\n\tpublic getExtras(): Record<string, unknown> {\n\t\treturn (this as Property).get('extras');\n\t}\n\n\t/**\n\t * Updates the Extras object, containing application-specific data for this Property. Extras\n\t * should be an Object, not a primitive value, for best portability.\n\t */\n\tpublic setExtras(extras: Record<string, unknown>): this {\n\t\treturn (this as Property).set('extras', extras) as this;\n\t}\n\n\t/**********************************************************************************************\n\t * Graph state.\n\t */\n\n\t/**\n\t * Makes a copy of this property, with the same resources (by reference) as the original.\n\t */\n\tpublic clone(): this {\n\t\tconst PropertyClass = this.constructor as new (g: Graph<Property>) => this;\n\t\treturn new PropertyClass(this.graph).copy(this, COPY_IDENTITY);\n\t}\n\n\t/**\n\t * Copies all data from another property to this one. Child properties are copied by reference,\n\t * unless a 'resolve' function is given to override that.\n\t * @param other Property to copy references from.\n\t * @param resolve Function to resolve each Property being transferred. Default is identity.\n\t */\n\tpublic copy(other: this, resolve: PropertyResolver<Property> = COPY_IDENTITY): this {\n\t\t// Remove previous references.\n\t\tfor (const key in this[$attributes]) {\n\t\t\tconst value = this[$attributes][key];\n\t\t\tif (value instanceof GraphEdge) {\n\t\t\t\tif (!this[$immutableKeys].has(key)) {\n\t\t\t\t\tvalue.dispose();\n\t\t\t\t}\n\t\t\t} else if (Array.isArray(value) && value[0] instanceof GraphEdge) {\n\t\t\t\tfor (const ref of value as Ref[]) {\n\t\t\t\t\tref.dispose();\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(value) && Object.values(value)[0] instanceof GraphEdge) {\n\t\t\t\tfor (const subkey in value) {\n\t\t\t\t\tconst ref = value[subkey] as Ref;\n\t\t\t\t\tref.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add new references.\n\t\tfor (const key in other[$attributes]) {\n\t\t\tconst thisValue = this[$attributes][key];\n\t\t\tconst otherValue = other[$attributes][key];\n\t\t\tif (otherValue instanceof GraphEdge) {\n\t\t\t\tif (this[$immutableKeys].has(key)) {\n\t\t\t\t\tconst ref = thisValue as unknown as Ref;\n\t\t\t\t\tref.getChild().copy(resolve(otherValue.getChild()), resolve);\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.setRef(key as any, resolve(otherValue.getChild()), otherValue.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (Array.isArray(otherValue) && otherValue[0] instanceof GraphEdge) {\n\t\t\t\tfor (const ref of otherValue as Ref[]) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.addRef(key as any, resolve(ref.getChild()), ref.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(otherValue) && Object.values(otherValue)[0] instanceof GraphEdge) {\n\t\t\t\tfor (const subkey in otherValue) {\n\t\t\t\t\tconst ref = otherValue[subkey] as Ref;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.setRefMap(key as any, subkey, resolve(ref.getChild()), ref.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(otherValue)) {\n\t\t\t\tthis[$attributes][key] = JSON.parse(JSON.stringify(otherValue));\n\t\t\t} else if (\n\t\t\t\tArray.isArray(otherValue) ||\n\t\t\t\totherValue instanceof ArrayBuffer ||\n\t\t\t\tArrayBuffer.isView(otherValue)\n\t\t\t) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tthis[$attributes][key] = (otherValue as unknown as Uint8Array).slice() as any;\n\t\t\t} else {\n\t\t\t\tthis[$attributes][key] = otherValue;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if two properties are deeply equivalent, recursively comparing the attributes\n\t * of the properties. For example, two {@link Primitive Primitives} are equivalent if they\n\t * have accessors and materials with equivalent content — but not necessarily the same specific\n\t * accessors and materials.\n\t */\n\tpublic equals(other: this): boolean {\n\t\tif (this === other) return true;\n\t\tif (this.propertyType !== other.propertyType) return false;\n\n\t\tfor (const key in this[$attributes]) {\n\t\t\tconst a = this[$attributes][key] as UnknownRef;\n\t\t\tconst b = other[$attributes][key] as UnknownRef;\n\n\t\t\tif (isRef(a) || isRef(b)) {\n\t\t\t\tif (!equalsRef(a as Ref, b as Ref)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isRefList(a) || isRefList(b)) {\n\t\t\t\tif (!equalsRefList(a as Ref[], b as Ref[])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isRefMap(a) || isRefMap(b)) {\n\t\t\t\tif (!equalsRefMap(a as RefMap, b as RefMap)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(a) || isPlainObject(b)) {\n\t\t\t\tif (!equalsObject(a, b)) return false;\n\t\t\t} else if (isArray(a) || isArray(b)) {\n\t\t\t\tif (!equalsArray(a as [], b as [])) return false;\n\t\t\t} else {\n\t\t\t\t// Literal.\n\t\t\t\tif (a !== b) return false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic detach(): this {\n\t\t// Detaching should keep properties in the same Document, and attached to its root.\n\t\tthis.graph.disconnectParents(this, (n: Property) => n.propertyType !== 'Root');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a list of all properties that hold a reference to this property. For example, a\n\t * material may hold references to various textures, but a texture does not hold references\n\t * to the materials that use it.\n\t *\n\t * It is often necessary to filter the results for a particular type: some resources, like\n\t * {@link Accessor}s, may be referenced by different types of properties. Most properties\n\t * include the {@link Root} as a parent, which is usually not of interest.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * const materials = texture\n\t * \t.listParents()\n\t * \t.filter((p) => p instanceof Material)\n\t * ```\n\t */\n\tpublic listParents(): Property[] {\n\t\treturn this.graph.listParents(this);\n\t}\n}\n","import { Nullable } from '../constants';\nimport { ExtensionProperty } from './extension-property';\nimport { Property, IProperty } from './property';\n\nexport interface IExtensibleProperty extends IProperty {\n\textensions: { [key: string]: ExtensionProperty };\n}\n\n/**\n * # ExtensibleProperty\n *\n * *A {@link Property} that can have {@link ExtensionProperty} instances attached.*\n *\n * Most properties are extensible. See the {@link Extension} documentation for information about\n * how to use extensions.\n *\n * @category Properties\n */\nexport abstract class ExtensibleProperty<T extends IExtensibleProperty = IExtensibleProperty> extends Property<T> {\n\tprotected getDefaults(): Nullable<T> {\n\t\treturn Object.assign(super.getDefaults(), { extensions: {} });\n\t}\n\n\t/** Returns an {@link ExtensionProperty} attached to this Property, if any. */\n\tpublic getExtension<Prop extends ExtensionProperty>(name: string): Prop | null {\n\t\treturn (this as ExtensibleProperty).getRefMap('extensions', name) as Prop;\n\t}\n\n\t/**\n\t * Attaches the given {@link ExtensionProperty} to this Property. For a given extension, only\n\t * one ExtensionProperty may be attached to any one Property at a time.\n\t */\n\tpublic setExtension<Prop extends ExtensionProperty>(name: string, extensionProperty: Prop | null): this {\n\t\tif (extensionProperty) extensionProperty._validateParent(this as ExtensibleProperty);\n\t\treturn (this as ExtensibleProperty).setRefMap('extensions', name, extensionProperty) as this;\n\t}\n\n\t/** Lists all {@link ExtensionProperty} instances attached to this Property. */\n\tpublic listExtensions(): ExtensionProperty[] {\n\t\treturn (this as ExtensibleProperty).listRefMapValues('extensions');\n\t}\n}\n","import { Nullable, PropertyType, TypedArray } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { MathUtils } from '../utils';\nimport { Buffer } from './buffer';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { COPY_IDENTITY } from './property';\n\ninterface IAccessor extends IExtensibleProperty {\n\tarray: TypedArray | null;\n\ttype: GLTF.AccessorType;\n\tcomponentType: GLTF.AccessorComponentType;\n\tnormalized: boolean;\n\tbuffer: Buffer;\n}\n\n/**\n * # Accessor\n *\n * *Accessors store lists of numeric, vector, or matrix elements in a typed array.*\n *\n * All large data for {@link Mesh}, {@link Skin}, and {@link Animation} properties is stored in\n * {@link Accessor}s, organized into one or more {@link Buffer}s. Each accessor provides data in\n * typed arrays, with two abstractions:\n *\n * *Elements* are the logical divisions of the data into useful types: `\"SCALAR\"`, `\"VEC2\"`,\n * `\"VEC3\"`, `\"VEC4\"`, `\"MAT3\"`, or `\"MAT4\"`. The element type can be determined with the\n * {@link getType}() method, and the number of elements in the accessor determine its\n * {@link getCount}(). The number of components in an element — e.g. 9 for `\"MAT3\"` — are its\n * {@link getElementSize}(). See {@link Accessor.Type}.\n *\n * *Components* are the numeric values within an element — e.g. `.x` and `.y` for `\"VEC2\"`. Various\n * component types are available: `BYTE`, `UNSIGNED_BYTE`, `SHORT`, `UNSIGNED_SHORT`,\n * `UNSIGNED_INT`, and `FLOAT`. The component type can be determined with the\n * {@link getComponentType} method, and the number of bytes in each component determine its\n * {@link getComponentSize}. See {@link Accessor.ComponentType}.\n *\n * Usage:\n *\n * ```typescript\n * const accessor = doc.createAccessor('myData')\n * \t.setArray(new Float32Array([1,2,3,4,5,6,7,8,9,10,11,12]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(doc.listBuffers()[0]);\n *\n * accessor.getCount();        // → 4\n * accessor.getElementSize();  // → 3\n * accessor.getByteLength();   // → 48\n * accessor.getElement(1, []); // → [4, 5, 6]\n *\n * accessor.setElement(0, [10, 20, 30]);\n * ```\n *\n * Data access through the {@link getElement} and {@link setElement} methods reads or overwrites\n * the content of the underlying typed array. These methods use element arrays intended to be\n * compatible with the [gl-matrix](https://github.com/toji/gl-matrix) library, or with the\n * `toArray`/`fromArray` methods of libraries like three.js and babylon.js.\n *\n * Each Accessor must be assigned to a {@link Buffer}, which determines where the accessor's data\n * is stored in the final file. Assigning Accessors to different Buffers allows the data to be\n * written to different `.bin` files.\n *\n * glTF-Transform does not expose many details of sparse, normalized, or interleaved accessors\n * through its API. It reads files using those techniques, presents a simplified view of the data\n * for editing, and attempts to write data back out with optimizations. For example, vertex\n * attributes will typically be interleaved by default, regardless of the input file.\n *\n * References:\n * - [glTF → Accessors](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nexport class Accessor extends ExtensibleProperty<IAccessor> {\n\tpublic declare propertyType: PropertyType.ACCESSOR;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Element type contained by the accessor (SCALAR, VEC2, ...). */\n\tpublic static Type: Record<string, GLTF.AccessorType> = {\n\t\t/** Scalar, having 1 value per element. */\n\t\tSCALAR: 'SCALAR',\n\t\t/** 2-component vector, having 2 components per element. */\n\t\tVEC2: 'VEC2',\n\t\t/** 3-component vector, having 3 components per element. */\n\t\tVEC3: 'VEC3',\n\t\t/** 4-component vector, having 4 components per element. */\n\t\tVEC4: 'VEC4',\n\t\t/** 2x2 matrix, having 4 components per element. */\n\t\tMAT2: 'MAT2',\n\t\t/** 3x3 matrix, having 9 components per element. */\n\t\tMAT3: 'MAT3',\n\t\t/** 4x3 matrix, having 16 components per element. */\n\t\tMAT4: 'MAT4',\n\t};\n\n\t/** Data type of the values composing each element in the accessor. */\n\tpublic static ComponentType: Record<string, GLTF.AccessorComponentType> = {\n\t\t/**\n\t\t * 1-byte signed integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array Int8Array}.\n\t\t */\n\t\tBYTE: 5120,\n\t\t/**\n\t\t * 1-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array Uint8Array}.\n\t\t */\n\t\tUNSIGNED_BYTE: 5121,\n\t\t/**\n\t\t * 2-byte signed integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array Uint16Array}.\n\t\t */\n\t\tSHORT: 5122,\n\t\t/**\n\t\t * 2-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array Uint16Array}.\n\t\t */\n\t\tUNSIGNED_SHORT: 5123,\n\t\t/**\n\t\t * 4-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array Uint32Array}.\n\t\t */\n\t\tUNSIGNED_INT: 5125,\n\t\t/**\n\t\t * 4-byte floating point number, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array Float32Array}.\n\t\t */\n\t\tFLOAT: 5126,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ACCESSOR;\n\t}\n\n\tprotected getDefaults(): Nullable<IAccessor> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tarray: null,\n\t\t\ttype: Accessor.Type.SCALAR,\n\t\t\tcomponentType: Accessor.ComponentType.FLOAT,\n\t\t\tnormalized: false,\n\t\t\tbuffer: null,\n\t\t});\n\t}\n\n\t/** @internal Inbound transform to normalized representation, if applicable. */\n\tprivate _in = MathUtils.identity;\n\n\t/** @internal Outbound transform from normalized representation, if applicable. */\n\tprivate _out = MathUtils.identity;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\t\tthis._in = other._in;\n\t\tthis._out = other._out;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Static.\n\t */\n\n\t/** Returns size of a given element type, in components. */\n\tpublic static getElementSize(type: GLTF.AccessorType): number {\n\t\tswitch (type) {\n\t\t\tcase Accessor.Type.SCALAR:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.Type.VEC2:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.Type.VEC3:\n\t\t\t\treturn 3;\n\t\t\tcase Accessor.Type.VEC4:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.Type.MAT2:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.Type.MAT3:\n\t\t\t\treturn 9;\n\t\t\tcase Accessor.Type.MAT4:\n\t\t\t\treturn 16;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unexpected type: ' + type);\n\t\t}\n\t}\n\n\t/** Returns size of a given component type, in bytes. */\n\tpublic static getComponentSize(componentType: GLTF.AccessorComponentType): number {\n\t\tswitch (componentType) {\n\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\treturn 4;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unexpected component type: ' + componentType);\n\t\t}\n\t}\n\n\t/**********************************************************************************************\n\t * Min/max bounds.\n\t */\n\n\t/**\n\t * Minimum value of each component in this attribute. Unlike in a final glTF file, values\n\t * returned by this method will reflect the minimum accounting for {@link .normalized}\n\t * state.\n\t */\n\tpublic getMinNormalized(target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\n\t\tthis.getMin(target);\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = this._out(target[j]);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Minimum value of each component in this attribute. Values returned by this method do not\n\t * reflect normalization: use {@link .getMinNormalized} in that case.\n\t */\n\tpublic getMin(target: number[]): number[] {\n\t\tconst array = this.get('array');\n\t\tconst count = this.getCount();\n\t\tconst elementSize = this.getElementSize();\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = Infinity;\n\n\t\tfor (let i = 0; i < count * elementSize; i += elementSize) {\n\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\tconst value = array![i + j];\n\t\t\t\tif (Number.isFinite(value)) {\n\t\t\t\t\ttarget[j] = Math.min(target[j], value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Maximum value of each component in this attribute. Unlike in a final glTF file, values\n\t * returned by this method will reflect the minimum accounting for {@link .normalized}\n\t * state.\n\t */\n\tpublic getMaxNormalized(target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\n\t\tthis.getMax(target);\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = this._out(target[j]);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Maximum value of each component in this attribute. Values returned by this method do not\n\t * reflect normalization: use {@link .getMinNormalized} in that case.\n\t */\n\tpublic getMax(target: number[]): number[] {\n\t\tconst array = this.get('array');\n\t\tconst count = this.getCount();\n\t\tconst elementSize = this.getElementSize();\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = -Infinity;\n\n\t\tfor (let i = 0; i < count * elementSize; i += elementSize) {\n\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\tconst value = array![i + j];\n\t\t\t\tif (Number.isFinite(value)) {\n\t\t\t\t\ttarget[j] = Math.max(target[j], value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t}\n\n\t/**********************************************************************************************\n\t * Layout.\n\t */\n\n\t/**\n\t * Number of elements in the accessor. An array of length 30, containing 10 `VEC3` elements,\n\t * will have a count of 10.\n\t */\n\tpublic getCount(): number {\n\t\tconst array = this.get('array');\n\t\treturn array ? array.length / this.getElementSize() : 0;\n\t}\n\n\t/** Type of element stored in the accessor. `VEC2`, `VEC3`, etc. */\n\tpublic getType(): GLTF.AccessorType {\n\t\treturn this.get('type');\n\t}\n\n\t/**\n\t * Sets type of element stored in the accessor. `VEC2`, `VEC3`, etc. Array length must be a\n\t * multiple of the component size (`VEC2` = 2, `VEC3` = 3, ...) for the selected type.\n\t */\n\tpublic setType(type: GLTF.AccessorType): Accessor {\n\t\treturn this.set('type', type);\n\t}\n\n\t/**\n\t * Number of components in each element of the accessor. For example, the element size of a\n\t * `VEC2` accessor is 2. This value is determined automatically based on array length and\n\t * accessor type, specified with {@link setType}().\n\t */\n\tpublic getElementSize(): number {\n\t\treturn Accessor.getElementSize(this.get('type'));\n\t}\n\n\t/**\n\t * Size of each component (a value in the raw array), in bytes. For example, the\n\t * `componentSize` of data backed by a `float32` array is 4 bytes.\n\t */\n\tpublic getComponentSize(): number {\n\t\treturn this.get('array')!.BYTES_PER_ELEMENT;\n\t}\n\n\t/**\n\t * Component type (float32, uint16, etc.). This value is determined automatically, and can only\n\t * be modified by replacing the underlying array.\n\t */\n\tpublic getComponentType(): GLTF.AccessorComponentType {\n\t\treturn this.get('componentType');\n\t}\n\n\t/**********************************************************************************************\n\t * Normalization.\n\t */\n\n\t/**\n\t * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n\t * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n\t * This property is defined only for accessors that contain vertex attributes or animation\n\t * output data.\n\t */\n\tpublic getNormalized(): boolean {\n\t\treturn this.get('normalized');\n\t}\n\n\t/**\n\t * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n\t * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n\t * This property is defined only for accessors that contain vertex attributes or animation\n\t * output data.\n\t */\n\tpublic setNormalized(normalized: boolean): this {\n\t\tthis.set('normalized', normalized);\n\n\t\tif (normalized) {\n\t\t\tthis._out = (c: number): number => MathUtils.denormalize(c, this.get('componentType'));\n\t\t\tthis._in = (f: number): number => MathUtils.normalize(f, this.get('componentType'));\n\t\t} else {\n\t\t\tthis._out = MathUtils.identity;\n\t\t\tthis._in = MathUtils.identity;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Data access.\n\t */\n\n\t/**\n\t * Returns the scalar element value at the given index, accounting for normalization if\n\t * applicable.\n\t */\n\tpublic getScalar(index: number): number {\n\t\tconst elementSize = this.getElementSize();\n\t\treturn this._out(this.get('array')![index * elementSize]);\n\t}\n\n\t/**\n\t * Assigns the scalar element value at the given index, accounting for normalization if\n\t * applicable.\n\t */\n\tpublic setScalar(index: number, x: number): this {\n\t\tthis.get('array')![index * this.getElementSize()] = this._in(x);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the vector or matrix element value at the given index, accounting for normalization\n\t * if applicable.\n\t */\n\tpublic getElement(index: number, target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\t\tconst array = this.get('array')!;\n\t\tfor (let i = 0; i < elementSize; i++) {\n\t\t\ttarget[i] = this._out(array[index * elementSize + i]);\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Assigns the vector or matrix element value at the given index, accounting for normalization\n\t * if applicable.\n\t */\n\tpublic setElement(index: number, value: number[]): this {\n\t\tconst elementSize = this.getElementSize();\n\t\tconst array = this.get('array')!;\n\t\tfor (let i = 0; i < elementSize; i++) {\n\t\t\tarray![index * elementSize + i] = this._in(value[i]);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Raw data storage.\n\t */\n\n\t/** Returns the {@link Buffer} into which this accessor will be organized. */\n\tpublic getBuffer(): Buffer | null {\n\t\treturn this.getRef('buffer');\n\t}\n\n\t/** Assigns the {@link Buffer} into which this accessor will be organized. */\n\tpublic setBuffer(buffer: Buffer | null): this {\n\t\treturn this.setRef('buffer', buffer);\n\t}\n\n\t/** Returns the raw typed array underlying this accessor. */\n\tpublic getArray(): TypedArray | null {\n\t\treturn this.get('array');\n\t}\n\n\t/** Assigns the raw typed array underlying this accessor. */\n\tpublic setArray(array: TypedArray): this {\n\t\tthis.set('componentType', array ? arrayToComponentType(array) : Accessor.ComponentType.FLOAT);\n\t\tthis.set('array', array);\n\t\treturn this;\n\t}\n\n\t/** Returns the total bytelength of this accessor, exclusive of padding. */\n\tpublic getByteLength(): number {\n\t\tconst array = this.get('array');\n\t\treturn array ? array.byteLength : 0;\n\t}\n}\n\n/**************************************************************************************************\n * Accessor utilities.\n */\n\n/** @internal */\nfunction arrayToComponentType(array: TypedArray): GLTF.AccessorComponentType {\n\tswitch (array.constructor) {\n\t\tcase Float32Array:\n\t\t\treturn Accessor.ComponentType.FLOAT;\n\t\tcase Uint32Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_INT;\n\t\tcase Uint16Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_SHORT;\n\t\tcase Uint8Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_BYTE;\n\t\tcase Int16Array:\n\t\t\treturn Accessor.ComponentType.SHORT;\n\t\tcase Int8Array:\n\t\t\treturn Accessor.ComponentType.BYTE;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown accessor componentType.');\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { AnimationChannel } from './animation-channel';\nimport { AnimationSampler } from './animation-sampler';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface IAnimation extends IExtensibleProperty {\n\tchannels: AnimationChannel[];\n\tsamplers: AnimationSampler[];\n}\n\n/**\n * # Animation\n *\n * *Reusable collections of {@link AnimationChannel}s, together representing a discrete animation\n * clip.*\n *\n * One Animation represents one playable unit in an animation system. Each may contain channels\n * affecting multiple paths (`translation`, `rotation`, `scale`, or `weights`) on multiple\n * {@link Node}s. An Animation's channels must be played together, and do not have any meaning in\n * isolation.\n *\n * Multiple Animations _may_ be played together: for example, one character's _Walk_ animation\n * might play while another character's _Run_ animation plays. Or a single character might have\n * both an _Idle_ and a _Talk_ animation playing at the same time. However, glTF does not define\n * any particular relationship between top-level Animations, or any particular playback behavior\n * like looping or sequences of Animations. General-purpose viewers typically autoplay the first\n * animation and provide UI controls for choosing another. Game engines may have significantly\n * more advanced methods of playing and blending animations.\n *\n * For example, a very simple skinned {@link Mesh} might have two Animations, _Idle_ and _Walk_.\n * Each of those Animations might affect the rotations of two bones, _LegL_ and _LegR_, where the\n * keyframes for each target-path pair are stored in {@link AnimationChannel} instances. In  total,\n * this model would contain two Animations and Four {@link AnimationChannel}s.\n *\n * Usage:\n *\n * ```ts\n * const animation = doc.createAnimation('machineRun')\n * \t.addChannel(rotateCog1)\n * \t.addChannel(rotateCog2)\n * \t.addChannel(rotateCog3);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#animations)\n */\nexport class Animation extends ExtensibleProperty<IAnimation> {\n\tpublic declare propertyType: PropertyType.ANIMATION;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION;\n\t}\n\n\tprotected getDefaults(): Nullable<IAnimation> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { channels: [], samplers: [] });\n\t}\n\n\t/** Adds an {@link AnimationChannel} to this Animation. */\n\tpublic addChannel(channel: AnimationChannel): this {\n\t\treturn this.addRef('channels', channel);\n\t}\n\n\t/** Removes an {@link AnimationChannel} from this Animation. */\n\tpublic removeChannel(channel: AnimationChannel): this {\n\t\treturn this.removeRef('channels', channel);\n\t}\n\n\t/** Lists {@link AnimationChannel}s in this Animation. */\n\tpublic listChannels(): AnimationChannel[] {\n\t\treturn this.listRefs('channels');\n\t}\n\n\t/** Adds an {@link AnimationSampler} to this Animation. */\n\tpublic addSampler(sampler: AnimationSampler): this {\n\t\treturn this.addRef('samplers', sampler);\n\t}\n\n\t/** Removes an {@link AnimationSampler} from this Animation. */\n\tpublic removeSampler(sampler: AnimationSampler): this {\n\t\treturn this.removeRef('samplers', sampler);\n\t}\n\n\t/** Lists {@link AnimationSampler}s in this Animation. */\n\tpublic listSamplers(): AnimationSampler[] {\n\t\treturn this.listRefs('samplers');\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { AnimationSampler } from './animation-sampler';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Node } from './node';\n\ninterface IAnimationChannel extends IExtensibleProperty {\n\ttargetPath: GLTF.AnimationChannelTargetPath | null;\n\ttargetNode: Node;\n\tsampler: AnimationSampler;\n}\n\n/**\n * # AnimationChannel\n *\n * *A target-path pair within a larger {@link Animation}, which refers to an\n * {@link AnimationSampler} storing the keyframe data for that pair.*\n *\n * A _target_ is always a {@link Node}, in the core glTF spec. A _path_ is any property of that\n * Node that can be affected by animation: `translation`, `rotation`, `scale`, or `weights`. An\n * {@link Animation} affecting the positions and rotations of several {@link Node}s would contain\n * one channel for each Node-position or Node-rotation pair. The keyframe data for an\n * AnimationChannel is stored in an {@link AnimationSampler}, which must be attached to the same\n * {@link Animation}.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.getRoot()\n * \t.listNodes()\n * \t.find((node) => node.getName() === 'Cog');\n *\n * const channel = doc.createAnimationChannel('cogRotation')\n * \t.setTargetPath('rotation')\n * \t.setTargetNode(node)\n * \t.setSampler(rotateSampler);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#animations)\n */\nexport class AnimationChannel extends ExtensibleProperty<IAnimationChannel> {\n\tpublic declare propertyType: PropertyType.ANIMATION_CHANNEL;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Name of the property to be modified by an animation channel. */\n\tpublic static TargetPath: Record<string, GLTF.AnimationChannelTargetPath> = {\n\t\t/** Channel targets {@link Node.setTranslation}. */\n\t\tTRANSLATION: 'translation',\n\t\t/** Channel targets {@link Node.setRotation}. */\n\t\tROTATION: 'rotation',\n\t\t/** Channel targets {@link Node.setScale}. */\n\t\tSCALE: 'scale',\n\t\t/** Channel targets {@link Node.setWeights}, affecting {@link PrimitiveTarget} weights. */\n\t\tWEIGHTS: 'weights',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION_CHANNEL;\n\t}\n\n\tprotected getDefaults(): Nullable<IAnimationChannel> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttargetPath: null,\n\t\t\ttargetNode: null,\n\t\t\tsampler: null,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Properties.\n\t */\n\n\t/**\n\t * Path (property) animated on the target {@link Node}. Supported values include:\n\t * `translation`, `rotation`, `scale`, or `weights`.\n\t */\n\tpublic getTargetPath(): GLTF.AnimationChannelTargetPath | null {\n\t\treturn this.get('targetPath');\n\t}\n\n\t/**\n\t * Path (property) animated on the target {@link Node}. Supported values include:\n\t * `translation`, `rotation`, `scale`, or `weights`.\n\t */\n\tpublic setTargetPath(targetPath: GLTF.AnimationChannelTargetPath): this {\n\t\treturn this.set('targetPath', targetPath);\n\t}\n\n\t/** Target {@link Node} animated by the channel. */\n\tpublic getTargetNode(): Node | null {\n\t\treturn this.getRef('targetNode');\n\t}\n\n\t/** Target {@link Node} animated by the channel. */\n\tpublic setTargetNode(targetNode: Node | null): this {\n\t\treturn this.setRef('targetNode', targetNode);\n\t}\n\n\t/**\n\t * Keyframe data input/output values for the channel. Must be attached to the same\n\t * {@link Animation}.\n\t */\n\tpublic getSampler(): AnimationSampler | null {\n\t\treturn this.getRef('sampler');\n\t}\n\n\t/**\n\t * Keyframe data input/output values for the channel. Must be attached to the same\n\t * {@link Animation}.\n\t */\n\tpublic setSampler(sampler: AnimationSampler | null): this {\n\t\treturn this.setRef('sampler', sampler);\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { Accessor } from './accessor';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface IAnimationSampler extends IExtensibleProperty {\n\tinterpolation: GLTF.AnimationSamplerInterpolation;\n\tinput: Accessor;\n\toutput: Accessor;\n}\n\n/**\n * # AnimationSampler\n *\n * *Reusable collection of keyframes affecting particular property of an object.*\n *\n * Each AnimationSampler refers to an input and an output {@link Accessor}. Input contains times\n * (in seconds) for each keyframe. Output contains values (of any {@link Accessor.Type}) for the\n * animated property at each keyframe. Samplers using `CUBICSPLINE` interpolation will also contain\n * in/out tangents in the output, with the layout:\n *\n * in<sub>1</sub>, value<sub>1</sub>, out<sub>1</sub>,\n * in<sub>2</sub>, value<sub>2</sub>, out<sub>2</sub>,\n * in<sub>3</sub>, value<sub>3</sub>, out<sub>3</sub>, ...\n *\n * Usage:\n *\n * ```ts\n * // Create accessor containing input times, in seconds.\n * const input = doc.createAccessor('bounceTimes')\n * \t.setArray(new Float32Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR);\n *\n * // Create accessor containing output values, in local units.\n * const output = doc.createAccessor('bounceValues')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0, // y = 0\n * \t\t0, 1, 0, // y = 1\n * \t\t0, 0, 0, // y = 0\n * \t]))\n * \t.setType(Accessor.Type.VEC3);\n *\n * // Create sampler.\n * const sampler = doc.createAnimationSampler('bounce')\n * \t.setInput(input)\n * \t.setOutput(output)\n * \t.setInterpolation('LINEAR');\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#animations)\n */\nexport class AnimationSampler extends ExtensibleProperty<IAnimationSampler> {\n\tpublic declare propertyType: PropertyType.ANIMATION_SAMPLER;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Interpolation method. */\n\tpublic static Interpolation: Record<string, GLTF.AnimationSamplerInterpolation> = {\n\t\t/** Animated values are linearly interpolated between keyframes. */\n\t\tLINEAR: 'LINEAR',\n\t\t/** Animated values remain constant from one keyframe until the next keyframe. */\n\t\tSTEP: 'STEP',\n\t\t/** Animated values are interpolated according to given cubic spline tangents. */\n\t\tCUBICSPLINE: 'CUBICSPLINE',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION_SAMPLER;\n\t}\n\n\tprotected getDefaultAttributes(): Nullable<IAnimationSampler> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tinterpolation: AnimationSampler.Interpolation.LINEAR,\n\t\t\tinput: null,\n\t\t\toutput: null,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Static.\n\t */\n\n\t/** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n\tpublic getInterpolation(): GLTF.AnimationSamplerInterpolation {\n\t\treturn this.get('interpolation');\n\t}\n\n\t/** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n\tpublic setInterpolation(interpolation: GLTF.AnimationSamplerInterpolation): this {\n\t\treturn this.set('interpolation', interpolation);\n\t}\n\n\t/** Times for each keyframe, in seconds. */\n\tpublic getInput(): Accessor | null {\n\t\treturn this.getRef('input');\n\t}\n\n\t/** Times for each keyframe, in seconds. */\n\tpublic setInput(input: Accessor | null): this {\n\t\treturn this.setRef('input', input, { usage: BufferViewUsage.OTHER });\n\t}\n\n\t/**\n\t * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n\t * tangents.\n\t */\n\tpublic getOutput(): Accessor | null {\n\t\treturn this.getRef('output');\n\t}\n\n\t/**\n\t * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n\t * tangents.\n\t */\n\tpublic setOutput(output: Accessor | null): this {\n\t\treturn this.setRef('output', output, { usage: BufferViewUsage.OTHER });\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface IBuffer extends IExtensibleProperty {\n\turi: string;\n}\n\n/**\n * # Buffer\n *\n * *Buffers are low-level storage units for binary data.*\n *\n * glTF 2.0 has three concepts relevant to binary storage: accessors, buffer views, and buffers.\n * In glTF-Transform, an {@link Accessor} is referenced by any property that requires numeric typed\n * array data. Meshes, Primitives, and Animations all reference Accessors. Buffers define how that\n * data is organized into transmitted file(s). A `.glb` file has only a single Buffer, and when\n * exporting to `.glb` your resources should be grouped accordingly. A `.gltf` file may reference\n * one or more `.bin` files — each `.bin` is a Buffer — and grouping Accessors under different\n * Buffers allow you to specify that structure.\n *\n * For engines that can dynamically load portions of a glTF file, splitting data into separate\n * buffers can allow you to avoid loading data until it is needed. For example, you might put\n * binary data for specific meshes into a different `.bin` buffer, or put each animation's binary\n * payload into its own `.bin`.\n *\n * Buffer Views define how Accessors are organized within a given Buffer. glTF-Transform creates an\n * efficient Buffer View layout automatically at export: there is no Buffer View property exposed\n * by the glTF-Transform API, simplifying data management.\n *\n * Usage:\n *\n * ```ts\n * // Create two buffers with custom filenames.\n * const buffer1 = doc.createBuffer('buffer1')\n * \t.setURI('part1.bin');\n * const buffer2 = doc.createBuffer('buffer2')\n * \t.setURI('part2.bin');\n *\n * // Assign the attributes of two meshes to different buffers. If the meshes\n * // had indices or morph target attributes, you would also want to relocate\n * // those accessors.\n * mesh1\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer1)));\n * mesh2\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer2)));\n *\n * // Write to disk. Each mesh's binary data will be in a separate binary file;\n * // any remaining accessors will be in a third (default) buffer.\n * await new NodeIO().write('scene.gltf', doc);\n * // → scene.gltf, part1.bin, part2.bin\n * ```\n *\n * References:\n * - [glTF → Buffers and Buffer Views](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views)\n * - [glTF → Accessors](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nexport class Buffer extends ExtensibleProperty<IBuffer> {\n\tpublic declare propertyType: PropertyType.BUFFER;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.BUFFER;\n\t}\n\n\tprotected getDefaults(): Nullable<IBuffer> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { uri: '' });\n\t}\n\n\t/**\n\t * Returns the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n\t * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n\t * is possible for custom applications, but will limit the compatibility of the asset with most\n\t * tools.\n\t *\n\t * Buffers commonly use the extension `.bin`, though this is not required.\n\t */\n\tpublic getURI(): string {\n\t\treturn this.get('uri');\n\t}\n\n\t/**\n\t * Sets the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n\t * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n\t * is possible for custom applications, but will limit the compatibility of the asset with most\n\t * tools.\n\t *\n\t * Buffers commonly use the extension `.bin`, though this is not required.\n\t */\n\tpublic setURI(uri: string): this {\n\t\treturn this.set('uri', uri);\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface ICamera extends IExtensibleProperty {\n\ttype: GLTF.CameraType;\n\tznear: number;\n\tzfar: number;\n\taspectRatio: number | null;\n\tyfov: number;\n\txmag: number;\n\tymag: number;\n}\n\n/**\n * # Camera\n *\n * *Cameras are perspectives through which the {@link Scene} may be viewed.*\n *\n * Projection can be perspective or orthographic. Cameras are contained in nodes and thus can be\n * transformed. The camera is defined such that the local +X axis is to the right, the lens looks\n * towards the local -Z axis, and the top of the camera is aligned with the local +Y axis. If no\n * transformation is specified, the location of the camera is at the origin.\n *\n * Usage:\n *\n * ```typescript\n * const camera = doc.createCamera('myCamera')\n * \t.setType(GLTF.CameraType.PERSPECTIVE)\n * \t.setZNear(0.1)\n * \t.setZFar(100)\n * \t.setYFov(Math.PI / 4)\n * \t.setAspectRatio(1.5);\n *\n * node.setCamera(camera);\n * ```\n *\n * References:\n * - [glTF → Cameras](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#cameras)\n *\n * @category Properties\n */\nexport class Camera extends ExtensibleProperty<ICamera> {\n\tpublic declare propertyType: PropertyType.CAMERA;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\tpublic static Type: Record<string, GLTF.CameraType> = {\n\t\t/** A perspective camera representing a perspective projection matrix. */\n\t\tPERSPECTIVE: 'perspective',\n\t\t/** An orthographic camera representing an orthographic projection matrix. */\n\t\tORTHOGRAPHIC: 'orthographic',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.CAMERA;\n\t}\n\n\tprotected getDefaults(): Nullable<ICamera> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\t// Common.\n\t\t\ttype: Camera.Type.PERSPECTIVE,\n\t\t\tznear: 0.1,\n\t\t\tzfar: 100,\n\t\t\t// Perspective.\n\t\t\taspectRatio: null,\n\t\t\tyfov: (Math.PI * 2 * 50) / 360, // 50º\n\t\t\t// Orthographic.\n\t\t\txmag: 1,\n\t\t\tymag: 1,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Common.\n\t */\n\n\t/** Specifies if the camera uses a perspective or orthographic projection. */\n\tpublic getType(): GLTF.CameraType {\n\t\treturn this.get('type');\n\t}\n\n\t/** Specifies if the camera uses a perspective or orthographic projection. */\n\tpublic setType(type: GLTF.CameraType): this {\n\t\treturn this.set('type', type);\n\t}\n\n\t/** Floating-point distance to the near clipping plane. */\n\tpublic getZNear(): number {\n\t\treturn this.get('znear');\n\t}\n\n\t/** Floating-point distance to the near clipping plane. */\n\tpublic setZNear(znear: number): this {\n\t\treturn this.set('znear', znear);\n\t}\n\n\t/**\n\t * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n\t * znear. If zfar is undefined, runtime must use infinite projection matrix.\n\t */\n\tpublic getZFar(): number {\n\t\treturn this.get('zfar');\n\t}\n\n\t/**\n\t * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n\t * znear. If zfar is undefined, runtime must use infinite projection matrix.\n\t */\n\tpublic setZFar(zfar: number): this {\n\t\treturn this.set('zfar', zfar);\n\t}\n\n\t/**********************************************************************************************\n\t * Perspective.\n\t */\n\n\t/**\n\t * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n\t * canvas is used.\n\t */\n\tpublic getAspectRatio(): number | null {\n\t\treturn this.get('aspectRatio');\n\t}\n\n\t/**\n\t * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n\t * canvas is used.\n\t */\n\tpublic setAspectRatio(aspectRatio: number | null): this {\n\t\treturn this.set('aspectRatio', aspectRatio);\n\t}\n\n\t/** Floating-point vertical field of view in radians. */\n\tpublic getYFov(): number {\n\t\treturn this.get('yfov');\n\t}\n\n\t/** Floating-point vertical field of view in radians. */\n\tpublic setYFov(yfov: number): this {\n\t\treturn this.set('yfov', yfov);\n\t}\n\n\t/**********************************************************************************************\n\t * Orthographic.\n\t */\n\n\t/**\n\t * Floating-point horizontal magnification of the view, and half the view's width\n\t * in world units.\n\t */\n\tpublic getXMag(): number {\n\t\treturn this.get('xmag');\n\t}\n\n\t/**\n\t * Floating-point horizontal magnification of the view, and half the view's width\n\t * in world units.\n\t */\n\tpublic setXMag(xmag: number): this {\n\t\treturn this.set('xmag', xmag);\n\t}\n\n\t/**\n\t * Floating-point vertical magnification of the view, and half the view's height\n\t * in world units.\n\t */\n\tpublic getYMag(): number {\n\t\treturn this.get('ymag');\n\t}\n\n\t/**\n\t * Floating-point vertical magnification of the view, and half the view's height\n\t * in world units.\n\t */\n\tpublic setYMag(ymag: number): this {\n\t\treturn this.set('ymag', ymag);\n\t}\n}\n","import { ExtensibleProperty } from './extensible-property';\nimport { Property, IProperty } from './property';\n\n/**\n * # ExtensionProperty\n *\n * *Base class for all {@link Property} types that can be attached by an {@link Extension}.*\n *\n * After an {@link Extension} is attached to a glTF {@link Document}, the Extension may be used to\n * construct ExtensionProperty instances, to be referenced throughout the document as prescribed by\n * the Extension. For example, the `KHR_materials_clearcoat` Extension defines a `Clearcoat`\n * ExtensionProperty, which is referenced by {@link Material} Properties in the Document, and may\n * contain references to {@link Texture} properties of its own.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#specifying-extensions)\n */\nexport abstract class ExtensionProperty<T extends IProperty = IProperty> extends Property<T> {\n\tpublic static EXTENSION_NAME: string;\n\tpublic abstract readonly extensionName: string;\n\n\t/** List of supported {@link Property} types. */\n\tpublic abstract readonly parentTypes: string[];\n\n\t/** @hidden */\n\tpublic _validateParent(parent: ExtensibleProperty): void {\n\t\tif (!this.parentTypes.includes(parent.propertyType)) {\n\t\t\tthrow new Error(`Parent \"${parent.propertyType}\" invalid for child \"${this.propertyType}\".`);\n\t\t}\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface ITextureInfo extends IExtensibleProperty {\n\ttexCoord: number;\n\n\t// Sampler properties are also attached to TextureInfo, for simplicity.\n\tmagFilter: GLTF.TextureMagFilter | null;\n\tminFilter: GLTF.TextureMinFilter | null;\n\twrapS: GLTF.TextureWrapMode;\n\twrapT: GLTF.TextureWrapMode;\n}\n\n/**\n * # TextureInfo\n *\n * *Settings associated with a particular use of a {@link Texture}.*\n *\n * Different materials may reuse the same texture but with different texture coordinates,\n * minFilter/magFilter, or wrapS/wrapT settings. The TextureInfo class contains settings\n * derived from both the \"TextureInfo\" and \"Sampler\" properties in the glTF specification,\n * consolidated here for simplicity.\n *\n * TextureInfo properties cannot be directly created. For any material texture slot, such as\n * baseColorTexture, there will be a corresponding method to obtain the TextureInfo for that slot.\n * For example, see {@link Material.getBaseColorTextureInfo}.\n *\n * References:\n * - [glTF → Texture Info](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#reference-textureinfo)\n *\n * @category Properties\n */\nexport class TextureInfo extends ExtensibleProperty<ITextureInfo> {\n\tpublic declare propertyType: PropertyType.TEXTURE_INFO;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** UV wrapping mode. Values correspond to WebGL enums. */\n\tpublic static WrapMode: Record<string, GLTF.TextureWrapMode> = {\n\t\t/** */\n\t\tCLAMP_TO_EDGE: 33071,\n\t\t/** */\n\t\tMIRRORED_REPEAT: 33648,\n\t\t/** */\n\t\tREPEAT: 10497,\n\t};\n\n\t/** Magnification filter. Values correspond to WebGL enums. */\n\tpublic static MagFilter: Record<string, GLTF.TextureMagFilter> = {\n\t\t/** */\n\t\tNEAREST: 9728,\n\t\t/** */\n\t\tLINEAR: 9729,\n\t};\n\n\t/** Minification filter. Values correspond to WebGL enums. */\n\tpublic static MinFilter: Record<string, GLTF.TextureMinFilter> = {\n\t\t/** */\n\t\tNEAREST: 9728,\n\t\t/** */\n\t\tLINEAR: 9729,\n\t\t/** */\n\t\tNEAREST_MIPMAP_NEAREST: 9984,\n\t\t/** */\n\t\tLINEAR_MIPMAP_NEAREST: 9985,\n\t\t/** */\n\t\tNEAREST_MIPMAP_LINEAR: 9986,\n\t\t/** */\n\t\tLINEAR_MIPMAP_LINEAR: 9987,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.TEXTURE_INFO;\n\t}\n\n\tprotected getDefaults(): Nullable<ITextureInfo> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttexCoord: 0,\n\t\t\tmagFilter: null,\n\t\t\tminFilter: null,\n\t\t\twrapS: TextureInfo.WrapMode.REPEAT,\n\t\t\twrapT: TextureInfo.WrapMode.REPEAT,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Texture coordinates.\n\t */\n\n\t/** Returns the texture coordinate (UV set) index for the texture. */\n\tpublic getTexCoord(): number {\n\t\treturn this.get('texCoord');\n\t}\n\n\t/** Sets the texture coordinate (UV set) index for the texture. */\n\tpublic setTexCoord(texCoord: number): this {\n\t\treturn this.set('texCoord', texCoord);\n\t}\n\n\t/**********************************************************************************************\n\t * Min/mag filter.\n\t */\n\n\t/** Returns the magnification filter applied to the texture. */\n\tpublic getMagFilter(): GLTF.TextureMagFilter | null {\n\t\treturn this.get('magFilter');\n\t}\n\n\t/** Sets the magnification filter applied to the texture. */\n\tpublic setMagFilter(magFilter: GLTF.TextureMagFilter | null): this {\n\t\treturn this.set('magFilter', magFilter);\n\t}\n\n\t/** Sets the minification filter applied to the texture. */\n\tpublic getMinFilter(): GLTF.TextureMinFilter | null {\n\t\treturn this.get('minFilter');\n\t}\n\n\t/** Returns the minification filter applied to the texture. */\n\tpublic setMinFilter(minFilter: GLTF.TextureMinFilter | null): this {\n\t\treturn this.set('minFilter', minFilter);\n\t}\n\n\t/**********************************************************************************************\n\t * UV wrapping.\n\t */\n\n\t/** Returns the S (U) wrapping mode for UVs used by the texture. */\n\tpublic getWrapS(): GLTF.TextureWrapMode {\n\t\treturn this.get('wrapS');\n\t}\n\n\t/** Sets the S (U) wrapping mode for UVs used by the texture. */\n\tpublic setWrapS(wrapS: GLTF.TextureWrapMode): this {\n\t\treturn this.set('wrapS', wrapS);\n\t}\n\n\t/** Returns the T (V) wrapping mode for UVs used by the texture. */\n\tpublic getWrapT(): GLTF.TextureWrapMode {\n\t\treturn this.get('wrapT');\n\t}\n\n\t/** Sets the T (V) wrapping mode for UVs used by the texture. */\n\tpublic setWrapT(wrapT: GLTF.TextureWrapMode): this {\n\t\treturn this.set('wrapT', wrapT);\n\t}\n}\n","import { Nullable, PropertyType, TextureChannel, vec3, vec4 } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { ColorUtils } from '../utils';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Texture } from './texture';\nimport { TextureInfo } from './texture-info';\n\nconst { R, G, B, A } = TextureChannel;\n\ninterface IMaterial extends IExtensibleProperty {\n\talphaMode: GLTF.MaterialAlphaMode;\n\talphaCutoff: number;\n\tdoubleSided: boolean;\n\tbaseColorFactor: vec4;\n\tbaseColorTexture: Texture;\n\tbaseColorTextureInfo: TextureInfo;\n\temissiveFactor: vec3;\n\temissiveTexture: Texture;\n\temissiveTextureInfo: TextureInfo;\n\tnormalScale: number;\n\tnormalTexture: Texture;\n\tnormalTextureInfo: TextureInfo;\n\tocclusionStrength: number;\n\tocclusionTexture: Texture;\n\tocclusionTextureInfo: TextureInfo;\n\troughnessFactor: number;\n\tmetallicFactor: number;\n\tmetallicRoughnessTexture: Texture;\n\tmetallicRoughnessTextureInfo: TextureInfo;\n}\n\n/**\n * # Material\n *\n * *Materials describe a surface's appearance and response to light.*\n *\n * Each {@link Primitive} within a {@link Mesh} may be assigned a single Material. The number of\n * GPU draw calls typically increases with both the numbers of Primitives and of Materials in an\n * asset; Materials should be reused wherever possible. Techniques like texture atlasing and vertex\n * colors allow objects to have varied appearances while technically sharing a single Material.\n *\n * Material properties are modified by both scalars (like `baseColorFactor`) and textures (like\n * `baseColorTexture`). When both are available, factors are considered linear multipliers against\n * textures of the same name. In the case of base color, vertex colors (`COLOR_0` attributes) are\n * also multiplied.\n *\n * Textures containing color data (`baseColorTexture`, `emissiveTexture`) are sRGB. All other\n * textures are linear. Like other resources, textures should be reused when possible.\n *\n * Usage:\n *\n * ```typescript\n * const material = doc.createMaterial('myMaterial')\n * \t.setBaseColorFactor([1, 0.5, 0.5, 1]) // RGBA\n * \t.setOcclusionTexture(aoTexture)\n * \t.setOcclusionStrength(0.5);\n *\n * mesh.listPrimitives()\n * \t.forEach((prim) => prim.setMaterial(material));\n * ```\n *\n * @category Properties\n */\nexport class Material extends ExtensibleProperty<IMaterial> {\n\tpublic declare propertyType: PropertyType.MATERIAL;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\tpublic static AlphaMode: Record<string, GLTF.MaterialAlphaMode> = {\n\t\t/**\n\t\t * The alpha value is ignored and the rendered output is fully opaque\n\t\t */\n\t\tOPAQUE: 'OPAQUE',\n\t\t/**\n\t\t * The rendered output is either fully opaque or fully transparent depending on the alpha\n\t\t * value and the specified alpha cutoff value\n\t\t */\n\t\tMASK: 'MASK',\n\t\t/**\n\t\t * The alpha value is used to composite the source and destination areas. The rendered\n\t\t * output is combined with the background using the normal painting operation (i.e. the\n\t\t * Porter and Duff over operator)\n\t\t */\n\t\tBLEND: 'BLEND',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.MATERIAL;\n\t}\n\n\tprotected getDefaults(): Nullable<IMaterial> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\talphaMode: Material.AlphaMode.OPAQUE,\n\t\t\talphaCutoff: 0.5,\n\t\t\tdoubleSided: false,\n\t\t\tbaseColorFactor: [1, 1, 1, 1] as vec4,\n\t\t\tbaseColorTexture: null,\n\t\t\tbaseColorTextureInfo: new TextureInfo(this.graph, 'baseColorTextureInfo'),\n\t\t\temissiveFactor: [0, 0, 0] as vec3,\n\t\t\temissiveTexture: null,\n\t\t\temissiveTextureInfo: new TextureInfo(this.graph, 'emissiveTextureInfo'),\n\t\t\tnormalScale: 1,\n\t\t\tnormalTexture: null,\n\t\t\tnormalTextureInfo: new TextureInfo(this.graph, 'normalTextureInfo'),\n\t\t\tocclusionStrength: 1,\n\t\t\tocclusionTexture: null,\n\t\t\tocclusionTextureInfo: new TextureInfo(this.graph, 'occlusionTextureInfo'),\n\t\t\troughnessFactor: 1,\n\t\t\tmetallicFactor: 1,\n\t\t\tmetallicRoughnessTexture: null,\n\t\t\tmetallicRoughnessTextureInfo: new TextureInfo(this.graph, 'metallicRoughnessTextureInfo'),\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Double-sided / culling.\n\t */\n\n\t/** Returns true when both sides of triangles should be rendered. May impact performance. */\n\tpublic getDoubleSided(): boolean {\n\t\treturn this.get('doubleSided');\n\t}\n\n\t/** Sets whether to render both sides of triangles. May impact performance. */\n\tpublic setDoubleSided(doubleSided: boolean): this {\n\t\treturn this.set('doubleSided', doubleSided);\n\t}\n\n\t/**********************************************************************************************\n\t * Alpha.\n\t */\n\n\t/** Returns material alpha, equivalent to baseColorFactor[3]. */\n\tpublic getAlpha(): number {\n\t\treturn this.get('baseColorFactor')[3];\n\t}\n\n\t/** Sets material alpha, equivalent to baseColorFactor[3]. */\n\tpublic setAlpha(alpha: number): this {\n\t\tconst baseColorFactor = this.get('baseColorFactor').slice() as vec4;\n\t\tbaseColorFactor[3] = alpha;\n\t\treturn this.set('baseColorFactor', baseColorFactor);\n\t}\n\n\t/**\n\t * Returns the mode of the material's alpha channels, which are provided by `baseColorFactor`\n\t * and `baseColorTexture`.\n\t *\n\t * - `OPAQUE`: Alpha value is ignored and the rendered output is fully opaque.\n\t * - `BLEND`: Alpha value is used to determine the transparency each pixel on a surface, and\n\t * \tthe fraction of surface vs. background color in the final result. Alpha blending creates\n\t *\tsignificant edge cases in realtime renderers, and some care when structuring the model is\n\t * \tnecessary for good results. In particular, transparent geometry should be kept in separate\n\t * \tmeshes or primitives from opaque geometry. The `depthWrite` or `zWrite` settings in engines\n\t * \tshould usually be disabled on transparent materials.\n\t * - `MASK`: Alpha value is compared against `alphaCutoff` threshold for each pixel on a\n\t * \tsurface, and the pixel is either fully visible or fully discarded based on that cutoff.\n\t * \tThis technique is useful for things like leafs/foliage, grass, fabric meshes, and other\n\t * \tsurfaces where no semitransparency is needed. With a good choice of `alphaCutoff`, surfaces\n\t * \tthat don't require semitransparency can avoid the performance penalties and visual issues\n\t * \tinvolved with `BLEND` transparency.\n\t *\n\t * Reference:\n\t * - [glTF → material.alphaMode](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materialalphamode)\n\t */\n\tpublic getAlphaMode(): GLTF.MaterialAlphaMode {\n\t\treturn this.get('alphaMode');\n\t}\n\n\t/** Sets the mode of the material's alpha channels. See {@link getAlphaMode} for details. */\n\tpublic setAlphaMode(alphaMode: GLTF.MaterialAlphaMode): this {\n\t\treturn this.set('alphaMode', alphaMode);\n\t}\n\n\t/** Returns the visibility threshold; applied only when `.alphaMode='MASK'`. */\n\tpublic getAlphaCutoff(): number {\n\t\treturn this.get('alphaCutoff');\n\t}\n\n\t/** Sets the visibility threshold; applied only when `.alphaMode='MASK'`. */\n\tpublic setAlphaCutoff(alphaCutoff: number): this {\n\t\treturn this.set('alphaCutoff', alphaCutoff);\n\t}\n\n\t/**********************************************************************************************\n\t * Base color.\n\t */\n\n\t/** Base color / albedo factor; Linear-sRGB components. See {@link getBaseColorTexture}. */\n\tpublic getBaseColorFactor(): vec4 {\n\t\treturn this.get('baseColorFactor');\n\t}\n\n\t/** Base color / albedo factor; Linear-sRGB components. See {@link getBaseColorTexture}. */\n\tpublic setBaseColorFactor(baseColorFactor: vec4): this {\n\t\treturn this.set('baseColorFactor', baseColorFactor);\n\t}\n\n\t/**\n\t * Base color / albedo; sRGB hexadecimal color. See {@link getBaseColorTexture}.\n\t */\n\tpublic getBaseColorHex(): number {\n\t\treturn ColorUtils.factorToHex(this.get('baseColorFactor'));\n\t}\n\n\t/**\n\t * Base color / albedo; sRGB hexadecimal color. See {@link getBaseColorTexture}.\n\t */\n\tpublic setBaseColorHex(hex: number): this {\n\t\tconst factor = this.get('baseColorFactor').slice() as vec4;\n\t\treturn this.set('baseColorFactor', ColorUtils.hexToFactor(hex, factor));\n\t}\n\n\t/**\n\t * Base color / albedo. The visible color of a non-metallic surface under constant ambient\n\t * light would be a linear combination (multiplication) of its vertex colors, base color\n\t * factor, and base color texture. Lighting, and reflections in metallic or smooth surfaces,\n\t * also effect the final color. The alpha (`.a`) channel of base color factors and textures\n\t * will have varying effects, based on the setting of {@link getAlphaMode}.\n\t *\n\t * Reference:\n\t * - [glTF → material.pbrMetallicRoughness.baseColorFactor](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#pbrmetallicroughnessbasecolorfactor)\n\t */\n\tpublic getBaseColorTexture(): Texture | null {\n\t\treturn this.getRef('baseColorTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its base color texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getBaseColorTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('baseColorTexture') ? this.getRef('baseColorTextureInfo') : null;\n\t}\n\n\t/** Sets base color / albedo texture. See {@link getBaseColorTexture}. */\n\tpublic setBaseColorTexture(texture: Texture | null): this {\n\t\treturn this.setRef('baseColorTexture', texture, { channels: R | G | B | A });\n\t}\n\n\t/**********************************************************************************************\n\t * Emissive.\n\t */\n\n\t/** Emissive color; Linear-sRGB components. See {@link getEmissiveTexture}. */\n\tpublic getEmissiveFactor(): vec3 {\n\t\treturn this.get('emissiveFactor');\n\t}\n\n\t/** Emissive color; Linear-sRGB components. See {@link getEmissiveTexture}. */\n\tpublic setEmissiveFactor(emissiveFactor: vec3): this {\n\t\treturn this.set('emissiveFactor', emissiveFactor);\n\t}\n\n\t/** Emissive; sRGB hexadecimal color. See {@link getBaseColorTexture}. */\n\tpublic getEmissiveHex(): number {\n\t\treturn ColorUtils.factorToHex(this.get('emissiveFactor'));\n\t}\n\n\t/** Emissive; sRGB hexadecimal color. See {@link getEmissiveTexture}. */\n\tpublic setEmissiveHex(hex: number): this {\n\t\tconst factor = this.get('emissiveFactor').slice() as vec3;\n\t\treturn this.set('emissiveFactor', ColorUtils.hexToFactor(hex, factor));\n\t}\n\n\t/**\n\t * Emissive texture. Emissive color is added to any base color of the material, after any\n\t * lighting/shadowing are applied. An emissive color does not inherently \"glow\", or affect\n\t * objects around it at all. To create that effect, most viewers must also enable a\n\t * post-processing effect called \"bloom\".\n\t *\n\t * Reference:\n\t * - [glTF → material.emissiveTexture](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materialemissivetexture)\n\t */\n\tpublic getEmissiveTexture(): Texture | null {\n\t\treturn this.getRef('emissiveTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its emissive texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getEmissiveTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('emissiveTexture') ? this.getRef('emissiveTextureInfo') : null;\n\t}\n\n\t/** Sets emissive texture. See {@link getEmissiveTexture}. */\n\tpublic setEmissiveTexture(texture: Texture | null): this {\n\t\treturn this.setRef('emissiveTexture', texture, { channels: R | G | B });\n\t}\n\n\t/**********************************************************************************************\n\t * Normal.\n\t */\n\n\t/** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n\tpublic getNormalScale(): number {\n\t\treturn this.get('normalScale');\n\t}\n\n\t/** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n\tpublic setNormalScale(scale: number): this {\n\t\treturn this.set('normalScale', scale);\n\t}\n\n\t/**\n\t * Normal (surface detail) texture.\n\t *\n\t * A tangent space normal map. The texture contains RGB components. Each texel represents the\n\t * XYZ components of a normal vector in tangent space. Red [0 to 255] maps to X [-1 to 1].\n\t * Green [0 to 255] maps to Y [-1 to 1]. Blue [128 to 255] maps to Z [1/255 to 1]. The normal\n\t * vectors use OpenGL conventions where +X is right and +Y is up. +Z points toward the viewer.\n\t *\n\t * Reference:\n\t * - [glTF → material.normalTexture](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materialnormaltexture)\n\t */\n\tpublic getNormalTexture(): Texture | null {\n\t\treturn this.getRef('normalTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its normal texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getNormalTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('normalTexture') ? this.getRef('normalTextureInfo') : null;\n\t}\n\n\t/** Sets normal (surface detail) texture. See {@link getNormalTexture}. */\n\tpublic setNormalTexture(texture: Texture | null): this {\n\t\treturn this.setRef('normalTexture', texture, { channels: R | G | B });\n\t}\n\n\t/**********************************************************************************************\n\t * Occlusion.\n\t */\n\n\t/** (Ambient) Occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n\tpublic getOcclusionStrength(): number {\n\t\treturn this.get('occlusionStrength');\n\t}\n\n\t/** Sets (ambient) occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n\tpublic setOcclusionStrength(strength: number): this {\n\t\treturn this.set('occlusionStrength', strength);\n\t}\n\n\t/**\n\t * (Ambient) Occlusion texture, generally used for subtle 'baked' shadowing effects that are\n\t * independent of an object's position, such as shading in inset areas and corners. Direct\n\t * lighting is not affected by occlusion, so at least one indirect light source must be present\n\t * in the scene for occlusion effects to be visible.\n\t *\n\t * The occlusion values are sampled from the R channel. Higher values indicate areas that\n\t * should receive full indirect lighting and lower values indicate no indirect lighting.\n\t *\n\t * Reference:\n\t * - [glTF → material.occlusionTexture](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materialocclusiontexture)\n\t */\n\tpublic getOcclusionTexture(): Texture | null {\n\t\treturn this.getRef('occlusionTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its occlusion texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getOcclusionTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('occlusionTexture') ? this.getRef('occlusionTextureInfo') : null;\n\t}\n\n\t/** Sets (ambient) occlusion texture. See {@link getOcclusionTexture}. */\n\tpublic setOcclusionTexture(texture: Texture | null): this {\n\t\treturn this.setRef('occlusionTexture', texture, { channels: R });\n\t}\n\n\t/**********************************************************************************************\n\t * Metallic / roughness.\n\t */\n\n\t/**\n\t * Roughness factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link getMetallicRoughnessTexture}.\n\t */\n\tpublic getRoughnessFactor(): number {\n\t\treturn this.get('roughnessFactor');\n\t}\n\n\t/**\n\t * Sets roughness factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link getMetallicRoughnessTexture}.\n\t */\n\tpublic setRoughnessFactor(factor: number): this {\n\t\treturn this.set('roughnessFactor', factor);\n\t}\n\n\t/**\n\t * Metallic factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link getMetallicRoughnessTexture}.\n\t */\n\tpublic getMetallicFactor(): number {\n\t\treturn this.get('metallicFactor');\n\t}\n\n\t/**\n\t * Sets metallic factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link getMetallicRoughnessTexture}.\n\t */\n\tpublic setMetallicFactor(factor: number): this {\n\t\treturn this.set('metallicFactor', factor);\n\t}\n\n\t/**\n\t * Metallic roughness texture. The metalness values are sampled from the B channel. The\n\t * roughness values are sampled from the G channel. When a material is fully metallic,\n\t * or nearly so, it may require image-based lighting (i.e. an environment map) or global\n\t * illumination to appear well-lit.\n\t *\n\t * Reference:\n\t * - [glTF → material.pbrMetallicRoughness.metallicRoughnessTexture](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#pbrmetallicroughnessmetallicroughnesstexture)\n\t */\n\tpublic getMetallicRoughnessTexture(): Texture | null {\n\t\treturn this.getRef('metallicRoughnessTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its metallic/roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getMetallicRoughnessTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('metallicRoughnessTexture') ? this.getRef('metallicRoughnessTextureInfo') : null;\n\t}\n\n\t/** Sets metallic/roughness texture. See {@link getMetallicRoughnessTexture}. */\n\tpublic setMetallicRoughnessTexture(texture: Texture | null): this {\n\t\treturn this.setRef('metallicRoughnessTexture', texture, { channels: G | B });\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Primitive } from './primitive';\n\ninterface IMesh extends IExtensibleProperty {\n\tweights: number[];\n\tprimitives: Primitive[];\n}\n\n/**\n * # Mesh\n *\n * *Meshes define reusable geometry (triangles, lines, or points) and are instantiated by\n * {@link Node}s.*\n *\n * Each draw call required to render a mesh is represented as a {@link Primitive}. Meshes typically\n * have only a single {@link Primitive}, but may have more for various reasons. A mesh manages only\n * a list of primitives — materials, morph targets, and other properties are managed on a per-\n * primitive basis.\n *\n * When the same geometry and material should be rendered at multiple places in the scene, reuse\n * the same Mesh instance and attach it to multiple nodes for better efficiency. Where the geometry\n * is shared but the material is not, reusing {@link Accessor}s under different meshes and\n * primitives can similarly improve transmission efficiency, although some rendering efficiency is\n * lost as the number of materials in a scene increases.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor);\n * const mesh = doc.createMesh('myMesh')\n * \t.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nexport class Mesh extends ExtensibleProperty<IMesh> {\n\tpublic declare propertyType: PropertyType.MESH;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.MESH;\n\t}\n\n\tprotected getDefaults(): Nullable<IMesh> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { weights: [], primitives: [] });\n\t}\n\n\t/** Adds a {@link Primitive} to the mesh's draw call list. */\n\tpublic addPrimitive(primitive: Primitive): this {\n\t\treturn this.addRef('primitives', primitive);\n\t}\n\n\t/** Removes a {@link Primitive} from the mesh's draw call list. */\n\tpublic removePrimitive(primitive: Primitive): this {\n\t\treturn this.removeRef('primitives', primitive);\n\t}\n\n\t/** Lists {@link Primitive} draw calls of the mesh. */\n\tpublic listPrimitives(): Primitive[] {\n\t\treturn this.listRefs('primitives');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n\t * have the same number of targets. Most engines only support 4-8 active morph targets at a\n\t * time.\n\t */\n\tpublic getWeights(): number[] {\n\t\treturn this.get('weights');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n\t * have the same number of targets. Most engines only support 4-8 active morph targets at a\n\t * time.\n\t */\n\tpublic setWeights(weights: number[]): this {\n\t\treturn this.set('weights', weights);\n\t}\n}\n","import { multiply } from 'gl-matrix/mat4';\nimport { PropertyType, mat4, vec3, vec4, Nullable } from '../constants';\nimport { $attributes } from 'property-graph';\nimport { MathUtils } from '../utils';\nimport { Camera } from './camera';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Mesh } from './mesh';\nimport { COPY_IDENTITY } from './property';\nimport { Skin } from './skin';\n\ninterface INode extends IExtensibleProperty {\n\ttranslation: vec3;\n\trotation: vec4;\n\tscale: vec3;\n\tweights: number[];\n\tcamera: Camera;\n\tmesh: Mesh;\n\tskin: Skin;\n\tchildren: Node[];\n}\n\n/**\n * # Node\n *\n * *Nodes are the objects that comprise a {@link Scene}.*\n *\n * Each node may have one or more children, and a transform (position, rotation, and scale) that\n * applies to all of its descendants. A node may also reference (or \"instantiate\") other resources\n * at its location, including {@link Mesh}, Camera, Light, and Skin properties. A node cannot be\n * part of more than one {@link Scene}.\n *\n * A node's local transform is represented with array-like objects, intended to be compatible with\n * [gl-matrix](https://github.com/toji/gl-matrix), or with the `toArray`/`fromArray` methods of\n * libraries like three.js and babylon.js.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.createNode('myNode')\n * \t.setMesh(mesh)\n * \t.setTranslation([0, 0, 0])\n * \t.addChild(otherNode);\n * ```\n *\n * References:\n * - [glTF → Nodes and Hierarchy](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#nodes-and-hierarchy)\n *\n * @category Properties\n */\nexport class Node extends ExtensibleProperty<INode> {\n\tpublic declare propertyType: PropertyType.NODE;\n\n\t/** @internal Internal reference to node's parent, omitted from {@link Graph}. */\n\tpublic _parent: SceneNode | null = null;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.NODE;\n\t}\n\n\tprotected getDefaults(): Nullable<INode> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttranslation: [0, 0, 0] as vec3,\n\t\t\trotation: [0, 0, 0, 1] as vec4,\n\t\t\tscale: [1, 1, 1] as vec3,\n\t\t\tweights: [],\n\t\t\tcamera: null,\n\t\t\tmesh: null,\n\t\t\tskin: null,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Node cannot be copied, only cloned. Copying is shallow, but nodes cannot have more than\n\t\t// one parent. Rather than leaving one of the two nodes without children, throw an error here.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Node cannot be copied.');\n\t\treturn super.copy(other, resolve);\n\t}\n\n\t/**********************************************************************************************\n\t * Local transform.\n\t */\n\n\t/** Returns the translation (position) of this node in local space. */\n\tpublic getTranslation(): vec3 {\n\t\treturn this.get('translation');\n\t}\n\n\t/** Returns the rotation (quaternion) of this node in local space. */\n\tpublic getRotation(): vec4 {\n\t\treturn this.get('rotation');\n\t}\n\n\t/** Returns the scale of this node in local space. */\n\tpublic getScale(): vec3 {\n\t\treturn this.get('scale');\n\t}\n\n\t/** Sets the translation (position) of this node in local space. */\n\tpublic setTranslation(translation: vec3): this {\n\t\treturn this.set('translation', translation);\n\t}\n\n\t/** Sets the rotation (quaternion) of this node in local space. */\n\tpublic setRotation(rotation: vec4): this {\n\t\treturn this.set('rotation', rotation);\n\t}\n\n\t/** Sets the scale of this node in local space. */\n\tpublic setScale(scale: vec3): this {\n\t\treturn this.set('scale', scale);\n\t}\n\n\t/** Returns the local matrix of this node. */\n\tpublic getMatrix(): mat4 {\n\t\treturn MathUtils.compose(\n\t\t\tthis.get('translation'),\n\t\t\tthis.get('rotation'),\n\t\t\tthis.get('scale'),\n\t\t\t[] as unknown as mat4\n\t\t);\n\t}\n\n\t/** Sets the local matrix of this node. Matrix will be decomposed to TRS properties. */\n\tpublic setMatrix(matrix: mat4): this {\n\t\tconst translation = this.get('translation').slice() as vec3;\n\t\tconst rotation = this.get('rotation').slice() as vec4;\n\t\tconst scale = this.get('scale').slice() as vec3;\n\t\tMathUtils.decompose(matrix, translation, rotation, scale);\n\t\treturn this.set('translation', translation).set('rotation', rotation).set('scale', scale);\n\t}\n\n\t/**********************************************************************************************\n\t * World transform.\n\t */\n\n\t/** Returns the translation (position) of this node in world space. */\n\tpublic getWorldTranslation(): vec3 {\n\t\tconst t = [0, 0, 0] as vec3;\n\t\tMathUtils.decompose(this.getWorldMatrix(), t, [0, 0, 0, 1], [1, 1, 1]);\n\t\treturn t;\n\t}\n\n\t/** Returns the rotation (quaternion) of this node in world space. */\n\tpublic getWorldRotation(): vec4 {\n\t\tconst r = [0, 0, 0, 1] as vec4;\n\t\tMathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], r, [1, 1, 1]);\n\t\treturn r;\n\t}\n\n\t/** Returns the scale of this node in world space. */\n\tpublic getWorldScale(): vec3 {\n\t\tconst s = [1, 1, 1] as vec3;\n\t\tMathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], [0, 0, 0, 1], s);\n\t\treturn s;\n\t}\n\n\t/** Returns the world matrix of this node. */\n\tpublic getWorldMatrix(): mat4 {\n\t\t// Build ancestor chain.\n\t\tconst ancestors: Node[] = [];\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tfor (let node: SceneNode | null = this; node instanceof Node; node = node._parent) {\n\t\t\tancestors.push(node);\n\t\t}\n\n\t\t// Compute world matrix.\n\t\tlet ancestor: Node | undefined;\n\t\tconst worldMatrix = ancestors.pop()!.getMatrix();\n\t\twhile ((ancestor = ancestors.pop())) {\n\t\t\tmultiply(worldMatrix, worldMatrix, ancestor.getMatrix());\n\t\t}\n\n\t\treturn worldMatrix;\n\t}\n\n\t/**********************************************************************************************\n\t * Scene hierarchy.\n\t */\n\n\t/** Adds another node as a child of this one. Nodes cannot have multiple parents. */\n\tpublic addChild(child: Node): this {\n\t\t// Remove existing parent.\n\t\tif (child._parent) child._parent.removeChild(child);\n\n\t\t// Edge in graph.\n\t\tthis.addRef('children', child);\n\n\t\t// Set new parent.\n\t\t// TODO(cleanup): Avoid using $attributes here?\n\t\tchild._parent = this;\n\t\tconst childrenRefs = this[$attributes]['children'];\n\t\tconst ref = childrenRefs[childrenRefs.length - 1];\n\t\tref.addEventListener('dispose', () => (child._parent = null));\n\t\treturn this;\n\t}\n\n\t/** Removes a node from this node's child node list. */\n\tpublic removeChild(child: Node): this {\n\t\treturn this.removeRef('children', child);\n\t}\n\n\t/** Lists all child nodes of this node. */\n\tpublic listChildren(): Node[] {\n\t\treturn this.listRefs('children');\n\t}\n\n\t/**\n\t * Returns the unique parent ({@link Scene}, {@link Node}, or null) of this node in the scene\n\t * hierarchy. Unrelated to {@link Property.listParents}, which lists all resource references.\n\t */\n\tpublic getParent(): SceneNode | null {\n\t\treturn this._parent;\n\t}\n\n\t/**********************************************************************************************\n\t * Attachments.\n\t */\n\n\t/** Returns the {@link Mesh}, if any, instantiated at this node. */\n\tpublic getMesh(): Mesh | null {\n\t\treturn this.getRef('mesh');\n\t}\n\n\t/**\n\t * Sets a {@link Mesh} to be instantiated at this node. A single mesh may be instatiated by\n\t * multiple nodes; reuse of this sort is strongly encouraged.\n\t */\n\tpublic setMesh(mesh: Mesh | null): this {\n\t\treturn this.setRef('mesh', mesh);\n\t}\n\n\t/** Returns the {@link Camera}, if any, instantiated at this node. */\n\tpublic getCamera(): Camera | null {\n\t\treturn this.getRef('camera');\n\t}\n\n\t/** Sets a {@link Camera} to be instantiated at this node. */\n\tpublic setCamera(camera: Camera | null): this {\n\t\treturn this.setRef('camera', camera);\n\t}\n\n\t/** Returns the {@link Skin}, if any, instantiated at this node. */\n\tpublic getSkin(): Skin | null {\n\t\treturn this.getRef('skin');\n\t}\n\n\t/** Sets a {@link Skin} to be instantiated at this node. */\n\tpublic setSkin(skin: Skin | null): this {\n\t\treturn this.setRef('skin', skin);\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this node.\n\t * Most engines only support 4-8 active morph targets at a time.\n\t */\n\tpublic getWeights(): number[] {\n\t\treturn this.get('weights');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this node.\n\t * Most engines only support 4-8 active morph targets at a time.\n\t */\n\tpublic setWeights(weights: number[]): this {\n\t\treturn this.set('weights', weights);\n\t}\n\n\t/**********************************************************************************************\n\t * Helpers.\n\t */\n\n\t/** Visits this {@link Node} and its descendants, top-down. */\n\tpublic traverse(fn: (node: Node) => void): this {\n\t\tfn(this);\n\t\tfor (const child of this.listChildren()) child.traverse(fn);\n\t\treturn this;\n\t}\n}\n\ninterface SceneNode {\n\tpropertyType: PropertyType;\n\t_parent?: SceneNode | null;\n\taddChild(node: Node): this;\n\tremoveChild(node: Node): this;\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants';\nimport { GLTF } from '../types/gltf';\nimport { Accessor } from './accessor';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Material } from './material';\nimport { PrimitiveTarget } from './primitive-target';\n\ninterface IPrimitive extends IExtensibleProperty {\n\tmode: GLTF.MeshPrimitiveMode;\n\tmaterial: Material;\n\tindices: Accessor;\n\tattributes: { [key: string]: Accessor };\n\ttargets: PrimitiveTarget[];\n}\n\n/**\n * # Primitive\n *\n * *Primitives are individual GPU draw calls comprising a {@link Mesh}.*\n *\n * Meshes typically have only a single Primitive, although various cases may require more. Each\n * primitive may be assigned vertex attributes, morph target attributes, and a material. Any of\n * these properties should be reused among multiple primitives where feasible.\n *\n * Primitives cannot be moved independently of other primitives within the same mesh, except\n * through the use of morph targets and skinning. If independent movement or other runtime\n * behavior is necessary (like raycasting or collisions) prefer to assign each primitive to a\n * different mesh. The number of GPU draw calls is typically not affected by grouping or\n * ungrouping primitives to a mesh.\n *\n * Each primitive may optionally be deformed by one or more morph targets, stored in a\n * {@link PrimitiveTarget}.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor)\n * \t.setMaterial(material);\n * mesh.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nexport class Primitive extends ExtensibleProperty<IPrimitive> {\n\tpublic declare propertyType: PropertyType.PRIMITIVE;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Type of primitives to render. All valid values correspond to WebGL enums. */\n\tpublic static Mode: Record<string, GLTF.MeshPrimitiveMode> = {\n\t\t/** Draw single points. */\n\t\tPOINTS: 0,\n\t\t/** Draw lines. Each vertex connects to the one after it. */\n\t\tLINES: 1,\n\t\t/**\n\t\t * Draw lines. Each set of two vertices is treated as a separate line segment.\n\t\t * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n\t\t */\n\t\tLINE_LOOP: 2,\n\t\t/** Draw a connected group of line segments from the first vertex to the last,  */\n\t\tLINE_STRIP: 3,\n\t\t/** Draw triangles. Each set of three vertices creates a separate triangle. */\n\t\tTRIANGLES: 4,\n\t\t/** Draw a connected strip of triangles. */\n\t\tTRIANGLE_STRIP: 5,\n\t\t/**\n\t\t * Draw a connected group of triangles. Each vertex connects to the previous and the first\n\t\t * vertex in the fan.\n\t\t * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n\t\t */\n\t\tTRIANGLE_FAN: 6,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.PRIMITIVE;\n\t}\n\n\tprotected getDefaults(): Nullable<IPrimitive> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tmode: Primitive.Mode.TRIANGLES,\n\t\t\tmaterial: null,\n\t\t\tindices: null,\n\t\t\tattributes: {},\n\t\t\ttargets: [],\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Primitive data.\n\t */\n\n\t/** Returns an {@link Accessor} with indices of vertices to be drawn. */\n\tpublic getIndices(): Accessor | null {\n\t\treturn this.getRef('indices');\n\t}\n\n\t/**\n\t * Sets an {@link Accessor} with indices of vertices to be drawn. In `TRIANGLES` draw mode,\n\t * each set of three indices define a triangle. The front face has a counter-clockwise (CCW)\n\t * winding order.\n\t */\n\tpublic setIndices(indices: Accessor | null): this {\n\t\treturn this.setRef('indices', indices, { usage: BufferViewUsage.ELEMENT_ARRAY_BUFFER });\n\t}\n\n\t/** Returns a vertex attribute as an {@link Accessor}. */\n\tpublic getAttribute(semantic: string): Accessor | null {\n\t\treturn this.getRefMap('attributes', semantic);\n\t}\n\n\t/**\n\t * Sets a vertex attribute to an {@link Accessor}. All attributes must have the same vertex\n\t * count.\n\t */\n\tpublic setAttribute(semantic: string, accessor: Accessor | null): this {\n\t\treturn this.setRefMap('attributes', semantic, accessor, { usage: BufferViewUsage.ARRAY_BUFFER });\n\t}\n\n\t/**\n\t * Lists all vertex attribute {@link Accessor}s associated with the primitive, excluding any\n\t * attributes used for morph targets. For example, `[positionAccessor, normalAccessor,\n\t * uvAccessor]`. Order will be consistent with the order returned by {@link .listSemantics}().\n\t */\n\tpublic listAttributes(): Accessor[] {\n\t\treturn this.listRefMapValues('attributes');\n\t}\n\n\t/**\n\t * Lists all vertex attribute semantics associated with the primitive, excluding any semantics\n\t * used for morph targets. For example, `['POSITION', 'NORMAL', 'TEXCOORD_0']`. Order will be\n\t * consistent with the order returned by {@link .listAttributes}().\n\t */\n\tpublic listSemantics(): string[] {\n\t\treturn this.listRefMapKeys('attributes');\n\t}\n\n\t/** Returns the material used to render the primitive. */\n\tpublic getMaterial(): Material | null {\n\t\treturn this.getRef('material');\n\t}\n\n\t/** Sets the material used to render the primitive. */\n\tpublic setMaterial(material: Material | null): this {\n\t\treturn this.setRef('material', material);\n\t}\n\n\t/**********************************************************************************************\n\t * Mode.\n\t */\n\n\t/**\n\t * Returns the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n\t *\n\t * Reference:\n\t * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#primitivemode)\n\t */\n\tpublic getMode(): GLTF.MeshPrimitiveMode {\n\t\treturn this.get('mode');\n\t}\n\n\t/**\n\t * Sets the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n\t *\n\t * Reference:\n\t * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#primitivemode)\n\t */\n\tpublic setMode(mode: GLTF.MeshPrimitiveMode): this {\n\t\treturn this.set('mode', mode);\n\t}\n\n\t/**********************************************************************************************\n\t * Morph targets.\n\t */\n\n\t/** Lists all morph targets associated with the primitive. */\n\tpublic listTargets(): PrimitiveTarget[] {\n\t\treturn this.listRefs('targets');\n\t}\n\n\t/**\n\t * Adds a morph target to the primitive. All primitives in the same mesh must have the same\n\t * number of targets.\n\t */\n\tpublic addTarget(target: PrimitiveTarget): this {\n\t\treturn this.addRef('targets', target);\n\t}\n\n\t/**\n\t * Removes a morph target from the primitive. All primitives in the same mesh must have the same\n\t * number of targets.\n\t */\n\tpublic removeTarget(target: PrimitiveTarget): this {\n\t\treturn this.removeRef('targets', target);\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants';\nimport { Accessor } from './accessor';\nimport { IExtensibleProperty } from './extensible-property';\nimport { Property } from './property';\n\ninterface IPrimitiveTarget extends IExtensibleProperty {\n\tattributes: { [key: string]: Accessor };\n}\n\n/**\n * # PrimitiveTarget\n *\n * *Morph target or shape key used to deform one {@link Primitive} in a {@link Mesh}.*\n *\n * A PrimitiveTarget contains a `POSITION` attribute (and optionally `NORMAL` and `TANGENT`) that\n * can additively deform the base attributes on a {@link Mesh} {@link Primitive}. Vertex values\n * of `0, 0, 0` in the target will have no effect, whereas a value of `0, 1, 0` would offset that\n * vertex in the base geometry by y+=1. Morph targets can be fully or partially applied: their\n * default state is controlled by {@link Mesh.getWeights}, which can also be overridden for a\n * particular instantiation of a {@link Mesh}, using {@link Node.getWeights}.\n *\n * Reference:\n * - [glTF → Morph Targets](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets)\n */\nexport class PrimitiveTarget extends Property<IPrimitiveTarget> {\n\tpublic declare propertyType: PropertyType.PRIMITIVE_TARGET;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.PRIMITIVE_TARGET;\n\t}\n\n\tprotected getDefaults(): Nullable<IPrimitiveTarget> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { attributes: {} });\n\t}\n\n\t/** Returns a morph target vertex attribute as an {@link Accessor}. */\n\tpublic getAttribute(semantic: string): Accessor | null {\n\t\treturn this.getRefMap('attributes', semantic);\n\t}\n\n\t/**\n\t * Sets a morph target vertex attribute to an {@link Accessor}.\n\t */\n\tpublic setAttribute(semantic: string, accessor: Accessor | null): this {\n\t\treturn this.setRefMap('attributes', semantic, accessor, { usage: BufferViewUsage.ARRAY_BUFFER });\n\t}\n\n\t/**\n\t * Lists all morph target vertex attribute {@link Accessor}s associated. Order will be\n\t * consistent with the order returned by {@link .listSemantics}().\n\t */\n\tpublic listAttributes(): Accessor[] {\n\t\treturn this.listRefMapValues('attributes');\n\t}\n\n\t/**\n\t * Lists all morph target vertex attribute semantics associated. Order will be\n\t * consistent with the order returned by {@link .listAttributes}().\n\t */\n\tpublic listSemantics(): string[] {\n\t\treturn this.listRefMapKeys('attributes');\n\t}\n}\n","import { Nullable, PropertyType } from '../constants';\nimport { $attributes } from 'property-graph';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Node } from './node';\nimport { COPY_IDENTITY } from './property';\n\ninterface IScene extends IExtensibleProperty {\n\tchildren: Node[];\n}\n\n/**\n * # Scene\n *\n * *Scenes represent a set of visual objects to render.*\n *\n * Typically a glTF file contains only a single scene, although more are allowed and useful in some\n * cases. No particular meaning is associated with additional scenes, except as defined by the\n * application. Scenes reference {@link Node}s, and a single node cannot be a member of more than\n * one scene.\n *\n * References:\n * - [glTF → Scenes](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#scenes)\n * - [glTF → Coordinate System and Units](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#coordinate-system-and-units)\n *\n * @category Properties\n */\nexport class Scene extends ExtensibleProperty<IScene> {\n\tpublic declare propertyType: PropertyType.SCENE;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.SCENE;\n\t}\n\n\tprotected getDefaults(): Nullable<IScene> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { children: [] });\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Scene cannot be copied, only cloned. Copying is shallow, but nodes cannot have more than\n\t\t// one parent. Rather than leaving one of the two scenes without children, throw an error here.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Scene cannot be copied.');\n\t\treturn super.copy(other, resolve);\n\t}\n\n\t/** Adds a {@link Node} to the scene. */\n\tpublic addChild(node: Node): this {\n\t\t// Remove existing parent.\n\t\tif (node._parent) node._parent.removeChild(node);\n\n\t\t// Edge in graph.\n\t\tthis.addRef('children', node);\n\n\t\t// Set new parent.\n\t\t// TODO(cleanup): Avoid using $attributes here?\n\t\tnode._parent = this;\n\t\tconst childrenRefs = this[$attributes]['children'];\n\t\tconst ref = childrenRefs[childrenRefs.length - 1];\n\t\tref.addEventListener('dispose', () => (node._parent = null));\n\t\treturn this;\n\t}\n\n\t/** Removes a {@link Node} from the scene. */\n\tpublic removeChild(node: Node): this {\n\t\treturn this.removeRef('children', node);\n\t}\n\n\t/** Lists all root {@link Node}s in the scene. */\n\tpublic listChildren(): Node[] {\n\t\treturn this.listRefs('children');\n\t}\n\n\t/** Visits each {@link Node} in the scene, including descendants, top-down. */\n\tpublic traverse(fn: (node: Node) => void): this {\n\t\tfor (const node of this.listChildren()) node.traverse(fn);\n\t\treturn this;\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants';\nimport { Accessor } from './accessor';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { Node } from './node';\n\ninterface ISkin extends IExtensibleProperty {\n\tskeleton: Node;\n\tinverseBindMatrices: Accessor;\n\tjoints: Node[];\n}\n\n/**\n * # Skin\n *\n * *Collection of {@link Node} joints and inverse bind matrices used with skinned {@link Mesh}\n * instances.*\n *\n * Reference\n * - [glTF → Skins](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#skins)\n *\n * @category Properties\n */\nexport class Skin extends ExtensibleProperty<ISkin> {\n\tpublic declare propertyType: PropertyType.SKIN;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.SKIN;\n\t}\n\n\tprotected getDefaults(): Nullable<ISkin> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tskeleton: null,\n\t\t\tinverseBindMatrices: null,\n\t\t\tjoints: [],\n\t\t});\n\t}\n\n\t/**\n\t * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n\t * hierarchy or a direct or indirect parent node of the closest common root.\n\t */\n\tpublic getSkeleton(): Node | null {\n\t\treturn this.getRef('skeleton');\n\t}\n\n\t/**\n\t * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n\t * hierarchy or a direct or indirect parent node of the closest common root.\n\t */\n\tpublic setSkeleton(skeleton: Node | null): this {\n\t\treturn this.setRef('skeleton', skeleton);\n\t}\n\n\t/**\n\t * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n\t * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n\t * pre-applied.\n\t */\n\tpublic getInverseBindMatrices(): Accessor | null {\n\t\treturn this.getRef('inverseBindMatrices');\n\t}\n\n\t/**\n\t * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n\t * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n\t * pre-applied.\n\t */\n\tpublic setInverseBindMatrices(inverseBindMatrices: Accessor | null): this {\n\t\treturn this.setRef('inverseBindMatrices', inverseBindMatrices, {\n\t\t\tusage: BufferViewUsage.INVERSE_BIND_MATRICES,\n\t\t});\n\t}\n\n\t/** Adds a joint {@link Node} to this {@link Skin}. */\n\tpublic addJoint(joint: Node): this {\n\t\treturn this.addRef('joints', joint);\n\t}\n\n\t/** Removes a joint {@link Node} from this {@link Skin}. */\n\tpublic removeJoint(joint: Node): this {\n\t\treturn this.removeRef('joints', joint);\n\t}\n\n\t/** Lists joints ({@link Node}s used as joints or bones) in this {@link Skin}. */\n\tpublic listJoints(): Node[] {\n\t\treturn this.listRefs('joints');\n\t}\n}\n","import { Nullable, PropertyType, vec2 } from '../constants';\nimport { BufferUtils, FileUtils, ImageUtils } from '../utils';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\n\ninterface ITexture extends IExtensibleProperty {\n\timage: Uint8Array | null;\n\tmimeType: string;\n\turi: string;\n}\n\n/**\n * # Texture\n *\n * *Texture, or images, referenced by {@link Material} properties.*\n *\n * Textures in glTF-Transform are a combination of glTF's `texture` and `image` properties, and\n * should be unique within a document, such that no other texture contains the same\n * {@link getImage}() data. Where duplicates may already exist, the `dedup({textures: true})`\n * transform can remove them. A {@link Document} with N texture properties will be exported to a\n * glTF file with N `image` properties, and the minimum number of `texture` properties necessary\n * for the materials that use it.\n *\n * For properties associated with a particular _use_ of a texture, see {@link TextureInfo}.\n *\n * Reference:\n * - [glTF → Textures](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#textures)\n * - [glTF → Images](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#images)\n *\n * @category Properties\n */\nexport class Texture extends ExtensibleProperty<ITexture> {\n\tpublic declare propertyType: PropertyType.TEXTURE;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.TEXTURE;\n\t}\n\n\tprotected getDefaults(): Nullable<ITexture> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { image: null, mimeType: '', uri: '' });\n\t}\n\n\t/**********************************************************************************************\n\t * MIME type / format.\n\t */\n\n\t/** Returns the MIME type for this texture ('image/jpeg' or 'image/png'). */\n\tpublic getMimeType(): string {\n\t\treturn this.get('mimeType') || ImageUtils.extensionToMimeType(FileUtils.extension(this.get('uri')));\n\t}\n\n\t/**\n\t * Sets the MIME type for this texture ('image/jpeg' or 'image/png'). If the texture does not\n\t * have a URI, a MIME type is required for correct export.\n\t */\n\tpublic setMimeType(mimeType: string): this {\n\t\treturn this.set('mimeType', mimeType);\n\t}\n\n\t/**********************************************************************************************\n\t * URI / filename.\n\t */\n\n\t/** Returns the URI (e.g. 'path/to/file.png') for this texture. */\n\tpublic getURI(): string {\n\t\treturn this.get('uri');\n\t}\n\n\t/**\n\t * Sets the URI (e.g. 'path/to/file.png') for this texture. If the texture does not have a MIME\n\t * type, a URI is required for correct export.\n\t */\n\tpublic setURI(uri: string): this {\n\t\tthis.set('uri', uri);\n\t\tthis.set('mimeType', ImageUtils.extensionToMimeType(FileUtils.extension(uri)));\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Image data.\n\t */\n\n\t/** Returns the raw image data for this texture. */\n\tpublic getImage(): Uint8Array | null {\n\t\treturn this.get('image');\n\t}\n\n\t/** Sets the raw image data for this texture. */\n\tpublic setImage(image: Uint8Array): this {\n\t\treturn this.set('image', BufferUtils.assertView(image));\n\t}\n\n\t/** Returns the size, in pixels, of this texture. */\n\tpublic getSize(): vec2 | null {\n\t\tconst image = this.get('image');\n\t\tif (!image) return null;\n\t\treturn ImageUtils.getSize(image, this.getMimeType());\n\t}\n}\n","import { Nullable, PropertyType, VERSION } from '../constants';\nimport { Extension } from '../extension';\nimport { Graph } from 'property-graph';\nimport { Accessor } from './accessor';\nimport { Animation } from './animation';\nimport { Buffer } from './buffer';\nimport { Camera } from './camera';\nimport { Material } from './material';\nimport { Mesh } from './mesh';\nimport { Node } from './node';\nimport { COPY_IDENTITY, Property } from './property';\nimport { Scene } from './scene';\nimport { Skin } from './skin';\nimport { Texture } from './texture';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property';\nimport { ExtensionProperty } from './extension-property';\n\ninterface IAsset {\n\tversion: string;\n\tminVersion?: string;\n\tgenerator?: string;\n\tcopyright?: string;\n\t[key: string]: unknown;\n}\n\ninterface IRoot extends IExtensibleProperty {\n\tasset: IAsset;\n\tdefaultScene: Scene;\n\n\taccessors: Accessor[];\n\tanimations: Animation[];\n\tbuffers: Buffer[];\n\tcameras: Camera[];\n\tmaterials: Material[];\n\tmeshes: Mesh[];\n\tnodes: Node[];\n\tscenes: Scene[];\n\tskins: Skin[];\n\ttextures: Texture[];\n}\n\n/**\n * # Root\n *\n * *Root property of a glTF asset.*\n *\n * Any properties to be exported with a particular asset must be referenced (directly or\n * indirectly) by the root. Metadata about the asset's license, generator, and glTF specification\n * version are stored in the asset, accessible with {@link .getAsset}().\n *\n * Properties are added to the root with factory methods on its {@link Document}, and removed by\n * calling {@link Property.dispose}() on the resource. Any properties that have been created but\n * not disposed will be included when calling the various `root.list*()` methods.\n *\n * A document's root cannot be removed, and no other root may be created. Unlike other\n * {@link Property} types, the `.dispose()`, `.detach()` methods have no useful function on a\n * Root property.\n *\n * Usage:\n *\n * ```ts\n * const root = document.getRoot();\n * const scene = document.createScene('myScene');\n * const node = document.createNode('myNode');\n * scene.addChild(node);\n *\n * console.log(root.listScenes()); // → [scene x 1]\n * ```\n *\n * Reference: [glTF → Concepts](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nexport class Root extends ExtensibleProperty<IRoot> {\n\tpublic declare propertyType: PropertyType.ROOT;\n\n\tprivate readonly _extensions: Set<Extension> = new Set();\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ROOT;\n\t}\n\n\tprotected getDefaults(): Nullable<IRoot> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tasset: {\n\t\t\t\tgenerator: `glTF-Transform ${VERSION}`,\n\t\t\t\tversion: '2.0',\n\t\t\t},\n\t\t\tdefaultScene: null,\n\t\t\taccessors: [],\n\t\t\tanimations: [],\n\t\t\tbuffers: [],\n\t\t\tcameras: [],\n\t\t\tmaterials: [],\n\t\t\tmeshes: [],\n\t\t\tnodes: [],\n\t\t\tscenes: [],\n\t\t\tskins: [],\n\t\t\ttextures: [],\n\t\t});\n\t}\n\n\t/** @internal */\n\tconstructor(graph: Graph<Property>) {\n\t\tsuper(graph);\n\t\tgraph.addEventListener('node:create', (event) => {\n\t\t\tthis._addChildOfRoot(event.target as Property);\n\t\t});\n\t}\n\n\tpublic clone(): this {\n\t\tthrow new Error('Root cannot be cloned.');\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Root cannot be cloned in isolation: only with its Document. Extensions are managed by\n\t\t// the Document during cloning. The Root, and only the Root, should keep existing\n\t\t// references while copying to avoid overwriting during a merge.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Root cannot be copied.');\n\n\t\t// IMPORTANT: Root cannot call super.copy(), which removes existing references.\n\n\t\tthis.set('asset', { ...other.get('asset') });\n\t\tthis.setName(other.getName());\n\t\tthis.setExtras({ ...other.getExtras() });\n\t\tthis.setDefaultScene(other.getDefaultScene() ? resolve(other.getDefaultScene()!) : null);\n\n\t\tfor (const extensionName of other.listRefMapKeys('extensions')) {\n\t\t\tconst otherExtension = other.getExtension(extensionName) as ExtensionProperty;\n\t\t\tthis.setExtension(extensionName, resolve(otherExtension));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprivate _addChildOfRoot(child: Property): this {\n\t\tif (child instanceof Scene) {\n\t\t\tthis.addRef('scenes', child);\n\t\t} else if (child instanceof Node) {\n\t\t\tthis.addRef('nodes', child);\n\t\t} else if (child instanceof Camera) {\n\t\t\tthis.addRef('cameras', child);\n\t\t} else if (child instanceof Skin) {\n\t\t\tthis.addRef('skins', child);\n\t\t} else if (child instanceof Mesh) {\n\t\t\tthis.addRef('meshes', child);\n\t\t} else if (child instanceof Material) {\n\t\t\tthis.addRef('materials', child);\n\t\t} else if (child instanceof Texture) {\n\t\t\tthis.addRef('textures', child);\n\t\t} else if (child instanceof Animation) {\n\t\t\tthis.addRef('animations', child);\n\t\t} else if (child instanceof Accessor) {\n\t\t\tthis.addRef('accessors', child);\n\t\t} else if (child instanceof Buffer) {\n\t\t\tthis.addRef('buffers', child);\n\t\t}\n\t\t// No error for untracked property types.\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the `asset` object, which specifies the target glTF version of the asset. Additional\n\t * metadata can be stored in optional properties such as `generator` or `copyright`.\n\t *\n\t * Reference: [glTF → Asset](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#asset)\n\t */\n\tpublic getAsset(): IAsset {\n\t\treturn this.get('asset');\n\t}\n\n\t/**********************************************************************************************\n\t * Extensions.\n\t */\n\n\t/** Lists all {@link Extension} properties enabled for this root. */\n\tpublic listExtensionsUsed(): Extension[] {\n\t\treturn Array.from(this._extensions);\n\t}\n\n\t/** Lists all {@link Extension} properties enabled and required for this root. */\n\tpublic listExtensionsRequired(): Extension[] {\n\t\treturn this.listExtensionsUsed().filter((extension) => extension.isRequired());\n\t}\n\n\t/** @internal */\n\tpublic _enableExtension(extension: Extension): this {\n\t\tthis._extensions.add(extension);\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tpublic _disableExtension(extension: Extension): this {\n\t\tthis._extensions.delete(extension);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Properties.\n\t */\n\n\t/** Lists all {@link Scene} properties associated with this root. */\n\tpublic listScenes(): Scene[] {\n\t\treturn this.listRefs('scenes');\n\t}\n\n\t/** Default {@link Scene} associated with this root. */\n\tpublic setDefaultScene(defaultScene: Scene | null): this {\n\t\treturn this.setRef('defaultScene', defaultScene);\n\t}\n\n\t/** Default {@link Scene} associated with this root. */\n\tpublic getDefaultScene(): Scene | null {\n\t\treturn this.getRef('defaultScene');\n\t}\n\n\t/** Lists all {@link Node} properties associated with this root. */\n\tpublic listNodes(): Node[] {\n\t\treturn this.listRefs('nodes');\n\t}\n\n\t/** Lists all {@link Camera} properties associated with this root. */\n\tpublic listCameras(): Camera[] {\n\t\treturn this.listRefs('cameras');\n\t}\n\n\t/** Lists all {@link Skin} properties associated with this root. */\n\tpublic listSkins(): Skin[] {\n\t\treturn this.listRefs('skins');\n\t}\n\n\t/** Lists all {@link Mesh} properties associated with this root. */\n\tpublic listMeshes(): Mesh[] {\n\t\treturn this.listRefs('meshes');\n\t}\n\n\t/** Lists all {@link Material} properties associated with this root. */\n\tpublic listMaterials(): Material[] {\n\t\treturn this.listRefs('materials');\n\t}\n\n\t/** Lists all {@link Texture} properties associated with this root. */\n\tpublic listTextures(): Texture[] {\n\t\treturn this.listRefs('textures');\n\t}\n\n\t/** Lists all {@link Animation} properties associated with this root. */\n\tpublic listAnimations(): Animation[] {\n\t\treturn this.listRefs('animations');\n\t}\n\n\t/** Lists all {@link Accessor} properties associated with this root. */\n\tpublic listAccessors(): Accessor[] {\n\t\treturn this.listRefs('accessors');\n\t}\n\n\t/** Lists all {@link Buffer} properties associated with this root. */\n\tpublic listBuffers(): Buffer[] {\n\t\treturn this.listRefs('buffers');\n\t}\n}\n","import { PropertyType } from './constants';\nimport { Extension } from './extension';\nimport { Graph } from 'property-graph';\nimport {\n\tAccessor,\n\tAnimation,\n\tAnimationChannel,\n\tAnimationSampler,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tPrimitive,\n\tPrimitiveTarget,\n\tProperty,\n\tRoot,\n\tScene,\n\tSkin,\n\tTexture,\n} from './properties';\nimport { Logger } from './utils';\n\nexport interface TransformContext {\n\tstack: string[];\n}\n\nexport type Transform = (doc: Document, context?: TransformContext) => void;\n\n/**\n * # Document\n *\n * *Wraps a glTF asset and its resources for easier modification.*\n *\n * Documents manage glTF assets and the relationships among dependencies. The document wrapper\n * allow tools to read and write changes without dealing with array indices or byte offsets, which\n * would otherwise require careful management over the course of a file modification. An internal\n * graph structure allows any property in the glTF file to maintain references to its dependencies,\n * and makes it easy to determine where a particular property dependency is being used. For\n * example, finding a list of materials that use a particular texture is as simple as calling\n * {@link Texture.listParents}().\n *\n * A new resource {@link Property} (e.g. a {@link Mesh} or {@link Material}) is created by calling\n * 'create' methods on the document. Resources are destroyed by calling {@link Property.dispose}().\n *\n * ```ts\n * import fs from 'fs/promises';\n * import { Document } from '@gltf-transform/core';\n * import { dedup } from '@gltf-transform/functions';\n *\n * const doc = new Document();\n *\n * const texture1 = doc.createTexture('myTexture')\n * \t.setImage(await fs.readFile('path/to/image.png'))\n * \t.setMimeType('image/png');\n * const texture2 = doc.createTexture('myTexture2')\n * \t.setImage(await fs.readFile('path/to/image2.png'))\n * \t.setMimeType('image/png');\n *\n * // Document containing duplicate copies of the same texture.\n * doc.getRoot().listTextures(); // → [texture x 2]\n *\n * await doc.transform(\n * \tdedup({textures: true}),\n * \t// ...\n * );\n *\n * // Document with duplicate textures removed.\n * doc.getRoot().listTextures(); // → [texture x 1]\n * ```\n *\n * Reference:\n * - [glTF → Basics](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#gltf-basics)\n * - [glTF → Concepts](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#concepts)\n *\n * @category Documents\n */\nexport class Document {\n\tprivate _graph: Graph<Property> = new Graph<Property>();\n\tprivate _root: Root = new Root(this._graph);\n\tprivate _logger = Logger.DEFAULT_INSTANCE;\n\n\t/** Returns the glTF {@link Root} property. */\n\tpublic getRoot(): Root {\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Returns the {@link Graph} representing connectivity of resources within this document.\n\t *\n\t * @hidden\n\t */\n\tpublic getGraph(): Graph<Property> {\n\t\treturn this._graph;\n\t}\n\n\t/** Returns the {@link Logger} instance used for any operations performed on this document. */\n\tpublic getLogger(): Logger {\n\t\treturn this._logger;\n\t}\n\n\t/**\n\t * Overrides the {@link Logger} instance used for any operations performed on this document.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * doc\n\t * \t.setLogger(new Logger(Logger.Verbosity.SILENT))\n\t * \t.transform(dedup(), weld());\n\t * ```\n\t */\n\tpublic setLogger(logger: Logger): Document {\n\t\tthis._logger = logger;\n\t\treturn this;\n\t}\n\n\t/** Clones this Document, copying all resources within it. */\n\tpublic clone(): Document {\n\t\treturn new Document().setLogger(this._logger).merge(this);\n\t}\n\n\t/** Merges the content of another Document into this one, without affecting the original. */\n\tpublic merge(other: Document): this {\n\t\t// 1. Attach extensions.\n\t\tconst thisExtensions: { [key: string]: Extension } = {};\n\t\tfor (const otherExtension of other.getRoot().listExtensionsUsed()) {\n\t\t\tconst thisExtension = this.createExtension(otherExtension.constructor as new (doc: Document) => Extension);\n\t\t\tif (otherExtension.isRequired()) thisExtension.setRequired(true);\n\t\t\tthisExtensions[thisExtension.extensionName] = thisExtension;\n\t\t}\n\n\t\t// 2. Preconfigure the Root and merge history.\n\t\tconst visited = new Set<Property>();\n\t\tconst propertyMap = new Map<Property, Property>();\n\t\tvisited.add(other._root);\n\t\tpropertyMap.set(other._root, this._root);\n\n\t\t// 3. Create stub classes for every Property in other Document.\n\t\tfor (const edge of other._graph.listEdges()) {\n\t\t\tfor (const thisProp of [edge.getParent() as Property, edge.getChild() as Property]) {\n\t\t\t\tif (visited.has(thisProp)) continue;\n\n\t\t\t\tlet otherProp: Property;\n\t\t\t\tif (thisProp.propertyType === PropertyType.TEXTURE_INFO) {\n\t\t\t\t\t// TextureInfo lifecycle is bound to a Material or ExtensionProperty.\n\t\t\t\t\totherProp = thisProp as Property;\n\t\t\t\t} else {\n\t\t\t\t\t// For other property types, create stub classes.\n\t\t\t\t\tconst PropertyClass = thisProp.constructor as new (g: Graph<Property>) => Property;\n\t\t\t\t\totherProp = new PropertyClass(this._graph);\n\t\t\t\t}\n\n\t\t\t\tpropertyMap.set(thisProp as Property, otherProp);\n\t\t\t\tvisited.add(thisProp);\n\t\t\t}\n\t\t}\n\n\t\t// 4. Assemble the edges between Properties.\n\t\tconst resolve = (p: Property): Property => {\n\t\t\tconst resolved = propertyMap.get(p);\n\t\t\tif (!resolved) throw new Error('Could resolve property.');\n\t\t\treturn resolved;\n\t\t};\n\t\tfor (const otherProp of visited) {\n\t\t\tconst thisProp = propertyMap.get(otherProp);\n\t\t\tif (!thisProp) throw new Error('Could resolve property.');\n\t\t\tthisProp.copy(otherProp, resolve);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a series of modifications to this document. Each transformation is asynchronous,\n\t * takes the {@link Document} as input, and returns nothing. Transforms are applied in the\n\t * order given, which may affect the final result.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * await doc.transform(\n\t * \tdedup(),\n\t * \tprune()\n\t * );\n\t * ```\n\t *\n\t * @param transforms List of synchronous transformation functions to apply.\n\t */\n\tpublic async transform(...transforms: Transform[]): Promise<this> {\n\t\tconst stack = transforms.map((fn) => fn.name);\n\t\tfor (const transform of transforms) {\n\t\t\tawait transform(this, { stack });\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Extension factory method.\n\t */\n\n\t/**\n\t * Creates a new {@link Extension}, for the extension type of the given constructor. If the\n\t * extension is already enabled for this Document, the previous Extension reference is reused.\n\t */\n\tcreateExtension<T extends Extension>(ctor: new (doc: Document) => T): T {\n\t\tconst extensionName = (ctor as unknown as { EXTENSION_NAME: 'string' }).EXTENSION_NAME;\n\t\tconst prevExtension = this.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.find((ext) => ext.extensionName === extensionName);\n\t\treturn (prevExtension || new ctor(this)) as T;\n\t}\n\n\t/**********************************************************************************************\n\t * Property factory methods.\n\t */\n\n\t/** Creates a new {@link Scene} attached to this document's {@link Root}. */\n\tcreateScene(name = ''): Scene {\n\t\treturn new Scene(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Node} attached to this document's {@link Root}. */\n\tcreateNode(name = ''): Node {\n\t\treturn new Node(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Camera} attached to this document's {@link Root}. */\n\tcreateCamera(name = ''): Camera {\n\t\treturn new Camera(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Skin} attached to this document's {@link Root}. */\n\tcreateSkin(name = ''): Skin {\n\t\treturn new Skin(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Mesh} attached to this document's {@link Root}. */\n\tcreateMesh(name = ''): Mesh {\n\t\treturn new Mesh(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link Primitive}. Primitives must be attached to a {@link Mesh}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreatePrimitive(): Primitive {\n\t\treturn new Primitive(this._graph);\n\t}\n\n\t/**\n\t * Creates a new {@link PrimitiveTarget}, or morph target. Targets must be attached to a\n\t * {@link Primitive} for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreatePrimitiveTarget(name = ''): PrimitiveTarget {\n\t\treturn new PrimitiveTarget(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Material} attached to this document's {@link Root}. */\n\tcreateMaterial(name = ''): Material {\n\t\treturn new Material(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Texture} attached to this document's {@link Root}. */\n\tcreateTexture(name = ''): Texture {\n\t\treturn new Texture(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Animation} attached to this document's {@link Root}. */\n\tcreateAnimation(name = ''): Animation {\n\t\treturn new Animation(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link AnimationChannel}. Channels must be attached to an {@link Animation}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreateAnimationChannel(name = ''): AnimationChannel {\n\t\treturn new AnimationChannel(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link AnimationSampler}. Samplers must be attached to an {@link Animation}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreateAnimationSampler(name = ''): AnimationSampler {\n\t\treturn new AnimationSampler(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Accessor} attached to this document's {@link Root}. */\n\tcreateAccessor(name = '', buffer: Buffer | null = null): Accessor {\n\t\tif (!buffer) {\n\t\t\tbuffer = this.getRoot().listBuffers()[0];\n\t\t}\n\t\treturn new Accessor(this._graph, name).setBuffer(buffer);\n\t}\n\n\t/** Creates a new {@link Buffer} attached to this document's {@link Root}. */\n\tcreateBuffer(name = ''): Buffer {\n\t\treturn new Buffer(this._graph, name);\n\t}\n}\n","import { GraphEdgeEvent, GraphEvent, GraphNodeEvent } from 'property-graph';\nimport { PropertyType } from './constants';\nimport { Document } from './document';\nimport { ReaderContext, WriterContext } from './io';\nimport { ExtensionProperty } from './properties';\n\n/**\n * # Extension\n *\n * *Base class for all Extensions.*\n *\n * Extensions enhance a glTF {@link Document} with additional features and schema, beyond the core\n * glTF specification. Common extensions may be imported from the `@gltf-transform/extensions`\n * package, or custom extensions may be created by extending this base class.\n *\n * An extension is added to a Document by calling {@link Document.createExtension} with the\n * extension constructor. The extension object may then be used to construct\n * {@link ExtensionProperty} instances, which are attached to properties throughout the Document\n * as prescribed by the extension itself.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#specifying-extensions)\n * - [glTF Extension Registry](https://github.com/KhronosGroup/glTF/blob/master/extensions)\n *\n * @category Extensions\n */\nexport abstract class Extension {\n\t/** Official name of the extension. */\n\tpublic static EXTENSION_NAME: string;\n\t/** Official name of the extension. */\n\tpublic readonly extensionName: string = '';\n\t/**\n\t * Before reading, extension should be called for these {@link Property} types. *Most\n\t * extensions don't need to implement this.*\n\t * @hidden\n\t */\n\tpublic readonly prereadTypes: PropertyType[] = [];\n\t/**\n\t * Before writing, extension should be called for these {@link Property} types. *Most\n\t * extensions don't need to implement this.*\n\t * @hidden\n\t */\n\tpublic readonly prewriteTypes: PropertyType[] = [];\n\n\t/** @hidden Dependency IDs needed to read this extension, to be installed before I/O. */\n\tpublic readonly readDependencies: string[] = [];\n\t/** @hidden Dependency IDs needed to write this extension, to be installed before I/O. */\n\tpublic readonly writeDependencies: string[] = [];\n\n\t/** @hidden */\n\tprotected readonly document: Document;\n\n\t/** @hidden */\n\tprotected required = false;\n\n\t/** @hidden */\n\tprotected properties: Set<ExtensionProperty> = new Set();\n\n\t/** @hidden */\n\tprivate _listener: (event: unknown) => void;\n\n\t/** @hidden */\n\tconstructor(document: Document) {\n\t\tthis.document = document;\n\n\t\tdocument.getRoot()._enableExtension(this);\n\n\t\tthis._listener = (_event: unknown): void => {\n\t\t\tconst event = _event as GraphNodeEvent | GraphEdgeEvent | GraphEvent;\n\t\t\tconst target = event.target as ExtensionProperty | unknown;\n\t\t\tif (target instanceof ExtensionProperty && target.extensionName === this.extensionName) {\n\t\t\t\tif (event.type === 'node:create') this._addExtensionProperty(target);\n\t\t\t\tif (event.type === 'node:dispose') this._removeExtensionProperty(target);\n\t\t\t}\n\t\t};\n\n\t\tconst graph = document.getGraph();\n\t\tgraph.addEventListener('node:create', this._listener);\n\t\tgraph.addEventListener('node:dispose', this._listener);\n\t}\n\n\t/** Disables and removes the extension from the Document. */\n\tpublic dispose(): void {\n\t\tthis.document.getRoot()._disableExtension(this);\n\t\tconst graph = this.document.getGraph();\n\t\tgraph.removeEventListener('node:create', this._listener);\n\t\tgraph.removeEventListener('node:dispose', this._listener);\n\t\tfor (const property of this.properties) {\n\t\t\tproperty.dispose();\n\t\t}\n\t}\n\n\t/** @hidden Performs first-time setup for the extension. Must be idempotent. */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tpublic static register(): void {}\n\n\t/**\n\t * Indicates to the client whether it is OK to load the asset when this extension is not\n\t * recognized. Optional extensions are generally preferred, if there is not a good reason\n\t * to require a client to completely fail when an extension isn't known.\n\t */\n\tpublic isRequired(): boolean {\n\t\treturn this.required;\n\t}\n\n\t/**\n\t * Indicates to the client whether it is OK to load the asset when this extension is not\n\t * recognized. Optional extensions are generally preferred, if there is not a good reason\n\t * to require a client to completely fail when an extension isn't known.\n\t */\n\tpublic setRequired(required: boolean): this {\n\t\tthis.required = required;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * ExtensionProperty management.\n\t */\n\n\t/** @internal */\n\tprivate _addExtensionProperty(property: ExtensionProperty): this {\n\t\tthis.properties.add(property);\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tprivate _removeExtensionProperty(property: ExtensionProperty): this {\n\t\tthis.properties.delete(property);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * I/O implementation.\n\t */\n\n\t/** @hidden Installs dependencies required by the extension. */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic install(key: string, dependency: unknown): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method may\n\t * optionally be implemented by an extension, and should then support any property type\n\t * declared by the Extension's {@link Extension.prereadTypes} list. The Extension will\n\t * be given a ReaderContext instance, and is expected to update either the context or its\n\t * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n\t * implement this.*\n\t * @hidden\n\t */\n\tpublic preread(_readerContext: ReaderContext, _propertyType: PropertyType): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method may\n\t * optionally be implemented by an extension, and should then support any property type\n\t * declared by the Extension's {@link Extension.prewriteTypes} list. The Extension will\n\t * be given a WriterContext instance, and is expected to update either the context or its\n\t * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n\t * implement this.*\n\t * @hidden\n\t */\n\tpublic prewrite(_writerContext: WriterContext, _propertyType: PropertyType): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method must be\n\t * implemented by each extension in order to support reading files. The extension will be\n\t * given a ReaderContext instance, and should update the current {@link Document} accordingly.\n\t * @hidden\n\t */\n\tpublic abstract read(readerContext: ReaderContext): this;\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method must be\n\t * implemented by each extension in order to support writing files. The extension will be\n\t * given a WriterContext instance, and should modify the {@link JSONDocument} output\n\t * accordingly. Adding the extension name to the `extensionsUsed` and `extensionsRequired` list\n\t * is done automatically, and should not be included here.\n\t * @hidden\n\t */\n\tpublic abstract write(writerContext: WriterContext): this;\n}\n","import { JSONDocument } from '../json-document';\nimport {\n\tAccessor,\n\tAnimation,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tScene,\n\tSkin,\n\tTexture,\n\tTextureInfo,\n} from '../properties';\nimport { GLTF } from '../types/gltf';\n\n/**\n * Model class providing glTF-Transform objects representing each definition in the glTF file, used\n * by a {@link Writer} and its {@link Extension} implementations. Indices of all properties will be\n * consistent with the glTF file.\n *\n * @hidden\n */\nexport class ReaderContext {\n\tpublic buffers: Buffer[] = [];\n\tpublic bufferViews: Uint8Array[] = [];\n\tpublic bufferViewBuffers: Buffer[] = [];\n\tpublic accessors: Accessor[] = [];\n\tpublic textures: Texture[] = [];\n\tpublic textureInfos: Map<TextureInfo, GLTF.ITextureInfo> = new Map();\n\tpublic materials: Material[] = [];\n\tpublic meshes: Mesh[] = [];\n\tpublic cameras: Camera[] = [];\n\tpublic nodes: Node[] = [];\n\tpublic skins: Skin[] = [];\n\tpublic animations: Animation[] = [];\n\tpublic scenes: Scene[] = [];\n\n\tconstructor(public readonly jsonDoc: JSONDocument) {}\n\n\tpublic setTextureInfo(textureInfo: TextureInfo, textureInfoDef: GLTF.ITextureInfo): void {\n\t\tthis.textureInfos.set(textureInfo, textureInfoDef);\n\n\t\tif (textureInfoDef.texCoord !== undefined) {\n\t\t\ttextureInfo.setTexCoord(textureInfoDef.texCoord);\n\t\t}\n\n\t\tconst textureDef = this.jsonDoc.json.textures![textureInfoDef.index];\n\n\t\tif (textureDef.sampler === undefined) return;\n\n\t\tconst samplerDef = this.jsonDoc.json.samplers![textureDef.sampler];\n\n\t\tif (samplerDef.magFilter !== undefined) {\n\t\t\ttextureInfo.setMagFilter(samplerDef.magFilter);\n\t\t}\n\t\tif (samplerDef.minFilter !== undefined) {\n\t\t\ttextureInfo.setMinFilter(samplerDef.minFilter);\n\t\t}\n\t\tif (samplerDef.wrapS !== undefined) {\n\t\t\ttextureInfo.setWrapS(samplerDef.wrapS);\n\t\t}\n\t\tif (samplerDef.wrapT !== undefined) {\n\t\t\ttextureInfo.setWrapT(samplerDef.wrapT);\n\t\t}\n\t}\n}\n","import { GLB_BUFFER, PropertyType, TypedArray, mat4, vec3, vec4 } from '../constants';\nimport { Document } from '../document';\nimport { Extension } from '../extension';\nimport { JSONDocument } from '../json-document';\nimport { Accessor, AnimationSampler, Camera } from '../properties';\nimport { GLTF } from '../types/gltf';\nimport { BufferUtils, FileUtils, ImageUtils, Logger, MathUtils } from '../utils';\nimport { ReaderContext } from './reader-context';\n\nconst ComponentTypeToTypedArray = {\n\t'5120': Int8Array,\n\t'5121': Uint8Array,\n\t'5122': Int16Array,\n\t'5123': Uint16Array,\n\t'5125': Uint32Array,\n\t'5126': Float32Array,\n};\n\nexport interface ReaderOptions {\n\tlogger?: Logger;\n\textensions: typeof Extension[];\n\tdependencies: { [key: string]: unknown };\n}\n\nconst DEFAULT_OPTIONS: ReaderOptions = {\n\tlogger: Logger.DEFAULT_INSTANCE,\n\textensions: [],\n\tdependencies: {},\n};\n\n/** @internal */\nexport class GLTFReader {\n\tpublic static read(jsonDoc: JSONDocument, _options: ReaderOptions = DEFAULT_OPTIONS): Document {\n\t\tconst options = { ...DEFAULT_OPTIONS, ..._options } as Required<ReaderOptions>;\n\t\tconst { json } = jsonDoc;\n\t\tconst doc = new Document();\n\n\t\tthis.validate(jsonDoc, options);\n\n\t\t/* Reader context. */\n\n\t\tconst context = new ReaderContext(jsonDoc);\n\n\t\t/** Asset. */\n\n\t\tconst assetDef = json.asset;\n\t\tconst asset = doc.getRoot().getAsset();\n\n\t\tif (assetDef.copyright) asset.copyright = assetDef.copyright;\n\t\tif (assetDef.extras) asset.extras = assetDef.extras;\n\n\t\tif (json.extras !== undefined) {\n\t\t\tdoc.getRoot().setExtras({ ...json.extras });\n\t\t}\n\n\t\t/** Extensions (1/2). */\n\n\t\tconst extensionsUsed = json.extensionsUsed || [];\n\t\tconst extensionsRequired = json.extensionsRequired || [];\n\t\tfor (const Extension of options.extensions) {\n\t\t\tif (extensionsUsed.includes(Extension.EXTENSION_NAME)) {\n\t\t\t\tconst extension = doc\n\t\t\t\t\t.createExtension(Extension as unknown as new (doc: Document) => Extension)\n\t\t\t\t\t.setRequired(extensionsRequired.includes(Extension.EXTENSION_NAME));\n\n\t\t\t\tfor (const key of extension.readDependencies) {\n\t\t\t\t\textension.install(key, options.dependencies[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** Buffers. */\n\n\t\tconst bufferDefs = json.buffers || [];\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.BUFFER))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.BUFFER));\n\t\tcontext.buffers = bufferDefs.map((bufferDef) => {\n\t\t\tconst buffer = doc.createBuffer(bufferDef.name);\n\n\t\t\tif (bufferDef.extras) buffer.setExtras(bufferDef.extras);\n\n\t\t\tif (bufferDef.uri && bufferDef.uri.indexOf('__') !== 0) {\n\t\t\t\tbuffer.setURI(bufferDef.uri);\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t});\n\n\t\t/** Buffer views. */\n\n\t\tconst bufferViewDefs = json.bufferViews || [];\n\t\tcontext.bufferViewBuffers = bufferViewDefs.map((bufferViewDef, index) => {\n\t\t\tif (!context.bufferViews[index]) {\n\t\t\t\tconst bufferDef = jsonDoc.json.buffers![bufferViewDef.buffer];\n\t\t\t\tconst resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\tcontext.bufferViews[index] = BufferUtils.toView(resource, byteOffset, bufferViewDef.byteLength);\n\t\t\t}\n\n\t\t\treturn context.buffers[bufferViewDef.buffer];\n\t\t});\n\n\t\t/** Accessors. */\n\n\t\t// Accessor .count and .componentType properties are inferred dynamically.\n\t\tconst accessorDefs = json.accessors || [];\n\t\tcontext.accessors = accessorDefs.map((accessorDef) => {\n\t\t\tconst buffer = context.bufferViewBuffers[accessorDef.bufferView!];\n\t\t\tconst accessor = doc.createAccessor(accessorDef.name, buffer).setType(accessorDef.type);\n\n\t\t\tif (accessorDef.extras) accessor.setExtras(accessorDef.extras);\n\n\t\t\tif (accessorDef.normalized !== undefined) {\n\t\t\t\taccessor.setNormalized(accessorDef.normalized);\n\t\t\t}\n\n\t\t\t// KHR_draco_mesh_compression and EXT_meshopt_compression.\n\t\t\tif (accessorDef.bufferView === undefined && !accessorDef.sparse) return accessor;\n\n\t\t\tlet array: TypedArray;\n\n\t\t\tif (accessorDef.sparse !== undefined) {\n\t\t\t\tarray = getSparseArray(accessorDef, context);\n\t\t\t} else {\n\t\t\t\tarray = getAccessorArray(accessorDef, context);\n\t\t\t}\n\n\t\t\taccessor.setArray(array);\n\t\t\treturn accessor;\n\t\t});\n\n\t\t/** Textures. */\n\n\t\t// glTF-Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n\t\t// with image files. The glTF file may contain more one texture per image, where images\n\t\t// are reused with different sampler properties.\n\t\tconst imageDefs = json.images || [];\n\t\tconst textureDefs = json.textures || [];\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.TEXTURE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.TEXTURE));\n\t\tcontext.textures = imageDefs.map((imageDef) => {\n\t\t\tconst texture = doc.createTexture(imageDef.name);\n\n\t\t\t// glTF Image corresponds 1:1 with glTF-Transform Texture. See `writer.ts`.\n\t\t\tif (imageDef.extras) texture.setExtras(imageDef.extras);\n\n\t\t\tif (imageDef.bufferView !== undefined) {\n\t\t\t\tconst bufferViewDef = json.bufferViews![imageDef.bufferView];\n\t\t\t\tconst bufferDef = jsonDoc.json.buffers![bufferViewDef.buffer];\n\t\t\t\tconst bufferData = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\tconst byteLength = bufferViewDef.byteLength;\n\t\t\t\tconst imageData = bufferData.slice(byteOffset, byteOffset + byteLength);\n\t\t\t\ttexture.setImage(imageData);\n\t\t\t} else if (imageDef.uri !== undefined) {\n\t\t\t\ttexture.setImage(jsonDoc.resources[imageDef.uri]);\n\t\t\t\tif (imageDef.uri.indexOf('__') !== 0) {\n\t\t\t\t\ttexture.setURI(imageDef.uri);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (imageDef.mimeType !== undefined) {\n\t\t\t\ttexture.setMimeType(imageDef.mimeType);\n\t\t\t} else if (imageDef.uri) {\n\t\t\t\tconst extension = FileUtils.extension(imageDef.uri);\n\t\t\t\ttexture.setMimeType(ImageUtils.extensionToMimeType(extension));\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t});\n\n\t\t/** Materials. */\n\n\t\tconst materialDefs = json.materials || [];\n\t\tcontext.materials = materialDefs.map((materialDef) => {\n\t\t\tconst material = doc.createMaterial(materialDef.name);\n\n\t\t\tif (materialDef.extras) material.setExtras(materialDef.extras);\n\n\t\t\t// Program state & blending.\n\n\t\t\tif (materialDef.alphaMode !== undefined) {\n\t\t\t\tmaterial.setAlphaMode(materialDef.alphaMode);\n\t\t\t}\n\n\t\t\tif (materialDef.alphaCutoff !== undefined) {\n\t\t\t\tmaterial.setAlphaCutoff(materialDef.alphaCutoff);\n\t\t\t}\n\n\t\t\tif (materialDef.doubleSided !== undefined) {\n\t\t\t\tmaterial.setDoubleSided(materialDef.doubleSided);\n\t\t\t}\n\n\t\t\t// Factors.\n\n\t\t\tconst pbrDef = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tif (pbrDef.baseColorFactor !== undefined) {\n\t\t\t\tmaterial.setBaseColorFactor(pbrDef.baseColorFactor as vec4);\n\t\t\t}\n\n\t\t\tif (materialDef.emissiveFactor !== undefined) {\n\t\t\t\tmaterial.setEmissiveFactor(materialDef.emissiveFactor as vec3);\n\t\t\t}\n\n\t\t\tif (pbrDef.metallicFactor !== undefined) {\n\t\t\t\tmaterial.setMetallicFactor(pbrDef.metallicFactor);\n\t\t\t}\n\n\t\t\tif (pbrDef.roughnessFactor !== undefined) {\n\t\t\t\tmaterial.setRoughnessFactor(pbrDef.roughnessFactor);\n\t\t\t}\n\n\t\t\t// Textures.\n\n\t\t\tif (pbrDef.baseColorTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = pbrDef.baseColorTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setBaseColorTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getBaseColorTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\tif (materialDef.emissiveTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.emissiveTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setEmissiveTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getEmissiveTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\tif (materialDef.normalTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.normalTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setNormalTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getNormalTextureInfo()!, textureInfoDef);\n\t\t\t\tif (materialDef.normalTexture.scale !== undefined) {\n\t\t\t\t\tmaterial.setNormalScale(materialDef.normalTexture.scale);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (materialDef.occlusionTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.occlusionTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setOcclusionTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getOcclusionTextureInfo()!, textureInfoDef);\n\t\t\t\tif (materialDef.occlusionTexture.strength !== undefined) {\n\t\t\t\t\tmaterial.setOcclusionStrength(materialDef.occlusionTexture.strength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pbrDef.metallicRoughnessTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = pbrDef.metallicRoughnessTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setMetallicRoughnessTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getMetallicRoughnessTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\treturn material;\n\t\t});\n\n\t\t/** Meshes. */\n\n\t\tconst meshDefs = json.meshes || [];\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.PRIMITIVE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.PRIMITIVE));\n\t\tcontext.meshes = meshDefs.map((meshDef) => {\n\t\t\tconst mesh = doc.createMesh(meshDef.name);\n\n\t\t\tif (meshDef.extras) mesh.setExtras(meshDef.extras);\n\n\t\t\tif (meshDef.weights !== undefined) {\n\t\t\t\tmesh.setWeights(meshDef.weights);\n\t\t\t}\n\n\t\t\tconst primitiveDefs = meshDef.primitives || [];\n\t\t\tprimitiveDefs.forEach((primitiveDef) => {\n\t\t\t\tconst primitive = doc.createPrimitive();\n\n\t\t\t\tif (primitiveDef.extras) primitive.setExtras(primitiveDef.extras);\n\n\t\t\t\tif (primitiveDef.material !== undefined) {\n\t\t\t\t\tprimitive.setMaterial(context.materials[primitiveDef.material]);\n\t\t\t\t}\n\n\t\t\t\tif (primitiveDef.mode !== undefined) {\n\t\t\t\t\tprimitive.setMode(primitiveDef.mode);\n\t\t\t\t}\n\n\t\t\t\tfor (const [semantic, index] of Object.entries(primitiveDef.attributes || {})) {\n\t\t\t\t\tprimitive.setAttribute(semantic, context.accessors[index]);\n\t\t\t\t}\n\n\t\t\t\tif (primitiveDef.indices !== undefined) {\n\t\t\t\t\tprimitive.setIndices(context.accessors[primitiveDef.indices]);\n\t\t\t\t}\n\n\t\t\t\tconst targetNames: string[] = (meshDef.extras && (meshDef.extras.targetNames as string[])) || [];\n\t\t\t\tconst targetDefs = primitiveDef.targets || [];\n\t\t\t\ttargetDefs.forEach((targetDef, targetIndex) => {\n\t\t\t\t\tconst targetName = targetNames[targetIndex] || targetIndex.toString();\n\t\t\t\t\tconst target = doc.createPrimitiveTarget(targetName);\n\n\t\t\t\t\tfor (const [semantic, accessorIndex] of Object.entries(targetDef)) {\n\t\t\t\t\t\ttarget.setAttribute(semantic, context.accessors[accessorIndex]);\n\t\t\t\t\t}\n\n\t\t\t\t\tprimitive.addTarget(target);\n\t\t\t\t});\n\n\t\t\t\tmesh.addPrimitive(primitive);\n\t\t\t});\n\n\t\t\treturn mesh;\n\t\t});\n\n\t\t/** Cameras. */\n\n\t\tconst cameraDefs = json.cameras || [];\n\t\tcontext.cameras = cameraDefs.map((cameraDef) => {\n\t\t\tconst camera = doc.createCamera(cameraDef.name).setType(cameraDef.type);\n\n\t\t\tif (cameraDef.extras) camera.setExtras(cameraDef.extras);\n\n\t\t\tif (cameraDef.type === Camera.Type.PERSPECTIVE) {\n\t\t\t\tconst perspectiveDef = cameraDef.perspective!;\n\t\t\t\tcamera.setYFov(perspectiveDef.yfov);\n\t\t\t\tcamera.setZNear(perspectiveDef.znear);\n\t\t\t\tif (perspectiveDef.zfar !== undefined) {\n\t\t\t\t\tcamera.setZFar(perspectiveDef.zfar);\n\t\t\t\t}\n\t\t\t\tif (perspectiveDef.aspectRatio !== undefined) {\n\t\t\t\t\tcamera.setAspectRatio(perspectiveDef.aspectRatio);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst orthoDef = cameraDef.orthographic!;\n\t\t\t\tcamera.setZNear(orthoDef.znear).setZFar(orthoDef.zfar).setXMag(orthoDef.xmag).setYMag(orthoDef.ymag);\n\t\t\t}\n\t\t\treturn camera;\n\t\t});\n\n\t\t/** Nodes. */\n\n\t\tconst nodeDefs = json.nodes || [];\n\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.NODE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.NODE));\n\n\t\tcontext.nodes = nodeDefs.map((nodeDef) => {\n\t\t\tconst node = doc.createNode(nodeDef.name);\n\n\t\t\tif (nodeDef.extras) node.setExtras(nodeDef.extras);\n\n\t\t\tif (nodeDef.translation !== undefined) {\n\t\t\t\tnode.setTranslation(nodeDef.translation as vec3);\n\t\t\t}\n\n\t\t\tif (nodeDef.rotation !== undefined) {\n\t\t\t\tnode.setRotation(nodeDef.rotation as vec4);\n\t\t\t}\n\n\t\t\tif (nodeDef.scale !== undefined) {\n\t\t\t\tnode.setScale(nodeDef.scale as vec3);\n\t\t\t}\n\n\t\t\tif (nodeDef.matrix !== undefined) {\n\t\t\t\tconst translation = [0, 0, 0] as vec3;\n\t\t\t\tconst rotation = [0, 0, 0, 1] as vec4;\n\t\t\t\tconst scale = [1, 1, 1] as vec3;\n\n\t\t\t\tMathUtils.decompose(nodeDef.matrix as mat4, translation, rotation, scale);\n\n\t\t\t\tnode.setTranslation(translation);\n\t\t\t\tnode.setRotation(rotation);\n\t\t\t\tnode.setScale(scale);\n\t\t\t}\n\n\t\t\tif (nodeDef.weights !== undefined) {\n\t\t\t\tnode.setWeights(nodeDef.weights);\n\t\t\t}\n\n\t\t\t// Attachments (mesh, camera, skin) defined later in reading process.\n\n\t\t\treturn node;\n\t\t});\n\n\t\t/** Skins. */\n\n\t\tconst skinDefs = json.skins || [];\n\t\tcontext.skins = skinDefs.map((skinDef) => {\n\t\t\tconst skin = doc.createSkin(skinDef.name);\n\n\t\t\tif (skinDef.extras) skin.setExtras(skinDef.extras);\n\n\t\t\tif (skinDef.inverseBindMatrices !== undefined) {\n\t\t\t\tskin.setInverseBindMatrices(context.accessors[skinDef.inverseBindMatrices]);\n\t\t\t}\n\n\t\t\tif (skinDef.skeleton !== undefined) {\n\t\t\t\tskin.setSkeleton(context.nodes[skinDef.skeleton]);\n\t\t\t}\n\n\t\t\tfor (const nodeIndex of skinDef.joints) {\n\t\t\t\tskin.addJoint(context.nodes[nodeIndex]);\n\t\t\t}\n\n\t\t\treturn skin;\n\t\t});\n\n\t\t/** Node attachments. */\n\n\t\tnodeDefs.map((nodeDef, nodeIndex) => {\n\t\t\tconst node = context.nodes[nodeIndex];\n\n\t\t\tconst children = nodeDef.children || [];\n\t\t\tchildren.forEach((childIndex) => node.addChild(context.nodes[childIndex]));\n\n\t\t\tif (nodeDef.mesh !== undefined) node.setMesh(context.meshes[nodeDef.mesh]);\n\n\t\t\tif (nodeDef.camera !== undefined) node.setCamera(context.cameras[nodeDef.camera]);\n\n\t\t\tif (nodeDef.skin !== undefined) node.setSkin(context.skins[nodeDef.skin]);\n\t\t});\n\n\t\t/** Animations. */\n\n\t\tconst animationDefs = json.animations || [];\n\t\tcontext.animations = animationDefs.map((animationDef) => {\n\t\t\tconst animation = doc.createAnimation(animationDef.name);\n\n\t\t\tif (animationDef.extras) animation.setExtras(animationDef.extras);\n\n\t\t\tconst samplerDefs = animationDef.samplers || [];\n\t\t\tconst samplers = samplerDefs.map((samplerDef) => {\n\t\t\t\tconst sampler = doc\n\t\t\t\t\t.createAnimationSampler()\n\t\t\t\t\t.setInput(context.accessors[samplerDef.input])\n\t\t\t\t\t.setOutput(context.accessors[samplerDef.output])\n\t\t\t\t\t.setInterpolation(samplerDef.interpolation || AnimationSampler.Interpolation.LINEAR);\n\n\t\t\t\tif (samplerDef.extras) sampler.setExtras(samplerDef.extras);\n\n\t\t\t\tanimation.addSampler(sampler);\n\t\t\t\treturn sampler;\n\t\t\t});\n\n\t\t\tconst channels = animationDef.channels || [];\n\t\t\tchannels.forEach((channelDef) => {\n\t\t\t\tconst channel = doc\n\t\t\t\t\t.createAnimationChannel()\n\t\t\t\t\t.setSampler(samplers[channelDef.sampler])\n\t\t\t\t\t.setTargetNode(context.nodes[channelDef.target.node])\n\t\t\t\t\t.setTargetPath(channelDef.target.path);\n\n\t\t\t\tif (channelDef.extras) channel.setExtras(channelDef.extras);\n\n\t\t\t\tanimation.addChannel(channel);\n\t\t\t});\n\n\t\t\treturn animation;\n\t\t});\n\n\t\t/** Scenes. */\n\n\t\tconst sceneDefs = json.scenes || [];\n\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.SCENE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.SCENE));\n\n\t\tcontext.scenes = sceneDefs.map((sceneDef) => {\n\t\t\tconst scene = doc.createScene(sceneDef.name);\n\n\t\t\tif (sceneDef.extras) scene.setExtras(sceneDef.extras);\n\n\t\t\tconst children = sceneDef.nodes || [];\n\n\t\t\tchildren.map((nodeIndex) => context.nodes[nodeIndex]).forEach((node) => scene.addChild(node));\n\n\t\t\treturn scene;\n\t\t});\n\n\t\tif (json.scene !== undefined) {\n\t\t\tdoc.getRoot().setDefaultScene(context.scenes[json.scene]);\n\t\t}\n\n\t\t/** Extensions (2/2). */\n\n\t\tdoc.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.forEach((extension) => extension.read(context));\n\n\t\treturn doc;\n\t}\n\n\tprivate static validate(jsonDoc: JSONDocument, options: Required<ReaderOptions>): void {\n\t\tconst json = jsonDoc.json;\n\n\t\tif (json.asset.version !== '2.0') {\n\t\t\tthrow new Error(`Unsupported glTF version, \"${json.asset.version}\".`);\n\t\t}\n\n\t\tif (json.extensionsRequired) {\n\t\t\tfor (const extensionName of json.extensionsRequired) {\n\t\t\t\tif (!options.extensions.find((extension) => extension.EXTENSION_NAME === extensionName)) {\n\t\t\t\t\tthrow new Error(`Missing required extension, \"${extensionName}\".`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (json.extensionsUsed) {\n\t\t\tfor (const extensionName of json.extensionsUsed) {\n\t\t\t\tif (!options.extensions.find((extension) => extension.EXTENSION_NAME === extensionName)) {\n\t\t\t\t\toptions.logger.warn(`Missing optional extension, \"${extensionName}\".`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns the contents of an interleaved accessor, as a typed array.\n * @internal\n */\nfunction getInterleavedArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst jsonDoc = context.jsonDoc;\n\tconst bufferView = context.bufferViews[accessorDef.bufferView!];\n\tconst bufferViewDef = jsonDoc.json.bufferViews![accessorDef.bufferView!];\n\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\tconst componentSize = TypedArray.BYTES_PER_ELEMENT;\n\tconst accessorByteOffset = accessorDef.byteOffset || 0;\n\n\tconst array = new TypedArray(accessorDef.count * elementSize);\n\tconst view = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n\tconst byteStride = bufferViewDef.byteStride!;\n\n\tfor (let i = 0; i < accessorDef.count; i++) {\n\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\tconst byteOffset = accessorByteOffset + i * byteStride + j * componentSize;\n\t\t\tlet value: number;\n\t\t\tswitch (accessorDef.componentType) {\n\t\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\t\tvalue = view.getFloat32(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\t\tvalue = view.getUint32(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\t\tvalue = view.getUint16(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\t\tvalue = view.getUint8(byteOffset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\t\tvalue = view.getInt16(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\t\tvalue = view.getInt8(byteOffset);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected componentType \"${accessorDef.componentType}\".`);\n\t\t\t}\n\t\t\tarray[i * elementSize + j] = value;\n\t\t}\n\t}\n\n\treturn array;\n}\n\n/**\n * Returns the contents of an accessor, as a typed array.\n * @internal\n */\nfunction getAccessorArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst jsonDoc = context.jsonDoc;\n\tconst bufferView = context.bufferViews[accessorDef.bufferView!];\n\tconst bufferViewDef = jsonDoc.json.bufferViews![accessorDef.bufferView!];\n\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\tconst componentSize = TypedArray.BYTES_PER_ELEMENT;\n\tconst elementStride = elementSize * componentSize;\n\n\t// Interleaved buffer view.\n\tif (bufferViewDef.byteStride !== undefined && bufferViewDef.byteStride !== elementStride) {\n\t\treturn getInterleavedArray(accessorDef, context);\n\t}\n\n\tconst byteOffset = bufferView.byteOffset + (accessorDef.byteOffset || 0);\n\tconst byteLength = accessorDef.count * elementSize * componentSize;\n\n\t// Might optimize this to avoid deep copy later, but it's useful for now and not a known\n\t// bottleneck. See https://github.com/donmccurdy/glTF-Transform/issues/256.\n\treturn new TypedArray(bufferView.buffer.slice(byteOffset, byteOffset + byteLength));\n}\n\n/**\n * Returns the contents of a sparse accessor, as a typed array.\n * @internal\n */\nfunction getSparseArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\n\tlet array: TypedArray;\n\tif (accessorDef.bufferView !== undefined) {\n\t\tarray = getAccessorArray(accessorDef, context);\n\t} else {\n\t\tarray = new TypedArray(accessorDef.count * elementSize);\n\t}\n\n\tconst sparseDef = accessorDef.sparse!;\n\tconst count = sparseDef.count;\n\tconst indicesDef = { ...accessorDef, ...sparseDef.indices, count, type: 'SCALAR' };\n\tconst valuesDef = { ...accessorDef, ...sparseDef.values, count };\n\tconst indices = getAccessorArray(indicesDef as GLTF.IAccessor, context);\n\tconst values = getAccessorArray(valuesDef, context);\n\n\t// Override indices given in the sparse data.\n\tfor (let i = 0; i < indicesDef.count; i++) {\n\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\tarray[indices[i] * elementSize + j] = values[i * elementSize + j];\n\t\t}\n\t}\n\n\treturn array;\n}\n","import { BufferViewUsage, Format, PropertyType } from '../constants';\nimport { Document } from '../document';\nimport { JSONDocument } from '../json-document';\nimport {\n\tAccessor,\n\tAnimation,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tProperty,\n\tScene,\n\tSkin,\n\tTexture,\n\tTextureInfo,\n} from '../properties';\nimport { GLTF } from '../types/gltf';\nimport { ImageUtils, Logger } from '../utils';\nimport { WriterOptions } from './writer';\n\ntype PropertyDef = GLTF.IScene | GLTF.INode | GLTF.IMaterial | GLTF.ISkin | GLTF.ITexture;\n\nenum BufferViewTarget {\n\tARRAY_BUFFER = 34962,\n\tELEMENT_ARRAY_BUFFER = 34963,\n}\n\n/**\n * Model class providing writing state to a {@link Writer} and its {@link Extension}\n * implementations.\n *\n * @hidden\n */\nexport class WriterContext {\n\t/** Explicit buffer view targets defined by glTF specification. */\n\tpublic static readonly BufferViewTarget = BufferViewTarget;\n\t/**\n\t * Implicit buffer view usage, not required by glTF specification, but nonetheless useful for\n\t * proper grouping of accessors into buffer views. Additional usages are defined by extensions,\n\t * like `EXT_mesh_gpu_instancing`.\n\t */\n\tpublic static readonly BufferViewUsage = BufferViewUsage;\n\t/** Maps usage type to buffer view target. Usages not mapped have undefined targets. */\n\tpublic static readonly USAGE_TO_TARGET: { [key: string]: BufferViewTarget | undefined } = {\n\t\t[BufferViewUsage.ARRAY_BUFFER]: BufferViewTarget.ARRAY_BUFFER,\n\t\t[BufferViewUsage.ELEMENT_ARRAY_BUFFER]: BufferViewTarget.ELEMENT_ARRAY_BUFFER,\n\t};\n\n\tpublic readonly accessorIndexMap = new Map<Accessor, number>();\n\tpublic readonly animationIndexMap = new Map<Animation, number>();\n\tpublic readonly bufferIndexMap = new Map<Buffer, number>();\n\tpublic readonly cameraIndexMap = new Map<Camera, number>();\n\tpublic readonly skinIndexMap = new Map<Skin, number>();\n\tpublic readonly materialIndexMap = new Map<Material, number>();\n\tpublic readonly meshIndexMap = new Map<Mesh, number>();\n\tpublic readonly nodeIndexMap = new Map<Node, number>();\n\tpublic readonly imageIndexMap = new Map<Texture, number>();\n\tpublic readonly textureDefIndexMap = new Map<string, number>(); // textureDef JSON -> index\n\tpublic readonly textureInfoDefMap = new Map<TextureInfo, GLTF.ITextureInfo>();\n\tpublic readonly samplerDefIndexMap = new Map<string, number>(); // samplerDef JSON -> index\n\tpublic readonly sceneIndexMap = new Map<Scene, number>();\n\n\tpublic readonly imageBufferViews: Uint8Array[] = [];\n\tpublic readonly otherBufferViews = new Map<Buffer, Uint8Array[]>();\n\tpublic readonly otherBufferViewsIndexMap = new Map<Uint8Array, number>();\n\tpublic readonly extensionData: { [key: string]: unknown } = {};\n\n\tpublic bufferURIGenerator: UniqueURIGenerator;\n\tpublic imageURIGenerator: UniqueURIGenerator;\n\tpublic logger: Logger;\n\n\tprivate readonly _accessorUsageMap = new Map<Accessor, BufferViewUsage | string>();\n\tpublic readonly accessorUsageGroupedByParent = new Set<string>(['ARRAY_BUFFER']);\n\tpublic readonly accessorParents = new Map<Property, Set<Accessor>>();\n\n\tconstructor(\n\t\tprivate readonly _doc: Document,\n\t\tpublic readonly jsonDoc: JSONDocument,\n\t\tpublic readonly options: Required<WriterOptions>\n\t) {\n\t\tconst root = _doc.getRoot();\n\t\tconst numBuffers = root.listBuffers().length;\n\t\tconst numImages = root.listTextures().length;\n\t\tthis.bufferURIGenerator = new UniqueURIGenerator(numBuffers > 1, options.basename);\n\t\tthis.imageURIGenerator = new UniqueURIGenerator(numImages > 1, options.basename);\n\t\tthis.logger = _doc.getLogger();\n\t}\n\n\t/**\n\t * Creates a TextureInfo definition, and any Texture or Sampler definitions it requires. If\n\t * possible, Texture and Sampler definitions are shared.\n\t */\n\tpublic createTextureInfoDef(texture: Texture, textureInfo: TextureInfo): GLTF.ITextureInfo {\n\t\tconst samplerDef = {\n\t\t\tmagFilter: textureInfo.getMagFilter() || undefined,\n\t\t\tminFilter: textureInfo.getMinFilter() || undefined,\n\t\t\twrapS: textureInfo.getWrapS(),\n\t\t\twrapT: textureInfo.getWrapT(),\n\t\t} as GLTF.ISampler;\n\n\t\tconst samplerKey = JSON.stringify(samplerDef);\n\t\tif (!this.samplerDefIndexMap.has(samplerKey)) {\n\t\t\tthis.samplerDefIndexMap.set(samplerKey, this.jsonDoc.json.samplers!.length);\n\t\t\tthis.jsonDoc.json.samplers!.push(samplerDef);\n\t\t}\n\n\t\tconst textureDef = {\n\t\t\tsource: this.imageIndexMap.get(texture),\n\t\t\tsampler: this.samplerDefIndexMap.get(samplerKey),\n\t\t} as GLTF.ITexture;\n\n\t\tconst textureKey = JSON.stringify(textureDef);\n\t\tif (!this.textureDefIndexMap.has(textureKey)) {\n\t\t\tthis.textureDefIndexMap.set(textureKey, this.jsonDoc.json.textures!.length);\n\t\t\tthis.jsonDoc.json.textures!.push(textureDef);\n\t\t}\n\n\t\tconst textureInfoDef = {\n\t\t\tindex: this.textureDefIndexMap.get(textureKey),\n\t\t} as GLTF.ITextureInfo;\n\n\t\tif (textureInfo.getTexCoord() !== 0) {\n\t\t\ttextureInfoDef.texCoord = textureInfo.getTexCoord();\n\t\t}\n\n\t\tthis.textureInfoDefMap.set(textureInfo, textureInfoDef);\n\n\t\treturn textureInfoDef;\n\t}\n\n\tpublic createPropertyDef(property: Property): PropertyDef {\n\t\tconst def = {} as PropertyDef;\n\t\tif (property.getName()) {\n\t\t\tdef.name = property.getName();\n\t\t}\n\t\tif (Object.keys(property.getExtras()).length > 0) {\n\t\t\tdef.extras = property.getExtras();\n\t\t}\n\t\treturn def;\n\t}\n\n\tpublic createAccessorDef(accessor: Accessor): GLTF.IAccessor {\n\t\tconst accessorDef = this.createPropertyDef(accessor) as GLTF.IAccessor;\n\t\taccessorDef.type = accessor.getType();\n\t\taccessorDef.componentType = accessor.getComponentType();\n\t\taccessorDef.count = accessor.getCount();\n\n\t\tconst needsBounds = this._doc\n\t\t\t.getGraph()\n\t\t\t.listParentEdges(accessor)\n\t\t\t.some(\n\t\t\t\t(edge) =>\n\t\t\t\t\t(edge.getName() === 'attributes' && edge.getAttributes().key === 'POSITION') ||\n\t\t\t\t\tedge.getName() === 'input'\n\t\t\t);\n\t\tif (needsBounds) {\n\t\t\taccessorDef.max = accessor.getMax([]).map(Math.fround);\n\t\t\taccessorDef.min = accessor.getMin([]).map(Math.fround);\n\t\t}\n\n\t\tif (accessor.getNormalized()) {\n\t\t\taccessorDef.normalized = accessor.getNormalized();\n\t\t}\n\n\t\treturn accessorDef;\n\t}\n\n\tpublic createImageData(imageDef: GLTF.IImage, data: Uint8Array, texture: Texture): void {\n\t\tif (this.options.format === Format.GLB) {\n\t\t\tthis.imageBufferViews.push(data);\n\t\t\timageDef.bufferView = this.jsonDoc.json.bufferViews!.length;\n\t\t\tthis.jsonDoc.json.bufferViews!.push({\n\t\t\t\tbuffer: 0,\n\t\t\t\tbyteOffset: -1, // determined while iterating buffers, in Writer.ts.\n\t\t\t\tbyteLength: data.byteLength,\n\t\t\t});\n\t\t} else {\n\t\t\tconst extension = ImageUtils.mimeTypeToExtension(texture.getMimeType());\n\t\t\timageDef.uri = this.imageURIGenerator.createURI(texture, extension);\n\t\t\tthis.jsonDoc.resources[imageDef.uri] = data;\n\t\t}\n\t}\n\n\t/**\n\t * Returns implicit usage type of the given accessor, related to grouping accessors into\n\t * buffer views. Usage is a superset of buffer view target, including ARRAY_BUFFER and\n\t * ELEMENT_ARRAY_BUFFER, but also usages that do not match GPU buffer view targets such as\n\t * IBMs. Additional usages are defined by extensions, like `EXT_mesh_gpu_instancing`.\n\t */\n\tpublic getAccessorUsage(accessor: Accessor): BufferViewUsage | string {\n\t\tconst cachedUsage = this._accessorUsageMap.get(accessor);\n\t\tif (cachedUsage) return cachedUsage;\n\n\t\tfor (const edge of this._doc.getGraph().listParentEdges(accessor)) {\n\t\t\tconst { usage } = edge.getAttributes() as { usage: BufferViewUsage | undefined };\n\n\t\t\tif (usage) return usage;\n\n\t\t\tif (edge.getParent().propertyType !== PropertyType.ROOT) {\n\t\t\t\tthis._doc.getLogger().warn(`Missing attribute \".usage\" on edge, \"${edge.getName()}\".`);\n\t\t\t}\n\t\t}\n\n\t\t// Group accessors with no specified usage into a miscellaneous buffer view.\n\t\treturn WriterContext.BufferViewUsage.OTHER;\n\t}\n\n\t/**\n\t * Sets usage for the given accessor. Some accessor types must be grouped into\n\t * buffer views with like accessors. This includes the specified buffer view \"targets\", but\n\t * also implicit usage like IBMs or instanced mesh attributes. If unspecified, an accessor\n\t * will be grouped with other accessors of unspecified usage.\n\t */\n\tpublic addAccessorToUsageGroup(accessor: Accessor, usage: BufferViewUsage | string): this {\n\t\tconst prevUsage = this._accessorUsageMap.get(accessor);\n\t\tif (prevUsage && prevUsage !== usage) {\n\t\t\tthrow new Error(`Accessor with usage \"${prevUsage}\" cannot be reused as \"${usage}\".`);\n\t\t}\n\t\tthis._accessorUsageMap.set(accessor, usage);\n\t\treturn this;\n\t}\n\n\t/** Lists accessors grouped by usage. Accessors with unspecified usage are not included. */\n\tpublic listAccessorUsageGroups(): { [key: string]: Accessor[] } {\n\t\tconst result = {} as { [key: string]: Accessor[] };\n\t\tfor (const [accessor, usage] of Array.from(this._accessorUsageMap.entries())) {\n\t\t\tresult[usage] = result[usage] || [];\n\t\t\tresult[usage].push(accessor);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class UniqueURIGenerator {\n\tprivate counter = 1;\n\n\tconstructor(private readonly multiple: boolean, private readonly basename: string) {}\n\n\tpublic createURI(object: Texture | Buffer, extension: string): string {\n\t\tif (object.getURI()) {\n\t\t\treturn object.getURI();\n\t\t} else if (!this.multiple) {\n\t\t\treturn `${this.basename}.${extension}`;\n\t\t} else {\n\t\t\treturn `${this.basename}_${this.counter++}.${extension}`;\n\t\t}\n\t}\n}\n","import { Format, GLB_BUFFER, PropertyType, VERSION, VertexLayout } from '../constants';\nimport { Document } from '../document';\nimport { Extension } from '../extension';\nimport { GraphEdge } from 'property-graph';\nimport { JSONDocument } from '../json-document';\nimport { Accessor, AnimationSampler, Camera, Material, Property } from '../properties';\nimport { GLTF } from '../types/gltf';\nimport { BufferUtils, Logger, MathUtils } from '../utils';\nimport { WriterContext } from './writer-context';\n\nconst { BufferViewUsage } = WriterContext;\n\nexport interface WriterOptions {\n\tformat: Format;\n\tlogger?: Logger;\n\tbasename?: string;\n\tvertexLayout?: VertexLayout;\n\tdependencies?: { [key: string]: unknown };\n\textensions?: typeof Extension[];\n}\n\n/** @internal */\nexport class GLTFWriter {\n\tpublic static write(doc: Document, options: Required<WriterOptions>): JSONDocument {\n\t\tconst root = doc.getRoot();\n\t\tconst json = {\n\t\t\tasset: { generator: `glTF-Transform ${VERSION}`, ...root.getAsset() },\n\t\t\textras: { ...root.getExtras() },\n\t\t} as GLTF.IGLTF;\n\t\tconst jsonDoc = { json, resources: {} } as JSONDocument;\n\n\t\tconst context = new WriterContext(doc, jsonDoc, options);\n\t\tconst logger = options.logger || Logger.DEFAULT_INSTANCE;\n\n\t\t/* Extensions (1/2). */\n\n\t\t// Extensions present on the Document are not written unless they are also registered with\n\t\t// the I/O class. This ensures that setup in `extension.register()` is completed, and\n\t\t// allows a Document to be written with specific extensions disabled.\n\t\tconst extensionsRegistered = new Set(options.extensions.map((ext) => ext.EXTENSION_NAME));\n\t\tconst extensionsUsed = doc\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((ext) => extensionsRegistered.has(ext.extensionName));\n\t\tconst extensionsRequired = doc\n\t\t\t.getRoot()\n\t\t\t.listExtensionsRequired()\n\t\t\t.filter((ext) => extensionsRegistered.has(ext.extensionName));\n\n\t\tif (extensionsUsed.length < doc.getRoot().listExtensionsUsed().length) {\n\t\t\tlogger.debug('Some extensions were not registered for I/O, and will not be written.');\n\t\t}\n\n\t\tfor (const extension of extensionsUsed) {\n\t\t\tfor (const key of extension.writeDependencies) {\n\t\t\t\textension.install(key, options.dependencies[key]);\n\t\t\t}\n\t\t}\n\n\t\t/* Utilities. */\n\n\t\tinterface BufferViewResult {\n\t\t\tbyteLength: number;\n\t\t\tbuffers: Uint8Array[];\n\t\t}\n\n\t\t/**\n\t\t * Pack a group of accessors into a sequential buffer view. Appends accessor and buffer view\n\t\t * definitions to the root JSON lists.\n\t\t *\n\t\t * @param accessors Accessors to be included.\n\t\t * @param bufferIndex Buffer to write to.\n\t\t * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n\t\t * @param bufferViewTarget (Optional) target use of the buffer view.\n\t\t */\n\t\tfunction concatAccessors(\n\t\t\taccessors: Accessor[],\n\t\t\tbufferIndex: number,\n\t\t\tbufferByteOffset: number,\n\t\t\tbufferViewTarget?: number\n\t\t): BufferViewResult {\n\t\t\tconst buffers: Uint8Array[] = [];\n\t\t\tlet byteLength = 0;\n\n\t\t\t// Create accessor definitions, determining size of final buffer view.\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst accessorDef = context.createAccessorDef(accessor);\n\t\t\t\taccessorDef.bufferView = json.bufferViews!.length;\n\n\t\t\t\tconst accessorArray = accessor.getArray()!;\n\t\t\t\tconst data = BufferUtils.pad(BufferUtils.toView(accessorArray));\n\t\t\t\taccessorDef.byteOffset = byteLength;\n\t\t\t\tbyteLength += data.byteLength;\n\t\t\t\tbuffers.push(data);\n\n\t\t\t\tcontext.accessorIndexMap.set(accessor, json.accessors!.length);\n\t\t\t\tjson.accessors!.push(accessorDef);\n\t\t\t}\n\n\t\t\t// Create buffer view definition.\n\t\t\tconst bufferViewData = BufferUtils.concat(buffers);\n\t\t\tconst bufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset,\n\t\t\t\tbyteLength: bufferViewData.byteLength,\n\t\t\t};\n\t\t\tif (bufferViewTarget) bufferViewDef.target = bufferViewTarget;\n\t\t\tjson.bufferViews!.push(bufferViewDef);\n\n\t\t\treturn { buffers, byteLength };\n\t\t}\n\n\t\t/**\n\t\t * Pack a group of accessors into an interleaved buffer view. Appends accessor and buffer\n\t\t * view definitions to the root JSON lists. Buffer view target is implicitly attribute data.\n\t\t *\n\t\t * References:\n\t\t * - [Apple • Best Practices for Working with Vertex Data](https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html)\n\t\t * - [Khronos • Vertex Specification Best Practices](https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices)\n\t\t *\n\t\t * @param accessors Accessors to be included.\n\t\t * @param bufferIndex Buffer to write to.\n\t\t * @param bufferByteOffset Offset into the buffer, accounting for other buffer views.\n\t\t */\n\t\tfunction interleaveAccessors(\n\t\t\taccessors: Accessor[],\n\t\t\tbufferIndex: number,\n\t\t\tbufferByteOffset: number\n\t\t): BufferViewResult {\n\t\t\tconst vertexCount = accessors[0].getCount();\n\t\t\tlet byteStride = 0;\n\n\t\t\t// Create accessor definitions, determining size and stride of final buffer view.\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst accessorDef = context.createAccessorDef(accessor);\n\t\t\t\taccessorDef.bufferView = json.bufferViews!.length;\n\t\t\t\taccessorDef.byteOffset = byteStride;\n\n\t\t\t\tconst elementSize = accessor.getElementSize();\n\t\t\t\tconst componentSize = accessor.getComponentSize();\n\t\t\t\tbyteStride += BufferUtils.padNumber(elementSize * componentSize);\n\n\t\t\t\tcontext.accessorIndexMap.set(accessor, json.accessors!.length);\n\t\t\t\tjson.accessors!.push(accessorDef);\n\t\t\t}\n\n\t\t\t// Allocate interleaved buffer view.\n\t\t\tconst byteLength = vertexCount * byteStride;\n\t\t\tconst buffer = new ArrayBuffer(byteLength);\n\t\t\tconst view = new DataView(buffer);\n\n\t\t\t// Write interleaved accessor data to the buffer view.\n\t\t\tfor (let i = 0; i < vertexCount; i++) {\n\t\t\t\tlet vertexByteOffset = 0;\n\t\t\t\tfor (const accessor of accessors) {\n\t\t\t\t\tconst elementSize = accessor.getElementSize();\n\t\t\t\t\tconst componentSize = accessor.getComponentSize();\n\t\t\t\t\tconst componentType = accessor.getComponentType();\n\t\t\t\t\tconst array = accessor.getArray()!;\n\t\t\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\t\t\tconst viewByteOffset = i * byteStride + vertexByteOffset + j * componentSize;\n\t\t\t\t\t\tconst value = array[i * elementSize + j];\n\t\t\t\t\t\tswitch (componentType) {\n\t\t\t\t\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\t\t\t\t\tview.setFloat32(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\t\t\t\t\tview.setInt8(viewByteOffset, value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\t\t\t\t\tview.setInt16(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\t\t\t\t\tview.setUint8(viewByteOffset, value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\t\t\t\t\tview.setUint16(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\t\t\t\t\tview.setUint32(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error('Unexpected component type: ' + componentType);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvertexByteOffset += BufferUtils.padNumber(elementSize * componentSize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create buffer view definition.\n\t\t\tconst bufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset,\n\t\t\t\tbyteLength: byteLength,\n\t\t\t\tbyteStride: byteStride,\n\t\t\t\ttarget: WriterContext.BufferViewTarget.ARRAY_BUFFER,\n\t\t\t};\n\t\t\tjson.bufferViews!.push(bufferViewDef);\n\n\t\t\treturn { byteLength, buffers: [new Uint8Array(buffer)] };\n\t\t}\n\n\t\t/* Data use pre-processing. */\n\n\t\tconst accessorRefs = new Map<Accessor, GraphEdge<Property, Accessor>[]>();\n\n\t\t// Gather all accessors, creating a map to look up their uses.\n\t\tfor (const ref of doc.getGraph().listEdges()) {\n\t\t\tif (ref.getParent() === root) continue;\n\n\t\t\tconst child = ref.getChild();\n\n\t\t\tif (child instanceof Accessor) {\n\t\t\t\tconst uses = accessorRefs.get(child) || [];\n\t\t\t\tuses.push(ref as GraphEdge<Property, Accessor>);\n\t\t\t\taccessorRefs.set(child, uses);\n\t\t\t}\n\t\t}\n\n\t\tjson.accessors = [];\n\t\tjson.bufferViews = [];\n\n\t\t/* Textures. */\n\n\t\t// glTF-Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n\t\t// with image files. The glTF file may contain more one texture per image, where images\n\t\t// are reused with different sampler properties.\n\t\tjson.samplers = [];\n\t\tjson.textures = [];\n\t\tjson.images = root.listTextures().map((texture, textureIndex) => {\n\t\t\tconst imageDef = context.createPropertyDef(texture) as GLTF.IImage;\n\n\t\t\tif (texture.getMimeType()) {\n\t\t\t\timageDef.mimeType = texture.getMimeType();\n\t\t\t}\n\n\t\t\tconst image = texture.getImage();\n\t\t\tif (image) {\n\t\t\t\tcontext.createImageData(imageDef, image, texture);\n\t\t\t}\n\n\t\t\tcontext.imageIndexMap.set(texture, textureIndex);\n\t\t\treturn imageDef;\n\t\t});\n\n\t\t/* Accessors. */\n\n\t\textensionsUsed\n\t\t\t.filter((extension) => extension.prewriteTypes.includes(PropertyType.ACCESSOR))\n\t\t\t.forEach((extension) => extension.prewrite(context, PropertyType.ACCESSOR));\n\t\troot.listAccessors().forEach((accessor) => {\n\t\t\t// Attributes are grouped and interleaved in one buffer view per mesh primitive.\n\t\t\t// Indices for all primitives are grouped into a single buffer view. IBMs are grouped\n\t\t\t// into a single buffer view. Other usage (if specified by extensions) also goes into\n\t\t\t// a dedicated buffer view. Everything else goes into a miscellaneous buffer view.\n\n\t\t\t// Certain accessor usage should group data into buffer views by the accessor parent.\n\t\t\t// The `accessorParents` map uses the first parent of each accessor for this purpose.\n\t\t\tconst groupByParent = context.accessorUsageGroupedByParent;\n\t\t\tconst accessorParents = context.accessorParents;\n\n\t\t\t// Skip if already written by an extension.\n\t\t\tif (context.accessorIndexMap.has(accessor)) return;\n\n\t\t\t// Assign usage for core accessor usage types (explicit targets and implicit usage).\n\t\t\tconst accessorEdges = accessorRefs.get(accessor) || [];\n\t\t\tconst usage = context.getAccessorUsage(accessor);\n\t\t\tcontext.addAccessorToUsageGroup(accessor, usage);\n\n\t\t\t// For accessor usage that requires grouping by parent (vertex and instance\n\t\t\t// attributes) organize buffer views accordingly.\n\t\t\tif (groupByParent.has(usage)) {\n\t\t\t\tconst parent = accessorEdges[0].getParent();\n\t\t\t\tconst parentAccessors = accessorParents.get(parent) || new Set<Accessor>();\n\t\t\t\tparentAccessors.add(accessor);\n\t\t\t\taccessorParents.set(parent, parentAccessors);\n\t\t\t}\n\t\t});\n\n\t\t/* Buffers, buffer views. */\n\n\t\textensionsUsed\n\t\t\t.filter((extension) => extension.prewriteTypes.includes(PropertyType.BUFFER))\n\t\t\t.forEach((extension) => extension.prewrite(context, PropertyType.BUFFER));\n\n\t\tconst hasBinaryResources =\n\t\t\troot.listAccessors().length > 0 || root.listTextures().length > 0 || context.otherBufferViews.size > 0;\n\t\tif (hasBinaryResources && root.listBuffers().length === 0) {\n\t\t\tthrow new Error('Buffer required for Document resources, but none was found.');\n\t\t}\n\n\t\tjson.buffers = [];\n\t\troot.listBuffers().forEach((buffer, index) => {\n\t\t\tconst bufferDef = context.createPropertyDef(buffer) as GLTF.IBuffer;\n\t\t\tconst groupByParent = context.accessorUsageGroupedByParent;\n\t\t\tconst accessorParents = context.accessorParents;\n\n\t\t\tconst bufferAccessors = buffer\n\t\t\t\t.listParents()\n\t\t\t\t.filter((property) => property instanceof Accessor) as Accessor[];\n\t\t\tconst bufferAccessorsSet = new Set(bufferAccessors);\n\n\t\t\t// Write accessor groups to buffer views.\n\n\t\t\tconst buffers: Uint8Array[] = [];\n\t\t\tconst bufferIndex = json.buffers!.length;\n\t\t\tlet bufferByteLength = 0;\n\n\t\t\tconst usageGroups = context.listAccessorUsageGroups();\n\n\t\t\tfor (const usage in usageGroups) {\n\t\t\t\tif (groupByParent.has(usage)) {\n\t\t\t\t\t// Accessors grouped by (first) parent, including vertex and instance\n\t\t\t\t\t// attributes.\n\t\t\t\t\tfor (const parentAccessors of Array.from(accessorParents.values())) {\n\t\t\t\t\t\tconst accessors = Array.from(parentAccessors)\n\t\t\t\t\t\t\t.filter((a) => bufferAccessorsSet.has(a))\n\t\t\t\t\t\t\t.filter((a) => context.getAccessorUsage(a) === usage);\n\t\t\t\t\t\tif (!accessors.length) continue;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tusage !== BufferViewUsage.ARRAY_BUFFER ||\n\t\t\t\t\t\t\toptions.vertexLayout === VertexLayout.INTERLEAVED\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Case 1: Non-vertex data OR interleaved vertex data.\n\n\t\t\t\t\t\t\t// Instanced data is not interleaved, see:\n\t\t\t\t\t\t\t// https://github.com/KhronosGroup/glTF/pull/1888\n\t\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\t\tusage === BufferViewUsage.ARRAY_BUFFER\n\t\t\t\t\t\t\t\t\t? interleaveAccessors(accessors, bufferIndex, bufferByteLength)\n\t\t\t\t\t\t\t\t\t: concatAccessors(accessors, bufferIndex, bufferByteLength);\n\t\t\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Case 2: Non-interleaved vertex data.\n\n\t\t\t\t\t\t\tfor (const accessor of accessors) {\n\t\t\t\t\t\t\t\t// We 'interleave' a single accessor because the method pads to\n\t\t\t\t\t\t\t\t// 4-byte boundaries, which concatAccessors() does not.\n\t\t\t\t\t\t\t\tconst result = interleaveAccessors([accessor], bufferIndex, bufferByteLength);\n\t\t\t\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Accessors concatenated end-to-end, including indices, IBMs, and other data.\n\t\t\t\t\tconst accessors = usageGroups[usage].filter((a) => bufferAccessorsSet.has(a));\n\t\t\t\t\tif (!accessors.length) continue;\n\n\t\t\t\t\tconst target =\n\t\t\t\t\t\tusage === BufferViewUsage.ELEMENT_ARRAY_BUFFER\n\t\t\t\t\t\t\t? WriterContext.BufferViewTarget.ELEMENT_ARRAY_BUFFER\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst result = concatAccessors(accessors, bufferIndex, bufferByteLength, target);\n\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We only support embedded images in GLB, where the embedded buffer must be the first.\n\t\t\t// Additional buffers are currently left empty (see EXT_meshopt_compression fallback).\n\t\t\tif (context.imageBufferViews.length && index === 0) {\n\t\t\t\tfor (let i = 0; i < context.imageBufferViews.length; i++) {\n\t\t\t\t\tjson.bufferViews![json.images![i].bufferView!].byteOffset = bufferByteLength;\n\t\t\t\t\tbufferByteLength += context.imageBufferViews[i].byteLength;\n\t\t\t\t\tbuffers.push(context.imageBufferViews[i]);\n\n\t\t\t\t\tif (bufferByteLength % 8) {\n\t\t\t\t\t\t// See: https://github.com/KhronosGroup/glTF/issues/1935\n\t\t\t\t\t\tconst imagePadding = 8 - (bufferByteLength % 8);\n\t\t\t\t\t\tbufferByteLength += imagePadding;\n\t\t\t\t\t\tbuffers.push(new Uint8Array(imagePadding));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.otherBufferViews.has(buffer)) {\n\t\t\t\tfor (const data of context.otherBufferViews.get(buffer)!) {\n\t\t\t\t\tjson.bufferViews!.push({\n\t\t\t\t\t\tbuffer: bufferIndex,\n\t\t\t\t\t\tbyteOffset: bufferByteLength,\n\t\t\t\t\t\tbyteLength: data.byteLength,\n\t\t\t\t\t});\n\t\t\t\t\tcontext.otherBufferViewsIndexMap.set(data, json.bufferViews!.length - 1);\n\t\t\t\t\tbufferByteLength += data.byteLength;\n\t\t\t\t\tbuffers.push(data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bufferByteLength) {\n\t\t\t\t// Assign buffer URI.\n\t\t\t\tlet uri: string;\n\t\t\t\tif (options.format === Format.GLB) {\n\t\t\t\t\turi = GLB_BUFFER;\n\t\t\t\t} else {\n\t\t\t\t\turi = context.bufferURIGenerator.createURI(buffer, 'bin');\n\t\t\t\t\tbufferDef.uri = uri;\n\t\t\t\t}\n\n\t\t\t\t// Write buffer views to buffer.\n\t\t\t\tbufferDef.byteLength = bufferByteLength;\n\t\t\t\tjsonDoc.resources[uri] = BufferUtils.concat(buffers);\n\t\t\t}\n\n\t\t\tjson.buffers!.push(bufferDef);\n\t\t\tcontext.bufferIndexMap.set(buffer, index);\n\t\t});\n\n\t\tif (root.listAccessors().find((a) => !a.getBuffer())) {\n\t\t\tlogger.warn('Skipped writing one or more Accessors: no Buffer assigned.');\n\t\t}\n\n\t\t/* Materials. */\n\n\t\tjson.materials = root.listMaterials().map((material, index) => {\n\t\t\tconst materialDef = context.createPropertyDef(material) as GLTF.IMaterial;\n\n\t\t\t// Program state & blending.\n\n\t\t\tif (material.getAlphaMode() !== Material.AlphaMode.OPAQUE) {\n\t\t\t\tmaterialDef.alphaMode = material.getAlphaMode();\n\t\t\t}\n\t\t\tif (material.getAlphaMode() === Material.AlphaMode.MASK) {\n\t\t\t\tmaterialDef.alphaCutoff = material.getAlphaCutoff();\n\t\t\t}\n\t\t\tif (material.getDoubleSided()) materialDef.doubleSided = true;\n\n\t\t\t// Factors.\n\n\t\t\tmaterialDef.pbrMetallicRoughness = {};\n\t\t\tif (!MathUtils.eq(material.getBaseColorFactor(), [1, 1, 1, 1])) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = material.getBaseColorFactor();\n\t\t\t}\n\t\t\tif (!MathUtils.eq(material.getEmissiveFactor(), [0, 0, 0])) {\n\t\t\t\tmaterialDef.emissiveFactor = material.getEmissiveFactor();\n\t\t\t}\n\t\t\tif (material.getRoughnessFactor() !== 1) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.getRoughnessFactor();\n\t\t\t}\n\t\t\tif (material.getMetallicFactor() !== 1) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.getMetallicFactor();\n\t\t\t}\n\n\t\t\t// Textures.\n\n\t\t\tif (material.getBaseColorTexture()) {\n\t\t\t\tconst texture = material.getBaseColorTexture()!;\n\t\t\t\tconst textureInfo = material.getBaseColorTextureInfo()!;\n\t\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t}\n\n\t\t\tif (material.getEmissiveTexture()) {\n\t\t\t\tconst texture = material.getEmissiveTexture()!;\n\t\t\t\tconst textureInfo = material.getEmissiveTextureInfo()!;\n\t\t\t\tmaterialDef.emissiveTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t}\n\n\t\t\tif (material.getNormalTexture()) {\n\t\t\t\tconst texture = material.getNormalTexture()!;\n\t\t\t\tconst textureInfo = material.getNormalTextureInfo()!;\n\t\t\t\tconst textureInfoDef = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t) as GLTF.IMaterialNormalTextureInfo;\n\t\t\t\tif (material.getNormalScale() !== 1) {\n\t\t\t\t\ttextureInfoDef.scale = material.getNormalScale();\n\t\t\t\t}\n\t\t\t\tmaterialDef.normalTexture = textureInfoDef;\n\t\t\t}\n\n\t\t\tif (material.getOcclusionTexture()) {\n\t\t\t\tconst texture = material.getOcclusionTexture()!;\n\t\t\t\tconst textureInfo = material.getOcclusionTextureInfo()!;\n\t\t\t\tconst textureInfoDef = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t) as GLTF.IMaterialOcclusionTextureInfo;\n\t\t\t\tif (material.getOcclusionStrength() !== 1) {\n\t\t\t\t\ttextureInfoDef.strength = material.getOcclusionStrength();\n\t\t\t\t}\n\t\t\t\tmaterialDef.occlusionTexture = textureInfoDef;\n\t\t\t}\n\n\t\t\tif (material.getMetallicRoughnessTexture()) {\n\t\t\t\tconst texture = material.getMetallicRoughnessTexture()!;\n\t\t\t\tconst textureInfo = material.getMetallicRoughnessTextureInfo()!;\n\t\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcontext.materialIndexMap.set(material, index);\n\t\t\treturn materialDef;\n\t\t});\n\n\t\t/* Meshes. */\n\n\t\tjson.meshes = root.listMeshes().map((mesh, index) => {\n\t\t\tconst meshDef = context.createPropertyDef(mesh) as GLTF.IMesh;\n\n\t\t\tlet targetNames: string[] | null = null;\n\n\t\t\tmeshDef.primitives = mesh.listPrimitives().map((primitive) => {\n\t\t\t\tconst primitiveDef: GLTF.IMeshPrimitive = { attributes: {} };\n\n\t\t\t\tprimitiveDef.mode = primitive.getMode();\n\n\t\t\t\tconst material = primitive.getMaterial();\n\t\t\t\tif (material) {\n\t\t\t\t\tprimitiveDef.material = context.materialIndexMap.get(material);\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(primitive.getExtras()).length) {\n\t\t\t\t\tprimitiveDef.extras = primitive.getExtras();\n\t\t\t\t}\n\n\t\t\t\tconst indices = primitive.getIndices();\n\t\t\t\tif (indices) {\n\t\t\t\t\tprimitiveDef.indices = context.accessorIndexMap.get(indices);\n\t\t\t\t}\n\n\t\t\t\tfor (const semantic of primitive.listSemantics()) {\n\t\t\t\t\tprimitiveDef.attributes[semantic] = context.accessorIndexMap.get(\n\t\t\t\t\t\tprimitive.getAttribute(semantic)!\n\t\t\t\t\t)!;\n\t\t\t\t}\n\n\t\t\t\tfor (const target of primitive.listTargets()) {\n\t\t\t\t\tconst targetDef = {} as { [name: string]: number };\n\n\t\t\t\t\tfor (const semantic of target.listSemantics()) {\n\t\t\t\t\t\ttargetDef[semantic] = context.accessorIndexMap.get(target.getAttribute(semantic)!)!;\n\t\t\t\t\t}\n\n\t\t\t\t\tprimitiveDef.targets = primitiveDef.targets || [];\n\t\t\t\t\tprimitiveDef.targets.push(targetDef);\n\t\t\t\t}\n\n\t\t\t\tif (primitive.listTargets().length && !targetNames) {\n\t\t\t\t\ttargetNames = primitive.listTargets().map((target) => target.getName());\n\t\t\t\t}\n\n\t\t\t\treturn primitiveDef;\n\t\t\t});\n\n\t\t\tif (mesh.getWeights().length) {\n\t\t\t\tmeshDef.weights = mesh.getWeights();\n\t\t\t}\n\n\t\t\tif (targetNames) {\n\t\t\t\tmeshDef.extras = meshDef.extras || {};\n\t\t\t\tmeshDef.extras['targetNames'] = targetNames;\n\t\t\t}\n\n\t\t\tcontext.meshIndexMap.set(mesh, index);\n\t\t\treturn meshDef;\n\t\t});\n\n\t\t/** Cameras. */\n\n\t\tjson.cameras = root.listCameras().map((camera, index) => {\n\t\t\tconst cameraDef = context.createPropertyDef(camera) as GLTF.ICamera;\n\t\t\tcameraDef.type = camera.getType();\n\t\t\tif (cameraDef.type === Camera.Type.PERSPECTIVE) {\n\t\t\t\tcameraDef.perspective = {\n\t\t\t\t\tznear: camera.getZNear(),\n\t\t\t\t\tzfar: camera.getZFar(),\n\t\t\t\t\tyfov: camera.getYFov(),\n\t\t\t\t};\n\t\t\t\tconst aspectRatio = camera.getAspectRatio();\n\t\t\t\tif (aspectRatio !== null) {\n\t\t\t\t\tcameraDef.perspective.aspectRatio = aspectRatio;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcameraDef.orthographic = {\n\t\t\t\t\tznear: camera.getZNear(),\n\t\t\t\t\tzfar: camera.getZFar(),\n\t\t\t\t\txmag: camera.getXMag(),\n\t\t\t\t\tymag: camera.getYMag(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcontext.cameraIndexMap.set(camera, index);\n\t\t\treturn cameraDef;\n\t\t});\n\n\t\t/* Nodes. */\n\n\t\tjson.nodes = root.listNodes().map((node, index) => {\n\t\t\tconst nodeDef = context.createPropertyDef(node) as GLTF.INode;\n\n\t\t\tif (!MathUtils.eq(node.getTranslation(), [0, 0, 0])) {\n\t\t\t\tnodeDef.translation = node.getTranslation();\n\t\t\t}\n\n\t\t\tif (!MathUtils.eq(node.getRotation(), [0, 0, 0, 1])) {\n\t\t\t\tnodeDef.rotation = node.getRotation();\n\t\t\t}\n\n\t\t\tif (!MathUtils.eq(node.getScale(), [1, 1, 1])) {\n\t\t\t\tnodeDef.scale = node.getScale();\n\t\t\t}\n\n\t\t\tif (node.getWeights().length) {\n\t\t\t\tnodeDef.weights = node.getWeights();\n\t\t\t}\n\n\t\t\t// Attachments (mesh, camera, skin) defined later in writing process.\n\n\t\t\tcontext.nodeIndexMap.set(node, index);\n\t\t\treturn nodeDef;\n\t\t});\n\n\t\t/** Skins. */\n\n\t\tjson.skins = root.listSkins().map((skin, index) => {\n\t\t\tconst skinDef = context.createPropertyDef(skin) as GLTF.ISkin;\n\n\t\t\tconst inverseBindMatrices = skin.getInverseBindMatrices();\n\t\t\tif (inverseBindMatrices) {\n\t\t\t\tskinDef.inverseBindMatrices = context.accessorIndexMap.get(inverseBindMatrices);\n\t\t\t}\n\n\t\t\tconst skeleton = skin.getSkeleton();\n\t\t\tif (skeleton) {\n\t\t\t\tskinDef.skeleton = context.nodeIndexMap.get(skeleton);\n\t\t\t}\n\n\t\t\tskinDef.joints = skin.listJoints().map((joint) => context.nodeIndexMap.get(joint)!);\n\n\t\t\tcontext.skinIndexMap.set(skin, index);\n\t\t\treturn skinDef;\n\t\t});\n\n\t\t/** Node attachments. */\n\n\t\troot.listNodes().forEach((node, index) => {\n\t\t\tconst nodeDef = json.nodes![index];\n\n\t\t\tconst mesh = node.getMesh();\n\t\t\tif (mesh) {\n\t\t\t\tnodeDef.mesh = context.meshIndexMap.get(mesh);\n\t\t\t}\n\n\t\t\tconst camera = node.getCamera();\n\t\t\tif (camera) {\n\t\t\t\tnodeDef.camera = context.cameraIndexMap.get(camera);\n\t\t\t}\n\n\t\t\tconst skin = node.getSkin();\n\t\t\tif (skin) {\n\t\t\t\tnodeDef.skin = context.skinIndexMap.get(skin);\n\t\t\t}\n\n\t\t\tif (node.listChildren().length > 0) {\n\t\t\t\tnodeDef.children = node.listChildren().map((node) => context.nodeIndexMap.get(node)!);\n\t\t\t}\n\t\t});\n\n\t\t/** Animations. */\n\n\t\tjson.animations = root.listAnimations().map((animation, index) => {\n\t\t\tconst animationDef = context.createPropertyDef(animation) as GLTF.IAnimation;\n\n\t\t\tconst samplerIndexMap: Map<AnimationSampler, number> = new Map();\n\n\t\t\tanimationDef.samplers = animation.listSamplers().map((sampler, samplerIndex) => {\n\t\t\t\tconst samplerDef = context.createPropertyDef(sampler) as GLTF.IAnimationSampler;\n\t\t\t\tsamplerDef.input = context.accessorIndexMap.get(sampler.getInput()!)!;\n\t\t\t\tsamplerDef.output = context.accessorIndexMap.get(sampler.getOutput()!)!;\n\t\t\t\tsamplerDef.interpolation = sampler.getInterpolation();\n\t\t\t\tsamplerIndexMap.set(sampler, samplerIndex);\n\t\t\t\treturn samplerDef;\n\t\t\t});\n\n\t\t\tanimationDef.channels = animation.listChannels().map((channel) => {\n\t\t\t\tconst channelDef = context.createPropertyDef(channel) as GLTF.IAnimationChannel;\n\t\t\t\tchannelDef.sampler = samplerIndexMap.get(channel.getSampler()!)!;\n\t\t\t\tchannelDef.target = {\n\t\t\t\t\tnode: context.nodeIndexMap.get(channel.getTargetNode()!)!,\n\t\t\t\t\tpath: channel.getTargetPath()!,\n\t\t\t\t};\n\t\t\t\treturn channelDef;\n\t\t\t});\n\n\t\t\tcontext.animationIndexMap.set(animation, index);\n\t\t\treturn animationDef;\n\t\t});\n\n\t\t/* Scenes. */\n\n\t\tjson.scenes = root.listScenes().map((scene, index) => {\n\t\t\tconst sceneDef = context.createPropertyDef(scene) as GLTF.IScene;\n\t\t\tsceneDef.nodes = scene.listChildren().map((node) => context.nodeIndexMap.get(node)!);\n\t\t\tcontext.sceneIndexMap.set(scene, index);\n\t\t\treturn sceneDef;\n\t\t});\n\n\t\tconst defaultScene = root.getDefaultScene();\n\t\tif (defaultScene) {\n\t\t\tjson.scene = root.listScenes().indexOf(defaultScene);\n\t\t}\n\n\t\t/* Extensions (2/2). */\n\n\t\tjson.extensionsUsed = extensionsUsed.map((ext) => ext.extensionName);\n\t\tjson.extensionsRequired = extensionsRequired.map((ext) => ext.extensionName);\n\t\textensionsUsed.forEach((extension) => extension.write(context));\n\n\t\t//\n\n\t\tclean(json as unknown as Record<string, unknown>);\n\n\t\treturn jsonDoc;\n\t}\n}\n\n/**\n * Removes empty and null values from an object.\n * @param object\n * @internal\n */\nfunction clean(object: Record<string, unknown>): void {\n\tconst unused: string[] = [];\n\n\tfor (const key in object) {\n\t\tconst value = object[key];\n\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\tunused.push(key);\n\t\t} else if (value === null || value === '') {\n\t\t\tunused.push(key);\n\t\t} else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n\t\t\tunused.push(key);\n\t\t}\n\t}\n\n\tfor (const key of unused) {\n\t\tdelete object[key];\n\t}\n}\n","import { Format, GLB_BUFFER, VertexLayout } from '../constants';\nimport { Document } from '../document';\nimport { Extension } from '../extension';\nimport { JSONDocument } from '../json-document';\nimport { GLTF } from '../types/gltf';\nimport { BufferUtils, FileUtils, Logger, uuid } from '../utils/';\nimport { GLTFReader } from './reader';\nimport { GLTFWriter, WriterOptions } from './writer';\n\nenum ChunkType {\n\tJSON = 0x4e4f534a,\n\tBIN = 0x004e4942,\n}\n\ntype PublicWriterOptions = Partial<Pick<WriterOptions, 'format' | 'basename'>>;\n\n/**\n * # PlatformIO\n *\n * *Abstract I/O service.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * For platform-specific implementations, see {@link NodeIO}, {@link WebIO}, and {@link DenoIO}.\n *\n * @category I/O\n */\nexport abstract class PlatformIO {\n\tprotected _logger = Logger.DEFAULT_INSTANCE;\n\tprivate _extensions = new Set<typeof Extension>();\n\tprivate _dependencies: { [key: string]: unknown } = {};\n\tprivate _vertexLayout = VertexLayout.INTERLEAVED;\n\n\t/** @hidden */\n\tpublic lastReadBytes = 0;\n\n\t/** @hidden */\n\tpublic lastWriteBytes = 0;\n\n\t/** Sets the {@link Logger} used by this I/O instance. Defaults to Logger.DEFAULT_INSTANCE. */\n\tpublic setLogger(logger: Logger): this {\n\t\tthis._logger = logger;\n\t\treturn this;\n\t}\n\n\t/** Registers extensions, enabling I/O class to read and write glTF assets requiring them. */\n\tpublic registerExtensions(extensions: typeof Extension[]): this {\n\t\tfor (const extension of extensions) {\n\t\t\tthis._extensions.add(extension);\n\t\t\textension.register();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Registers dependencies used (e.g. by extensions) in the I/O process. */\n\tpublic registerDependencies(dependencies: { [key: string]: unknown }): this {\n\t\tObject.assign(this._dependencies, dependencies);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vertex layout method used by this I/O instance. Defaults to\n\t * VertexLayout.INTERLEAVED.\n\t */\n\tpublic setVertexLayout(layout: VertexLayout): this {\n\t\tthis._vertexLayout = layout;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Abstract.\n\t */\n\n\tprotected abstract readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected abstract readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected abstract readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string>;\n\n\tprotected abstract resolve(base: string, path: string): string;\n\tprotected abstract dirname(uri: string): string;\n\n\t/**********************************************************************************************\n\t * Public Read API.\n\t */\n\n\t/** Reads a {@link Document} from the given URI. */\n\tpublic async read(uri: string): Promise<Document> {\n\t\treturn await this.readJSON(await this.readAsJSON(uri));\n\t}\n\n\t/** Loads a URI and returns a {@link JSONDocument} struct, without parsing. */\n\tpublic async readAsJSON(uri: string): Promise<JSONDocument> {\n\t\tconst isGLB = uri.match(/^data:application\\/octet-stream;/) || FileUtils.extension(uri) === 'glb';\n\t\treturn isGLB ? this._readGLB(uri) : this._readGLTF(uri);\n\t}\n\n\t/** Converts glTF-formatted JSON and a resource map to a {@link Document}. */\n\tpublic async readJSON(jsonDoc: JSONDocument): Promise<Document> {\n\t\tjsonDoc = this._copyJSON(jsonDoc);\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\treturn GLTFReader.read(jsonDoc, {\n\t\t\textensions: Array.from(this._extensions),\n\t\t\tdependencies: this._dependencies,\n\t\t\tlogger: this._logger,\n\t\t});\n\t}\n\n\t/** Converts a GLB-formatted Uint8Array to a {@link JSONDocument}. */\n\tpublic async binaryToJSON(glb: Uint8Array): Promise<JSONDocument> {\n\t\tconst jsonDoc = this._binaryToJSON(BufferUtils.assertView(glb));\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\tconst json = jsonDoc.json;\n\n\t\t// Check for external references, which can't be resolved by this method.\n\t\tif (json.buffers && json.buffers.some((bufferDef) => isExternalBuffer(jsonDoc, bufferDef))) {\n\t\t\tthrow new Error('Cannot resolve external buffers with binaryToJSON().');\n\t\t} else if (json.images && json.images.some((imageDef) => isExternalImage(jsonDoc, imageDef))) {\n\t\t\tthrow new Error('Cannot resolve external images with binaryToJSON().');\n\t\t}\n\n\t\treturn jsonDoc;\n\t}\n\n\t/** Converts a GLB-formatted Uint8Array to a {@link Document}. */\n\tpublic async readBinary(glb: Uint8Array): Promise<Document> {\n\t\treturn this.readJSON(await this.binaryToJSON(BufferUtils.assertView(glb)));\n\t}\n\n\t/**********************************************************************************************\n\t * Public Write API.\n\t */\n\n\t/** Converts a {@link Document} to glTF-formatted JSON and a resource map. */\n\tpublic async writeJSON(doc: Document, _options: PublicWriterOptions = {}): Promise<JSONDocument> {\n\t\tif (_options.format === Format.GLB && doc.getRoot().listBuffers().length > 1) {\n\t\t\tthrow new Error('GLB must have 0–1 buffers.');\n\t\t}\n\t\treturn GLTFWriter.write(doc, {\n\t\t\tformat: _options.format || Format.GLTF,\n\t\t\tbasename: _options.basename || '',\n\t\t\tlogger: this._logger,\n\t\t\tvertexLayout: this._vertexLayout,\n\t\t\tdependencies: { ...this._dependencies },\n\t\t\textensions: Array.from(this._extensions),\n\t\t} as Required<WriterOptions>);\n\t}\n\n\t/** Converts a {@link Document} to a GLB-formatted Uint8Array. */\n\tpublic async writeBinary(doc: Document): Promise<Uint8Array> {\n\t\tconst { json, resources } = await this.writeJSON(doc, { format: Format.GLB });\n\n\t\tconst header = new Uint32Array([0x46546c67, 2, 12]);\n\n\t\tconst jsonText = JSON.stringify(json);\n\t\tconst jsonChunkData = BufferUtils.pad(BufferUtils.encodeText(jsonText), 0x20);\n\t\tconst jsonChunkHeader = BufferUtils.toView(new Uint32Array([jsonChunkData.byteLength, 0x4e4f534a]));\n\t\tconst jsonChunk = BufferUtils.concat([jsonChunkHeader, jsonChunkData]);\n\t\theader[header.length - 1] += jsonChunk.byteLength;\n\n\t\tconst binBuffer = Object.values(resources)[0];\n\t\tif (!binBuffer || !binBuffer.byteLength) {\n\t\t\treturn BufferUtils.concat([BufferUtils.toView(header), jsonChunk]);\n\t\t}\n\n\t\tconst binChunkData = BufferUtils.pad(binBuffer, 0x00);\n\t\tconst binChunkHeader = BufferUtils.toView(new Uint32Array([binChunkData.byteLength, 0x004e4942]));\n\t\tconst binChunk = BufferUtils.concat([binChunkHeader, binChunkData]);\n\t\theader[header.length - 1] += binChunk.byteLength;\n\n\t\treturn BufferUtils.concat([BufferUtils.toView(header), jsonChunk, binChunk]);\n\t}\n\n\t/**********************************************************************************************\n\t * Internal.\n\t */\n\n\tprivate async _readGLTF(uri: string): Promise<JSONDocument> {\n\t\tthis.lastReadBytes = 0;\n\t\tconst jsonContent = await this.readURI(uri, 'text');\n\t\tthis.lastReadBytes += jsonContent.length;\n\t\tconst jsonDoc: JSONDocument = { json: JSON.parse(jsonContent), resources: {} };\n\t\t// Read external resources first, before Data URIs are replaced.\n\t\tawait this._readResourcesExternal(jsonDoc, this.dirname(uri));\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\treturn jsonDoc;\n\t}\n\n\tprivate async _readGLB(uri: string): Promise<JSONDocument> {\n\t\tconst view = await this.readURI(uri, 'view');\n\t\tthis.lastReadBytes = view.byteLength;\n\t\tconst jsonDoc = this._binaryToJSON(view);\n\t\t// Read external resources first, before Data URIs are replaced.\n\t\tawait this._readResourcesExternal(jsonDoc, this.dirname(uri));\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\treturn jsonDoc;\n\t}\n\n\tprivate async _readResourcesExternal(jsonDoc: JSONDocument, base: string): Promise<void> {\n\t\tconst images = jsonDoc.json.images || [];\n\t\tconst buffers = jsonDoc.json.buffers || [];\n\t\tconst pendingResources: Array<Promise<void>> = [...images, ...buffers].map(\n\t\t\tasync (resource: GLTF.IBuffer | GLTF.IImage): Promise<void> => {\n\t\t\t\tconst uri = resource.uri;\n\t\t\t\tif (!uri || uri.match(/data:/)) return Promise.resolve();\n\n\t\t\t\tjsonDoc.resources[uri] = await this.readURI(this.resolve(base, uri), 'view');\n\t\t\t\tthis.lastReadBytes += jsonDoc.resources[uri].byteLength;\n\t\t\t}\n\t\t);\n\t\tawait Promise.all(pendingResources);\n\t}\n\n\tprivate _readResourcesInternal(jsonDoc: JSONDocument): void {\n\t\t// NOTICE: This method may be called more than once during the loading\n\t\t// process (e.g. WebIO.read) and should handle that safely.\n\n\t\tfunction resolveResource(resource: GLTF.IBuffer | GLTF.IImage) {\n\t\t\tif (!resource.uri) return;\n\n\t\t\tif (resource.uri in jsonDoc.resources) {\n\t\t\t\tBufferUtils.assertView(jsonDoc.resources[resource.uri]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (resource.uri.match(/data:/)) {\n\t\t\t\t// Rewrite Data URIs to something short and unique.\n\t\t\t\tconst resourceUUID = `__${uuid()}.${FileUtils.extension(resource.uri)}`;\n\t\t\t\tjsonDoc.resources[resourceUUID] = BufferUtils.createBufferFromDataURI(resource.uri);\n\t\t\t\tresource.uri = resourceUUID;\n\t\t\t}\n\t\t}\n\n\t\t// Unpack images.\n\t\tconst images = jsonDoc.json.images || [];\n\t\timages.forEach((image: GLTF.IImage) => {\n\t\t\tif (image.bufferView === undefined && image.uri === undefined) {\n\t\t\t\tthrow new Error('Missing resource URI or buffer view.');\n\t\t\t}\n\n\t\t\tresolveResource(image);\n\t\t});\n\n\t\t// Unpack buffers.\n\t\tconst buffers = jsonDoc.json.buffers || [];\n\t\tbuffers.forEach(resolveResource);\n\t}\n\n\t/**\n\t * Creates a shallow copy of glTF-formatted {@link JSONDocument}.\n\t *\n\t * Images, Buffers, and Resources objects are deep copies so that PlatformIO can safely\n\t * modify them during the parsing process. Other properties are shallow copies, and buffers\n\t * are passed by reference.\n\t */\n\tprivate _copyJSON(jsonDoc: JSONDocument): JSONDocument {\n\t\tconst { images, buffers } = jsonDoc.json;\n\n\t\tjsonDoc = { json: { ...jsonDoc.json }, resources: { ...jsonDoc.resources } };\n\n\t\tif (images) {\n\t\t\tjsonDoc.json.images = images.map((image) => ({ ...image }));\n\t\t}\n\t\tif (buffers) {\n\t\t\tjsonDoc.json.buffers = buffers.map((buffer) => ({ ...buffer }));\n\t\t}\n\n\t\treturn jsonDoc;\n\t}\n\n\t/** Internal version of binaryToJSON; does not warn about external resources. */\n\tprivate _binaryToJSON(glb: Uint8Array): JSONDocument {\n\t\t// Decode and verify GLB header.\n\t\tconst header = new Uint32Array(glb.buffer, glb.byteOffset, 3);\n\t\tif (header[0] !== 0x46546c67) {\n\t\t\tthrow new Error('Invalid glTF asset.');\n\t\t} else if (header[1] !== 2) {\n\t\t\tthrow new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n\t\t}\n\n\t\t// Decode JSON chunk.\n\n\t\tconst jsonChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + 12, 2);\n\t\tif (jsonChunkHeader[1] !== ChunkType.JSON) {\n\t\t\tthrow new Error('Missing required GLB JSON chunk.');\n\t\t}\n\n\t\tconst jsonByteOffset = 20;\n\t\tconst jsonByteLength = jsonChunkHeader[0];\n\t\tconst jsonText = BufferUtils.decodeText(BufferUtils.toView(glb, jsonByteOffset, jsonByteLength));\n\t\tconst json = JSON.parse(jsonText) as GLTF.IGLTF;\n\n\t\t// Decode BIN chunk.\n\n\t\tconst binByteOffset = jsonByteOffset + jsonByteLength;\n\t\tif (glb.byteLength <= binByteOffset) {\n\t\t\treturn { json, resources: {} };\n\t\t}\n\n\t\tconst binChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + binByteOffset, 2);\n\t\tif (binChunkHeader[1] !== ChunkType.BIN) {\n\t\t\tthrow new Error('Expected GLB BIN in second chunk.');\n\t\t}\n\n\t\tconst binByteLength = binChunkHeader[0];\n\t\tconst binBuffer = BufferUtils.toView(glb, binByteOffset + 8, binByteLength);\n\n\t\treturn { json, resources: { [GLB_BUFFER]: binBuffer } };\n\t}\n}\n\nfunction isExternalBuffer(jsonDocument: JSONDocument, bufferDef: GLTF.IBuffer): boolean {\n\treturn bufferDef.uri !== undefined && !(bufferDef.uri in jsonDocument.resources);\n}\n\nfunction isExternalImage(jsonDocument: JSONDocument, imageDef: GLTF.IImage): boolean {\n\treturn imageDef.uri !== undefined && !(imageDef.uri in jsonDocument.resources) && imageDef.bufferView === undefined;\n}\n","import { Format } from '../constants';\nimport { Document } from '../document';\nimport { FileUtils } from '../utils/';\nimport { PlatformIO } from './platform-io';\nimport { HTTPUtils } from '../utils';\n\n/**\n * # NodeIO\n *\n * *I/O service for Node.js.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * const { NodeIO } = require('@gltf-transform/core');\n *\n * const io = new NodeIO();\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb'); // → Document\n * document = await io.readBinary(glb);   // Uint8Array → Document\n *\n * // Write.\n * await io.write('model.glb', document);      // → void\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * By default, NodeIO can only read/write paths on disk. To enable HTTP requests, provide a Fetch\n * API implementation (such as [`node-fetch`](https://www.npmjs.com/package/node-fetch)) and enable\n * {@link setAllowHTTP}. HTTP requests may optionally be configured with\n * [RequestInit](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters) parameters.\n *\n * ```typescript\n * import fetch from 'node-fetch';\n *\n * const io = new NodeIO(fetch, {headers: {...}}).setAllowHTTP(true);\n *\n * const document = await io.read('https://example.com/path/to/model.glb');\n * ```\n *\n * @category I/O\n */\nexport class NodeIO extends PlatformIO {\n\tprivate readonly _fs;\n\tprivate readonly _path;\n\tprivate readonly _fetch: typeof fetch | null;\n\tprivate readonly _fetchConfig: RequestInit;\n\n\tprivate _fetchEnabled = false;\n\n\t/**\n\t * Constructs a new NodeIO service. Instances are reusable. By default, only NodeIO can only\n\t * read/write paths on disk. To enable HTTP requests, provide a Fetch API implementation and\n\t * enable {@link setAllowHTTP}.\n\t *\n\t * @param fetch Implementation of Fetch API.\n\t * @param fetchConfig Configuration object for Fetch API.\n\t */\n\tconstructor(_fetch: unknown = null, _fetchConfig = HTTPUtils.DEFAULT_INIT) {\n\t\tsuper();\n\t\t// Excluded from browser builds with 'package.browser' field.\n\t\tthis._fs = require('fs').promises;\n\t\tthis._path = require('path');\n\t\tthis._fetch = _fetch as typeof fetch | null;\n\t\tthis._fetchConfig = _fetchConfig;\n\t}\n\n\tpublic setAllowHTTP(allow: boolean): this {\n\t\tif (allow && !this._fetch) {\n\t\t\tthrow new Error('NodeIO requires a Fetch API implementation for HTTP requests.');\n\t\t}\n\t\tthis._fetchEnabled = allow;\n\t\treturn this;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\tif (HTTPUtils.isAbsoluteURL(uri)) {\n\t\t\tif (!this._fetchEnabled || !this._fetch) {\n\t\t\t\tthrow new Error('Network request blocked. Allow HTTP requests explicitly, if needed.');\n\t\t\t}\n\n\t\t\tconst response = await this._fetch(uri, this._fetchConfig);\n\t\t\tswitch (type) {\n\t\t\t\tcase 'view':\n\t\t\t\t\treturn new Uint8Array(await response.arrayBuffer());\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn response.text();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'view':\n\t\t\t\t\treturn this._fs.readFile(uri);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn this._fs.readFile(uri, 'utf8');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\tif (HTTPUtils.isAbsoluteURL(base) || HTTPUtils.isAbsoluteURL(path)) {\n\t\t\treturn HTTPUtils.resolve(base, path);\n\t\t}\n\t\treturn this._path.resolve(base, path);\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\tif (HTTPUtils.isAbsoluteURL(uri)) {\n\t\t\treturn HTTPUtils.dirname(uri);\n\t\t}\n\t\treturn this._path.dirname(uri);\n\t}\n\n\t/**********************************************************************************************\n\t * Public.\n\t */\n\n\t/** Writes a {@link Document} instance to a local path. */\n\tpublic async write(uri: string, doc: Document): Promise<void> {\n\t\tconst isGLB = !!uri.match(/\\.glb$/);\n\t\tawait (isGLB ? this._writeGLB(uri, doc) : this._writeGLTF(uri, doc));\n\t}\n\n\t/**********************************************************************************************\n\t * Private.\n\t */\n\n\t/** @internal */\n\tprivate async _writeGLTF(uri: string, doc: Document): Promise<void> {\n\t\tthis.lastWriteBytes = 0;\n\t\tconst { json, resources } = await this.writeJSON(doc, {\n\t\t\tformat: Format.GLTF,\n\t\t\tbasename: FileUtils.basename(uri),\n\t\t});\n\t\tconst { _fs: fs, _path: path } = this;\n\t\tconst dir = path.dirname(uri);\n\t\tconst jsonContent = JSON.stringify(json, null, 2);\n\t\tthis.lastWriteBytes += jsonContent.length;\n\t\tawait fs.writeFile(uri, jsonContent);\n\t\tconst pending = Object.keys(resources).map(async (resourceURI) => {\n\t\t\tif (HTTPUtils.isAbsoluteURL(resourceURI)) {\n\t\t\t\tif (FileUtils.extension(resourceURI) === 'bin') {\n\t\t\t\t\tthrow new Error(`Cannot write buffer to path \"${resourceURI}\".`);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst resource = Buffer.from(resources[resourceURI]);\n\t\t\tawait fs.writeFile(path.join(dir, resourceURI), resource);\n\t\t\tthis.lastWriteBytes += resource.byteLength;\n\t\t});\n\t\tawait Promise.all(pending);\n\t}\n\n\t/** @internal */\n\tprivate async _writeGLB(uri: string, doc: Document): Promise<void> {\n\t\tconst buffer = Buffer.from(await this.writeBinary(doc));\n\t\tawait this._fs.writeFile(uri, buffer);\n\t\tthis.lastWriteBytes = buffer.byteLength;\n\t}\n}\n","import { PlatformIO } from './platform-io';\n\ninterface Path {\n\tresolve(base: string, path: string): string;\n\tdirname(uri: string): string;\n}\n\n/**\n * # DenoIO\n *\n * *I/O service for [Deno](https://deno.land/).*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * _*NOTICE:* Support for the Deno environment is currently experimental. See\n * [glTF-Transform#457](https://github.com/donmccurdy/glTF-Transform/issues/457)._\n *\n * Usage:\n *\n * ```typescript\n * import { DenoIO } from 'https://esm.sh/@gltf-transform/core';\n * import * as path from 'https://deno.land/std/path/mod.ts';\n *\n * const io = new DenoIO(path);\n *\n * // Read.\n * let document;\n * document = io.read('model.glb');  // → Document\n * document = io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = io.writeBinary(document);  // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nexport class DenoIO extends PlatformIO {\n\tprivate _path: Path;\n\n\tconstructor(path: unknown) {\n\t\tsuper();\n\t\tthis._path = path as Path;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\t// TODO(cleanup): The @ts-ignore rules below are necessary for typedoc, but not for normal\n\t\t// compilation with microbundle. Clean this up when possible.\n\t\tswitch (type) {\n\t\t\tcase 'view':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn Deno.readFile(uri);\n\t\t\tcase 'text':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn Deno.readTextFile(uri);\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\treturn this._path.resolve(base, path);\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\treturn this._path.dirname(uri);\n\t}\n}\n","import { PlatformIO } from './platform-io';\nimport { HTTPUtils } from '../utils';\n\n/**\n * # WebIO\n *\n * *I/O service for Web.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { WebIO } from '@gltf-transform/core';\n *\n * const io = new WebIO({credentials: 'include'});\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb');  // → Document\n * document = await io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nexport class WebIO extends PlatformIO {\n\tprivate readonly _fetchConfig: RequestInit;\n\n\t/**\n\t * Constructs a new WebIO service. Instances are reusable.\n\t * @param fetchConfig Configuration object for Fetch API.\n\t */\n\tconstructor(fetchConfig = HTTPUtils.DEFAULT_INIT) {\n\t\tsuper();\n\t\tthis._fetchConfig = fetchConfig;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\tconst response = await fetch(uri, this._fetchConfig);\n\t\tswitch (type) {\n\t\t\tcase 'view':\n\t\t\t\treturn new Uint8Array(await response.arrayBuffer());\n\t\t\tcase 'text':\n\t\t\t\treturn response.text();\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\treturn HTTPUtils.resolve(base, path);\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\treturn HTTPUtils.dirname(uri);\n\t}\n}\n",null,"import type { Graph } from './graph';\nimport type { GraphNode } from './graph-node';\nimport type { GraphEdge } from './graph-edge';\n\nexport interface BaseEvent {\n\ttype: string;\n\t[attachment: string]: unknown;\n}\n\nexport interface GraphEvent extends BaseEvent {\n\ttarget: Graph<GraphNode>;\n}\n\nexport interface GraphNodeEvent extends BaseEvent {\n\ttarget: GraphNode;\n}\n\nexport interface GraphEdgeEvent extends BaseEvent {\n\ttarget: GraphEdge<GraphNode, GraphNode>;\n}\n\nexport type EventListener<E> = (event: E) => void;\n\nexport class EventDispatcher<T extends BaseEvent> {\n\tprivate _listeners = {} as Record<string, EventListener<T>[]>;\n\n\taddEventListener(type: string, listener: EventListener<T>): this {\n\t\tconst listeners = this._listeners;\n\n\t\tif (listeners[type] === undefined) {\n\t\t\tlisteners[type] = [] as EventListener<T>[];\n\t\t}\n\n\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\tlisteners[type].push(listener);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremoveEventListener(type: string, listener: EventListener<T>): this {\n\t\tif (this._listeners === undefined) return this;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[type];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdispatchEvent(event: T): this {\n\t\tif (this._listeners === undefined) return this;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[event.type];\n\n\t\tif (listenerArray !== undefined) {\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\tarray[i].call(this, event as T);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdispose(): void {\n\t\tfor (const key in this._listeners) {\n\t\t\tdelete this._listeners[key];\n\t\t}\n\t}\n}\n","import { EventDispatcher, GraphEdgeEvent } from './event-dispatcher';\nimport { GraphNode } from './graph-node';\n\n/**\n * Represents a connection between two {@link GraphNode} resources in a {@link Graph}.\n *\n * The left node is considered the owner, and the right node the resource. The\n * owner is responsible for being able find and remove a reference to a resource, given\n * that link. The resource does not hold a reference to the link or to the owner,\n * although that reverse lookup can be done on the graph.\n *\n * @category Graph\n */\nexport class GraphEdge<Parent extends GraphNode, Child extends GraphNode> extends EventDispatcher<GraphEdgeEvent> {\n\tprivate _disposed = false;\n\n\tconstructor(\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _parent: Parent,\n\t\tprivate _child: Child,\n\t\tprivate _attributes: Record<string, unknown> = {}\n\t) {\n\t\tsuper();\n\t\tif (!_parent.isOnGraph(_child)) {\n\t\t\tthrow new Error('Cannot connect disconnected graphs.');\n\t\t}\n\t}\n\n\t/** Name. */\n\tgetName(): string {\n\t\treturn this._name;\n\t}\n\n\t/** Owner node. */\n\tgetParent(): Parent {\n\t\treturn this._parent;\n\t}\n\n\t/** Resource node. */\n\tgetChild(): Child {\n\t\treturn this._child;\n\t}\n\n\t/**\n\t * Sets the child node.\n\t *\n\t * @internal Only {@link Graph} implementations may safely call this method directly. Use\n\t * \t{@link Property.swap} or {@link Graph.swapChild} instead.\n\t */\n\tsetChild(child: Child): this {\n\t\tthis._child = child;\n\t\treturn this;\n\t}\n\n\t/** Attributes of the graph node relationship. */\n\tgetAttributes(): Record<string, unknown> {\n\t\treturn this._attributes;\n\t}\n\n\t/** Destroys a (currently intact) edge, updating both the graph and the owner. */\n\tdispose(): void {\n\t\tif (this._disposed) return;\n\t\tthis._disposed = true;\n\t\tthis.dispatchEvent({ type: 'dispose', target: this });\n\t\tsuper.dispose();\n\t}\n\n\t/** Whether this link has been destroyed. */\n\tisDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n}\n","import { GraphNodeEvent } from '.';\nimport { EventDispatcher, GraphEdgeEvent, GraphEvent } from './event-dispatcher';\nimport { GraphEdge } from './graph-edge';\nimport { GraphNode } from './graph-node';\n\n/**\n * A graph manages a network of {@link GraphNode} nodes, connected\n * by {@link @Link} edges.\n *\n * @category Graph\n */\nexport class Graph<T extends GraphNode> extends EventDispatcher<GraphEvent | GraphNodeEvent | GraphEdgeEvent> {\n\tprivate _emptySet: Set<GraphEdge<T, T>> = new Set();\n\n\tprivate _edges: Set<GraphEdge<T, T>> = new Set();\n\tprivate _parentEdges: Map<T, Set<GraphEdge<T, T>>> = new Map();\n\tprivate _childEdges: Map<T, Set<GraphEdge<T, T>>> = new Map();\n\n\t/** Returns a list of all parent->child edges on this graph. */\n\tpublic listEdges(): GraphEdge<T, T>[] {\n\t\treturn Array.from(this._edges);\n\t}\n\n\t/** Returns a list of all edges on the graph having the given node as their child. */\n\tpublic listParentEdges(node: T): GraphEdge<T, T>[] {\n\t\treturn Array.from(this._childEdges.get(node) || this._emptySet);\n\t}\n\n\t/** Returns a list of parent nodes for the given child node. */\n\tpublic listParents(node: T): T[] {\n\t\treturn this.listParentEdges(node).map((edge) => edge.getParent());\n\t}\n\n\t/** Returns a list of all edges on the graph having the given node as their parent. */\n\tpublic listChildEdges(node: T): GraphEdge<T, T>[] {\n\t\treturn Array.from(this._parentEdges.get(node) || this._emptySet);\n\t}\n\n\t/** Returns a list of child nodes for the given parent node. */\n\tpublic listChildren(node: T): T[] {\n\t\treturn this.listChildEdges(node).map((edge) => edge.getChild());\n\t}\n\n\tpublic disconnectParents(node: T, filter?: (n: T) => boolean): this {\n\t\tlet edges = this.listParentEdges(node);\n\t\tif (filter) {\n\t\t\tedges = edges.filter((edge) => filter(edge.getParent()));\n\t\t}\n\t\tedges.forEach((edge) => edge.dispose());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates a {@link GraphEdge} connecting two {@link GraphNode} instances. Edge is returned\n\t * for the caller to store.\n\t * @param a Owner\n\t * @param b Resource\n\t */\n\tpublic createEdge<A extends T, B extends T>(\n\t\tname: string,\n\t\ta: A,\n\t\tb: B,\n\t\tattributes?: Record<string, unknown>\n\t): GraphEdge<A, B> {\n\t\treturn this._registerEdge(new GraphEdge(name, a, b, attributes)) as GraphEdge<A, B>;\n\t}\n\n\t/**********************************************************************************************\n\t * Internal.\n\t */\n\n\tprivate _registerEdge(edge: GraphEdge<T, T>): GraphEdge<T, T> {\n\t\tthis._edges.add(edge);\n\n\t\tconst parent = edge.getParent();\n\t\tif (!this._parentEdges.has(parent)) this._parentEdges.set(parent, new Set());\n\t\tthis._parentEdges.get(parent)!.add(edge);\n\n\t\tconst child = edge.getChild();\n\t\tif (!this._childEdges.has(child)) this._childEdges.set(child, new Set());\n\t\tthis._childEdges.get(child)!.add(edge);\n\n\t\tedge.addEventListener('dispose', () => this._removeEdge(edge));\n\t\treturn edge;\n\t}\n\n\t/**\n\t * Removes the {@link GraphEdge} from the {@link Graph}. This method should only\n\t * be invoked by the onDispose() listener created in {@link _registerEdge()}. The\n\t * public method of removing an edge is {@link GraphEdge.dispose}.\n\t */\n\tprivate _removeEdge(edge: GraphEdge<T, T>): this {\n\t\tthis._edges.delete(edge);\n\t\tthis._parentEdges.get(edge.getParent())!.delete(edge);\n\t\tthis._childEdges.get(edge.getChild())!.delete(edge);\n\t\treturn this;\n\t}\n}\n","import type { Ref, RefMap } from './constants';\nimport { GraphEdge } from './graph-edge';\n\nexport function isRef(value: Ref | unknown): boolean {\n\treturn value instanceof GraphEdge;\n}\n\nexport function isRefList(value: Ref[] | unknown): boolean {\n\treturn Array.isArray(value) && value[0] instanceof GraphEdge;\n}\n\nexport function isRefMap(value: RefMap | unknown): boolean {\n\treturn !!(value && typeof value === 'object' && Object.values(value)[0] instanceof GraphEdge);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { GraphNodeEvent } from '.';\nimport { LiteralKeys, Nullable, Ref, RefMap, RefKeys, RefListKeys, RefMapKeys } from './constants';\nimport { BaseEvent, EventDispatcher } from './event-dispatcher';\nimport { Graph } from './graph';\nimport { GraphEdge } from './graph-edge';\nimport { isRef, isRefList, isRefMap } from './utils';\n\n// References:\n// - https://stackoverflow.com/a/70163679/1314762\n// - https://stackoverflow.com/a/70201805/1314762\n\ntype GraphNodeAttributesInternal<Parent extends GraphNode, Attributes extends {}> = {\n\t[Key in keyof Attributes]: Attributes[Key] extends GraphNode\n\t\t? GraphEdge<Parent, Attributes[Key]>\n\t\t: Attributes[Key] extends GraphNode[]\n\t\t? GraphEdge<Parent, Attributes[Key][number]>[]\n\t\t: Attributes[Key] extends { [key: string]: GraphNode }\n\t\t? Record<string, GraphEdge<Parent, Attributes[Key][string]>>\n\t\t: Attributes[Key];\n};\n\nexport const $attributes = Symbol('attributes');\nexport const $immutableKeys = Symbol('immutableKeys');\n\n/**\n * Represents a node in a {@link Graph}.\n *\n * @category Graph\n */\nexport abstract class GraphNode<Attributes extends {} = {}> extends EventDispatcher<GraphNodeEvent> {\n\tprivate _disposed = false;\n\n\t/**\n\t * Internal graph used to search and maintain references.\n\t * @hidden\n\t */\n\tprotected readonly graph: Graph<GraphNode>;\n\n\t/**\n\t * Attributes (literal values and GraphNode references) associated with this instance. For each\n\t * GraphNode reference, the attributes stores a {@link GraphEdge}. List and Map references are\n\t * stored as arrays and dictionaries of edges.\n\t * @internal\n\t */\n\tprotected readonly [$attributes]: GraphNodeAttributesInternal<this, Attributes>;\n\n\t/**\n\t * Attributes included with `getDefaultAttributes` are considered immutable, and cannot be\n\t * modifed by `.setRef()`, `.copy()`, or other GraphNode methods. Both the edges and the\n\t * properties will be disposed with the parent GraphNode.\n\t *\n\t * Currently, only single-edge references (getRef/setRef) are supported as immutables.\n\t *\n\t * @internal\n\t */\n\tprotected readonly [$immutableKeys]: Set<string>;\n\n\tconstructor(graph: Graph<GraphNode>) {\n\t\tsuper();\n\t\tthis.graph = graph;\n\t\tthis[$immutableKeys] = new Set();\n\t\tthis[$attributes] = this._createAttributes();\n\t}\n\n\t/**\n\t * Returns default attributes for the graph node. Subclasses having any attributes (either\n\t * literal values or references to other graph nodes) must override this method. Literal\n\t * attributes should be given their default values, if any. References should generally be\n\t * initialized as empty (Ref → null, RefList → [], RefMap → {}) and then modified by setters.\n\t *\n\t * Any single-edge references (setRef) returned by this method will be considered immutable,\n\t * to be owned by and disposed with the parent node. Multi-edge references (addRef, removeRef,\n\t * setRefMap) cannot be returned as default attributes.\n\t */\n\tprotected getDefaults(): Nullable<Attributes> {\n\t\treturn {} as Nullable<Attributes>;\n\t}\n\n\t/**\n\t * Constructs and returns an object used to store a graph nodes attributes. Compared to the\n\t * default Attributes interface, this has two distinctions:\n\t *\n\t * 1. Slots for GraphNode<T> objects are replaced with slots for GraphEdge<this, GraphNode<T>>\n\t * 2. GraphNode<T> objects provided as defaults are considered immutable\n\t *\n\t * @internal\n\t */\n\tprivate _createAttributes(): GraphNodeAttributesInternal<this, Attributes> {\n\t\tconst defaultAttributes = this.getDefaults();\n\t\tconst attributes = {} as GraphNodeAttributesInternal<this, Attributes>;\n\t\tfor (const key in defaultAttributes) {\n\t\t\tconst value = defaultAttributes[key] as any;\n\t\t\tif (value instanceof GraphNode) {\n\t\t\t\tconst ref = this.graph.createEdge(key, this, value);\n\t\t\t\tref.addEventListener('dispose', () => value.dispose());\n\t\t\t\tthis[$immutableKeys].add(key);\n\t\t\t\tattributes[key] = ref as any;\n\t\t\t} else {\n\t\t\t\tattributes[key] = value as any;\n\t\t\t}\n\t\t}\n\t\treturn attributes;\n\t}\n\n\t/** @internal Returns true if two nodes are on the same {@link Graph}. */\n\tpublic isOnGraph(other: GraphNode): boolean {\n\t\treturn this.graph === other.graph;\n\t}\n\n\t/** Returns true if the node has been permanently removed from the graph. */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Removes both inbound references to and outbound references from this object. At the end\n\t * of the process the object holds no references, and nothing holds references to it. A\n\t * disposed object is not reusable.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._disposed) return;\n\t\tthis.graph.listChildEdges(this).forEach((edge) => edge.dispose());\n\t\tthis.graph.disconnectParents(this);\n\t\tthis._disposed = true;\n\t\tthis.dispatchEvent({ type: 'dispose' });\n\t}\n\n\t/**\n\t * Removes all inbound references to this object. At the end of the process the object is\n\t * considered 'detached': it may hold references to child resources, but nothing holds\n\t * references to it. A detached object may be re-attached.\n\t */\n\tpublic detach(): this {\n\t\tthis.graph.disconnectParents(this);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transfers this object's references from the old node to the new one. The old node is fully\n\t * detached from this parent at the end of the process.\n\t *\n\t * @hidden This method works imperfectly with Root, Scene, and Node properties, which may\n\t * already hold equivalent references to the replacement object.\n\t */\n\tpublic swap(old: GraphNode, replacement: GraphNode): this {\n\t\tfor (const attribute in this[$attributes]) {\n\t\t\tconst value = this[$attributes][attribute] as Ref | Ref[] | RefMap;\n\t\t\tif (isRef(value)) {\n\t\t\t\tconst ref = value as Ref;\n\t\t\t\tif (ref.getChild() === old) {\n\t\t\t\t\tthis.setRef(attribute as any, replacement, ref.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isRefList(value)) {\n\t\t\t\tconst refs = value as Ref[];\n\t\t\t\tconst ref = refs.find((ref) => ref.getChild() === old);\n\t\t\t\tif (ref) {\n\t\t\t\t\tconst refAttributes = ref.getAttributes();\n\t\t\t\t\tthis.removeRef(attribute as any, old).addRef(attribute as any, replacement, refAttributes);\n\t\t\t\t}\n\t\t\t} else if (isRefMap(value)) {\n\t\t\t\tconst refMap = value as RefMap;\n\t\t\t\tfor (const key in refMap) {\n\t\t\t\t\tconst ref = refMap[key];\n\t\t\t\t\tif (ref.getChild() === old) {\n\t\t\t\t\t\tthis.setRefMap(attribute as any, key, replacement, ref.getAttributes());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Literal attributes.\n\t */\n\n\t/** @hidden */\n\tprotected get<K extends LiteralKeys<Attributes>>(attribute: K): Attributes[K] {\n\t\treturn this[$attributes][attribute] as Attributes[K];\n\t}\n\n\t/** @hidden */\n\tprotected set<K extends LiteralKeys<Attributes>>(attribute: K, value: Attributes[K]): this {\n\t\t(this[$attributes][attribute] as Attributes[K]) = value;\n\t\treturn this.dispatchEvent({ type: 'change', attribute });\n\t}\n\n\t/**********************************************************************************************\n\t * Ref: 1:1 graph node references.\n\t */\n\n\t/** @hidden */\n\tprotected getRef<K extends RefKeys<Attributes>>(attribute: K): (GraphNode & Attributes[K]) | null {\n\t\tconst ref = this[$attributes][attribute] as Ref;\n\t\treturn ref ? (ref.getChild() as GraphNode & Attributes[K]) : null;\n\t}\n\n\t/** @hidden */\n\tprotected setRef<K extends RefKeys<Attributes>>(\n\t\tattribute: K,\n\t\tvalue: (GraphNode & Attributes[K]) | null,\n\t\tattributes?: Record<string, unknown>\n\t): this {\n\t\tif (this[$immutableKeys].has(attribute as string)) {\n\t\t\tthrow new Error(`Cannot overwrite immutable attribute, \"${attribute}\".`);\n\t\t}\n\n\t\tconst prevRef = this[$attributes][attribute] as Ref;\n\t\tif (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n\t\tif (!value) return this;\n\n\t\tconst ref = this.graph.createEdge(attribute as string, this, value, attributes);\n\t\tref.addEventListener('dispose', () => {\n\t\t\tdelete this[$attributes][attribute];\n\t\t\tthis.dispatchEvent({ type: 'change', attribute });\n\t\t});\n\t\t(this[$attributes][attribute] as Ref) = ref;\n\n\t\treturn this.dispatchEvent({ type: 'change', attribute });\n\t}\n\n\t/**********************************************************************************************\n\t * RefList: 1:many graph node references.\n\t */\n\n\t/** @hidden */\n\tprotected listRefs<K extends RefListKeys<Attributes>>(attribute: K): GraphNode[] & Attributes[K] {\n\t\tconst refs = this[$attributes][attribute] as Ref[];\n\t\treturn refs.map((ref) => ref.getChild()) as GraphNode[] & Attributes[K];\n\t}\n\n\t/** @hidden */\n\tprotected addRef<K extends RefListKeys<Attributes>>(\n\t\tattribute: K,\n\t\tvalue: GraphNode & Attributes[K][keyof Attributes[K]],\n\t\tattributes?: Record<string, unknown>\n\t): this {\n\t\tconst ref = this.graph.createEdge(attribute as string, this, value, attributes);\n\n\t\tconst refs = this[$attributes][attribute] as Ref[];\n\t\trefs.push(ref);\n\n\t\tref.addEventListener('dispose', () => {\n\t\t\tconst retained = refs.filter((l) => l !== ref);\n\t\t\trefs.length = 0;\n\t\t\tfor (const retainedRef of retained) refs.push(retainedRef);\n\t\t\tthis.dispatchEvent({ type: 'change', attribute });\n\t\t});\n\n\t\treturn this.dispatchEvent({ type: 'change', attribute });\n\t}\n\n\t/** @hidden */\n\tprotected removeRef<K extends RefListKeys<Attributes>>(\n\t\tattribute: K,\n\t\tvalue: GraphNode & Attributes[K][keyof Attributes[K]]\n\t): this {\n\t\tconst refs = this[$attributes][attribute] as Ref[];\n\t\tconst pruned = refs.filter((ref) => ref.getChild() === value);\n\t\tpruned.forEach((ref) => ref.dispose()); // TODO(cleanup): Possible duplicate event.\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * RefMap: Named 1:many (map) graph node references.\n\t */\n\n\t/** @hidden */\n\tprotected listRefMapKeys<K extends RefMapKeys<Attributes>>(key: K): string[] {\n\t\treturn Object.keys(this[$attributes][key]);\n\t}\n\n\t/** @hidden */\n\tprotected listRefMapValues<K extends RefMapKeys<Attributes>>(\n\t\tkey: K\n\t): GraphNode[] & Attributes[K][keyof Attributes[K]][] {\n\t\treturn Object.values(this[$attributes][key]).map((ref: any) => ref.getChild());\n\t}\n\n\t/** @hidden */\n\tprotected getRefMap<K extends RefMapKeys<Attributes>, SK extends keyof Attributes[K]>(\n\t\tattribute: K,\n\t\tkey: SK\n\t): (GraphNode & Attributes[K][SK]) | null {\n\t\tconst refMap = this[$attributes][attribute] as any;\n\t\treturn refMap[key] ? refMap[key].getChild() : null;\n\t}\n\n\t/** @hidden */\n\tprotected setRefMap<K extends RefMapKeys<Attributes>, SK extends keyof Attributes[K]>(\n\t\tattribute: K,\n\t\tkey: SK,\n\t\tvalue: (GraphNode & Attributes[K][SK]) | null,\n\t\tmetadata?: Record<string, unknown>\n\t): this {\n\t\tconst refMap = this[$attributes][attribute] as any;\n\n\t\tconst prevRef = refMap[key];\n\t\tif (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n\t\tif (!value) return this;\n\n\t\tmetadata = Object.assign(metadata || {}, { key: key });\n\t\tconst ref = this.graph.createEdge(attribute as string, this, value, { ...metadata, key });\n\t\tref.addEventListener('dispose', () => {\n\t\t\tdelete refMap[key];\n\t\t\tthis.dispatchEvent({ type: 'change', attribute, key });\n\t\t});\n\t\trefMap[key] = ref;\n\n\t\treturn this.dispatchEvent({ type: 'change', attribute, key });\n\t}\n\n\t/**********************************************************************************************\n\t * Events.\n\t */\n\n\tdispatchEvent(event: BaseEvent): this {\n\t\tsuper.dispatchEvent({ ...event, target: this });\n\t\tthis.graph.dispatchEvent({ ...event, target: this, type: `node:${event.type}` });\n\t\treturn this;\n\t}\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";"],"names":["VERSION","GLB_BUFFER","PropertyType","VertexLayout","BufferViewUsage","TextureChannel","Format","bounds","node","resultBounds","min","Infinity","max","parents","propertyType","NODE","listChildren","parent","traverse","mesh","getMesh","meshBounds","getMeshBounds","getWorldMatrix","expandBounds","worldMatrix","prim","listPrimitives","position","getAttribute","localPos","worldPos","i","getCount","getElement","transformMat4","point","target","Math","BufferUtils","[object Object]","dataURI","Buffer","byteString","atob","split","ia","Uint8Array","length","charCodeAt","data","isBase64","indexOf","from","text","TextEncoder","encode","array","TextDecoder","decode","toString","arrays","totalByteLength","byteLength","result","byteOffset","set","srcArray","paddingByte","paddedLength","this","padNumber","dstArray","v","ceil","a","b","buffer","view","ArrayBuffer","isView","Error","ColorUtils","hex","floor","_target","convertSRGBToLinear","factor","r","g","convertLinearToSRGB","source","_source","pow","FileUtils","path","fileName","URL","pathname","pop","substring","lastIndexOf","PNGImageUtils","match","getSize","DataView","decodeText","slice","PNG_FRIED_CHUNK_NAME","getUint32","getChannels","_buffer","ImageUtils","mimeType","impl","impls","getGPUByteLength","uncompressedBytes","resolution","extension","validateJPEGBuffer","TypeError","getUint8","isObject","o","Object","prototype","call","isPlainObject","ctor","constructor","undefined","prot","hasOwnProperty","image/jpeg","next","getUint16","image/png","Logger","verbosity","debug","Verbosity","DEBUG","console","info","INFO","warn","WARN","error","ERROR","SILENT","DEFAULT_INSTANCE","MathUtils","abs","c","componentType","f","round","srcMat","dstTranslation","dstRotation","dstScale","sx","sy","sz","determinant","_m1","invSX","invSY","invSZ","getRotation","srcTranslation","srcRotation","srcScale","dstMat","te","x","y","z","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","equalsRef","refA","refB","getChild","equals","equalsRefList","refListA","refListB","equalsRefMap","refMapA","refMapB","keysA","keys","keysB","key","equalsArray","equalsObject","_a","_b","numKeysA","numKeysB","valueA","valueB","isArray","value","Array","ALPHABET","previousIDs","Set","generateOne","rtn","charAt","random","uuid","retries","id","has","add","HTTPUtils","index","base","isRelativePath","stack","parts","push","join","PROTOCOL_REGEXP","test","DEFAULT_INIT","COPY_IDENTITY","t","Property","GraphNode","graph","name","super","$attributes","init","dispatchEvent","type","getDefaults","assign","extras","getName","get","setName","getExtras","setExtras","clone","PropertyClass","copy","other","resolve","GraphEdge","$immutableKeys","dispose","ref","values","subkey","thisValue","otherValue","setRef","getAttributes","addRef","setRefMap","JSON","parse","stringify","isRef","isRefList","isRefMap","detach","disconnectParents","n","listParents","ExtensibleProperty","extensions","getExtension","getRefMap","setExtension","extensionProperty","_validateParent","listExtensions","listRefMapValues","Accessor","_in","identity","_out","ACCESSOR","Type","SCALAR","ComponentType","FLOAT","normalized","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_INT","getMinNormalized","elementSize","getElementSize","getMin","j","count","Number","isFinite","getMaxNormalized","getMax","getType","setType","getComponentSize","BYTES_PER_ELEMENT","getComponentType","getNormalized","setNormalized","denormalize","normalize","getScalar","setScalar","setElement","getBuffer","getRef","setBuffer","getArray","setArray","Float32Array","Uint32Array","Uint16Array","Int16Array","Int8Array","arrayToComponentType","getByteLength","Animation","ANIMATION","channels","samplers","addChannel","channel","removeChannel","removeRef","listChannels","listRefs","addSampler","sampler","removeSampler","listSamplers","AnimationChannel","ANIMATION_CHANNEL","targetPath","targetNode","getTargetPath","setTargetPath","getTargetNode","setTargetNode","getSampler","setSampler","TargetPath","TRANSLATION","ROTATION","SCALE","WEIGHTS","AnimationSampler","ANIMATION_SAMPLER","getDefaultAttributes","interpolation","Interpolation","LINEAR","input","output","getInterpolation","setInterpolation","getInput","setInput","usage","OTHER","getOutput","setOutput","STEP","CUBICSPLINE","BUFFER","uri","getURI","setURI","Camera","CAMERA","PERSPECTIVE","znear","zfar","aspectRatio","yfov","PI","xmag","ymag","getZNear","setZNear","getZFar","setZFar","getAspectRatio","setAspectRatio","getYFov","setYFov","getXMag","setXMag","getYMag","setYMag","ORTHOGRAPHIC","ExtensionProperty","parentTypes","includes","EXTENSION_NAME","TextureInfo","TEXTURE_INFO","texCoord","magFilter","minFilter","wrapS","WrapMode","REPEAT","wrapT","getTexCoord","setTexCoord","getMagFilter","setMagFilter","getMinFilter","setMinFilter","getWrapS","setWrapS","getWrapT","setWrapT","CLAMP_TO_EDGE","MIRRORED_REPEAT","MagFilter","NEAREST","MinFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","R","G","B","A","Material","MATERIAL","alphaMode","AlphaMode","OPAQUE","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","baseColorTextureInfo","emissiveFactor","emissiveTexture","emissiveTextureInfo","normalScale","normalTexture","normalTextureInfo","occlusionStrength","occlusionTexture","occlusionTextureInfo","roughnessFactor","metallicFactor","metallicRoughnessTexture","metallicRoughnessTextureInfo","getDoubleSided","setDoubleSided","getAlpha","setAlpha","alpha","getAlphaMode","setAlphaMode","getAlphaCutoff","setAlphaCutoff","getBaseColorFactor","setBaseColorFactor","getBaseColorHex","factorToHex","setBaseColorHex","hexToFactor","getBaseColorTexture","getBaseColorTextureInfo","setBaseColorTexture","texture","getEmissiveFactor","setEmissiveFactor","getEmissiveHex","setEmissiveHex","getEmissiveTexture","getEmissiveTextureInfo","setEmissiveTexture","getNormalScale","setNormalScale","scale","getNormalTexture","getNormalTextureInfo","setNormalTexture","getOcclusionStrength","setOcclusionStrength","strength","getOcclusionTexture","getOcclusionTextureInfo","setOcclusionTexture","getRoughnessFactor","setRoughnessFactor","getMetallicFactor","setMetallicFactor","getMetallicRoughnessTexture","getMetallicRoughnessTextureInfo","setMetallicRoughnessTexture","MASK","BLEND","Mesh","MESH","weights","primitives","addPrimitive","primitive","removePrimitive","getWeights","setWeights","Node","_parent","translation","rotation","camera","skin","children","getTranslation","getScale","setTranslation","setRotation","setScale","getMatrix","compose","setMatrix","matrix","decompose","getWorldTranslation","getWorldRotation","getWorldScale","s","ancestors","ancestor","multiply","addChild","child","removeChild","childrenRefs","addEventListener","getParent","setMesh","getCamera","setCamera","getSkin","setSkin","fn","Primitive","PRIMITIVE","mode","Mode","TRIANGLES","material","indices","attributes","targets","getIndices","setIndices","ELEMENT_ARRAY_BUFFER","semantic","setAttribute","accessor","ARRAY_BUFFER","listAttributes","listSemantics","listRefMapKeys","getMaterial","setMaterial","getMode","setMode","listTargets","addTarget","removeTarget","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","PrimitiveTarget","PRIMITIVE_TARGET","Scene","SCENE","Skin","SKIN","skeleton","inverseBindMatrices","joints","getSkeleton","setSkeleton","getInverseBindMatrices","setInverseBindMatrices","INVERSE_BIND_MATRICES","addJoint","joint","removeJoint","listJoints","Texture","TEXTURE","image","getMimeType","extensionToMimeType","setMimeType","getImage","setImage","assertView","Root","ROOT","asset","generator","version","defaultScene","accessors","animations","buffers","cameras","materials","meshes","nodes","scenes","skins","textures","_extensions","event","_addChildOfRoot","setDefaultScene","getDefaultScene","extensionName","otherExtension","getAsset","listExtensionsUsed","listExtensionsRequired","filter","isRequired","_enableExtension","_disableExtension","delete","listScenes","listNodes","listCameras","listSkins","listMeshes","listMaterials","listTextures","listAnimations","listAccessors","listBuffers","Document","_graph","Graph","_root","_logger","getRoot","getGraph","getLogger","setLogger","logger","merge","thisExtension","createExtension","setRequired","visited","propertyMap","Map","edge","listEdges","thisProp","otherProp","p","resolved","transforms","map","transform","find","ext","createScene","createNode","createCamera","createSkin","createMesh","createPrimitive","createPrimitiveTarget","createMaterial","createTexture","createAnimation","createAnimationChannel","createAnimationSampler","createAccessor","createBuffer","Extension","document","prereadTypes","prewriteTypes","readDependencies","writeDependencies","required","properties","_listener","_event","_addExtensionProperty","_removeExtensionProperty","removeEventListener","property","install","dependency","preread","_readerContext","_propertyType","prewrite","_writerContext","ReaderContext","jsonDoc","bufferViews","bufferViewBuffers","textureInfos","setTextureInfo","textureInfo","textureInfoDef","textureDef","json","samplerDef","ComponentTypeToTypedArray","5120","5121","5122","5123","5125","5126","DEFAULT_OPTIONS","dependencies","getAccessorArray","accessorDef","context","bufferView","bufferViewDef","TypedArray","componentSize","byteStride","accessorByteOffset","getFloat32","getInt16","getInt8","getInterleavedArray","BufferViewTarget","WriterContext","_doc","options","accessorIndexMap","animationIndexMap","bufferIndexMap","cameraIndexMap","skinIndexMap","materialIndexMap","meshIndexMap","nodeIndexMap","imageIndexMap","textureDefIndexMap","textureInfoDefMap","samplerDefIndexMap","sceneIndexMap","imageBufferViews","otherBufferViews","otherBufferViewsIndexMap","extensionData","bufferURIGenerator","imageURIGenerator","_accessorUsageMap","accessorUsageGroupedByParent","accessorParents","root","numBuffers","numImages","UniqueURIGenerator","basename","createTextureInfoDef","samplerKey","textureKey","createPropertyDef","def","createAccessorDef","listParentEdges","some","fround","createImageData","imageDef","format","GLB","mimeTypeToExtension","createURI","resources","getAccessorUsage","cachedUsage","addAccessorToUsageGroup","prevUsage","listAccessorUsageGroups","entries","USAGE_TO_TARGET","multiple","counter","object","ChunkType","PlatformIO","_dependencies","_vertexLayout","INTERLEAVED","lastReadBytes","lastWriteBytes","registerExtensions","register","registerDependencies","setVertexLayout","layout","readJSON","readAsJSON","_readGLB","_readGLTF","_copyJSON","_readResourcesInternal","_options","doc","validate","assetDef","copyright","extensionsUsed","extensionsRequired","bufferDefs","forEach","bufferDef","toView","sparse","sparseDef","indicesDef","valuesDef","getSparseArray","imageDefs","images","textureDefs","imageData","materialDef","pbrDef","pbrMetallicRoughness","meshDefs","meshDef","primitiveDef","targetNames","targetDef","targetIndex","targetName","accessorIndex","cameraDef","perspectiveDef","perspective","orthoDef","orthographic","nodeDefs","nodeDef","skinDef","nodeIndex","childIndex","animationDef","animation","channelDef","sceneDefs","sceneDef","scene","read","glb","_binaryToJSON","jsonDocument","isExternalBuffer","isExternalImage","binaryToJSON","extensionsRegistered","concatAccessors","bufferIndex","bufferByteOffset","bufferViewTarget","accessorArray","pad","concat","interleaveAccessors","vertexCount","vertexByteOffset","viewByteOffset","setFloat32","setInt8","setInt16","setUint8","setUint16","setUint32","accessorRefs","uses","textureIndex","groupByParent","accessorEdges","parentAccessors","size","bufferAccessors","bufferAccessorsSet","bufferByteLength","usageGroups","vertexLayout","imagePadding","eq","samplerIndexMap","samplerIndex","write","unused","clean","GLTF","writeJSON","header","jsonText","jsonChunkData","encodeText","jsonChunkHeader","jsonChunk","binBuffer","binChunkData","binChunkHeader","binChunk","jsonContent","readURI","_readResourcesExternal","dirname","pendingResources","async","resource","Promise","_this","all","resolveResource","resourceUUID","createBufferFromDataURI","jsonByteLength","binByteOffset","BIN","@glb.bin","NodeIO","_fetch","_fetchConfig","_fs","_path","_fetchEnabled","require","promises","setAllowHTTP","allow","isAbsoluteURL","response","arrayBuffer","readFile","isGLB","_writeGLB","_writeGLTF","fs","dir","writeFile","pending","resourceURI","writeBinary","DenoIO","Deno","readTextFile","WebIO","fetchConfig","fetch","EventDispatcher","_listeners","listener","listeners","listenerArray","splice","l","_name","_child","_attributes","_disposed","isOnGraph","setChild","isDisposed","_emptySet","_edges","_parentEdges","_childEdges","listChildEdges","edges","createEdge","_registerEdge","_removeEdge","Symbol","_createAttributes","defaultAttributes","swap","old","replacement","attribute","refAttributes","refMap","prevRef","refs","retained","retainedRef","metadata"],"version":3,"file":"core.modern.47e868ec.js.map","sourceRoot":"/__parcel_source_root/"}